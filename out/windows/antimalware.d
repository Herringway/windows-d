module windows.antimalware;

public import system;
public import windows.com;
public import windows.systemservices;

extern(Windows):

enum AMSI_RESULT
{
    AMSI_RESULT_CLEAN = 0,
    AMSI_RESULT_NOT_DETECTED = 1,
    AMSI_RESULT_BLOCKED_BY_ADMIN_START = 16384,
    AMSI_RESULT_BLOCKED_BY_ADMIN_END = 20479,
    AMSI_RESULT_DETECTED = 32768,
}

enum AMSI_ATTRIBUTE
{
    AMSI_ATTRIBUTE_APP_NAME = 0,
    AMSI_ATTRIBUTE_CONTENT_NAME = 1,
    AMSI_ATTRIBUTE_CONTENT_SIZE = 2,
    AMSI_ATTRIBUTE_CONTENT_ADDRESS = 3,
    AMSI_ATTRIBUTE_SESSION = 4,
    AMSI_ATTRIBUTE_REDIRECT_CHAIN_SIZE = 5,
    AMSI_ATTRIBUTE_REDIRECT_CHAIN_ADDRESS = 6,
    AMSI_ATTRIBUTE_ALL_SIZE = 7,
    AMSI_ATTRIBUTE_ALL_ADDRESS = 8,
    AMSI_ATTRIBUTE_QUIET = 9,
}

enum AMSI_UAC_REQUEST_TYPE
{
    AMSI_UAC_REQUEST_TYPE_EXE = 0,
    AMSI_UAC_REQUEST_TYPE_COM = 1,
    AMSI_UAC_REQUEST_TYPE_MSI = 2,
    AMSI_UAC_REQUEST_TYPE_AX = 3,
    AMSI_UAC_REQUEST_TYPE_PACKAGED_APP = 4,
    AMSI_UAC_REQUEST_TYPE_MAX = 5,
}

enum AMSI_UAC_TRUST_STATE
{
    AMSI_UAC_TRUST_STATE_TRUSTED = 0,
    AMSI_UAC_TRUST_STATE_UNTRUSTED = 1,
    AMSI_UAC_TRUST_STATE_BLOCKED = 2,
    AMSI_UAC_TRUST_STATE_MAX = 3,
}

enum AMSI_UAC_MSI_ACTION
{
    AMSI_UAC_MSI_ACTION_INSTALL = 0,
    AMSI_UAC_MSI_ACTION_UNINSTALL = 1,
    AMSI_UAC_MSI_ACTION_UPDATE = 2,
    AMSI_UAC_MSI_ACTION_MAINTENANCE = 3,
    AMSI_UAC_MSI_ACTION_MAX = 4,
}

struct AMSI_UAC_REQUEST_EXE_INFO
{
    uint ulLength;
    const(wchar)* lpwszApplicationName;
    const(wchar)* lpwszCommandLine;
    const(wchar)* lpwszDLLParameter;
}

struct AMSI_UAC_REQUEST_COM_INFO
{
    uint ulLength;
    const(wchar)* lpwszServerBinary;
    const(wchar)* lpwszRequestor;
    Guid Clsid;
}

struct AMSI_UAC_REQUEST_MSI_INFO
{
    uint ulLength;
    AMSI_UAC_MSI_ACTION MsiAction;
    const(wchar)* lpwszProductName;
    const(wchar)* lpwszVersion;
    const(wchar)* lpwszLanguage;
    const(wchar)* lpwszManufacturer;
    const(wchar)* lpwszPackagePath;
    const(wchar)* lpwszPackageSource;
    uint ulUpdates;
    ushort** ppwszUpdates;
    ushort** ppwszUpdateSources;
}

struct AMSI_UAC_REQUEST_AX_INFO
{
    uint ulLength;
    const(wchar)* lpwszLocalInstallPath;
    const(wchar)* lpwszSourceURL;
}

struct AMSI_UAC_REQUEST_PACKAGED_APP_INFO
{
    uint ulLength;
    const(wchar)* lpwszApplicationName;
    const(wchar)* lpwszCommandLine;
    const(wchar)* lpPackageFamilyName;
    const(wchar)* lpApplicationId;
}

struct AMSI_UAC_REQUEST_CONTEXT
{
    uint ulLength;
    uint ulRequestorProcessId;
    AMSI_UAC_TRUST_STATE UACTrustState;
    AMSI_UAC_REQUEST_TYPE Type;
    _RequestType_e__Union RequestType;
    BOOL bAutoElevateRequest;
}

const GUID IID_IAmsiStream = {0x3E47F2E5, 0x81D4, 0x4D3B, [0x89, 0x7F, 0x54, 0x50, 0x96, 0x77, 0x03, 0x73]};
@GUID(0x3E47F2E5, 0x81D4, 0x4D3B, [0x89, 0x7F, 0x54, 0x50, 0x96, 0x77, 0x03, 0x73]);
interface IAmsiStream : IUnknown
{
    HRESULT GetAttribute(AMSI_ATTRIBUTE attribute, uint dataSize, ubyte* data, uint* retData);
    HRESULT Read(ulong position, uint size, ubyte* buffer, uint* readSize);
}

const GUID IID_IAntimalwareProvider = {0xB2CABFE3, 0xFE04, 0x42B1, [0xA5, 0xDF, 0x08, 0xD4, 0x83, 0xD4, 0xD1, 0x25]};
@GUID(0xB2CABFE3, 0xFE04, 0x42B1, [0xA5, 0xDF, 0x08, 0xD4, 0x83, 0xD4, 0xD1, 0x25]);
interface IAntimalwareProvider : IUnknown
{
    HRESULT Scan(IAmsiStream stream, AMSI_RESULT* result);
    void CloseSession(ulong session);
    HRESULT DisplayName(ushort** displayName);
}

const GUID IID_IAntimalwareUacProvider = {0xB2CABFE4, 0xFE04, 0x42B1, [0xA5, 0xDF, 0x08, 0xD4, 0x83, 0xD4, 0xD1, 0x25]};
@GUID(0xB2CABFE4, 0xFE04, 0x42B1, [0xA5, 0xDF, 0x08, 0xD4, 0x83, 0xD4, 0xD1, 0x25]);
interface IAntimalwareUacProvider : IUnknown
{
    HRESULT UacScan(AMSI_UAC_REQUEST_CONTEXT* context, AMSI_RESULT* result);
    HRESULT DisplayName(ushort** displayName);
}

const GUID IID_IAntimalware = {0x82D29C2E, 0xF062, 0x44E6, [0xB5, 0xC9, 0x3D, 0x9A, 0x2F, 0x24, 0xA2, 0xDF]};
@GUID(0x82D29C2E, 0xF062, 0x44E6, [0xB5, 0xC9, 0x3D, 0x9A, 0x2F, 0x24, 0xA2, 0xDF]);
interface IAntimalware : IUnknown
{
    HRESULT Scan(IAmsiStream stream, AMSI_RESULT* result, IAntimalwareProvider* provider);
    void CloseSession(ulong session);
}

const GUID CLSID_CAntimalware = {0xFDB00E52, 0xA214, 0x4AA1, [0x8F, 0xBA, 0x43, 0x57, 0xBB, 0x00, 0x72, 0xEC]};
@GUID(0xFDB00E52, 0xA214, 0x4AA1, [0x8F, 0xBA, 0x43, 0x57, 0xBB, 0x00, 0x72, 0xEC]);
struct CAntimalware;

struct HAMSICONTEXT__
{
    int unused;
}

struct HAMSISESSION__
{
    int unused;
}

@DllImport("Amsi.dll")
HRESULT AmsiInitialize(const(wchar)* appName, int* amsiContext);

@DllImport("Amsi.dll")
void AmsiUninitialize(int amsiContext);

@DllImport("Amsi.dll")
HRESULT AmsiOpenSession(int amsiContext, int* amsiSession);

@DllImport("Amsi.dll")
void AmsiCloseSession(int amsiContext, int amsiSession);

@DllImport("Amsi.dll")
HRESULT AmsiScanBuffer(int amsiContext, char* buffer, uint length, const(wchar)* contentName, int amsiSession, AMSI_RESULT* result);

@DllImport("Amsi.dll")
HRESULT AmsiScanString(int amsiContext, const(wchar)* string, const(wchar)* contentName, int amsiSession, AMSI_RESULT* result);

