module windows.direct3d12;

public import windows.core;
public import windows.com : HRESULT, IUnknown;
public import windows.direct3d11 : D3D_CBUFFER_TYPE, D3D_FEATURE_LEVEL, D3D_INTERPOLATION_MODE, D3D_MIN_PRECISION,
                                   D3D_NAME, D3D_PARAMETER_FLAGS, D3D_PRIMITIVE, D3D_PRIMITIVE_TOPOLOGY,
                                   D3D_REGISTER_COMPONENT_TYPE, D3D_RESOURCE_RETURN_TYPE, D3D_SHADER_INPUT_TYPE,
                                   D3D_SHADER_VARIABLE_CLASS, D3D_SHADER_VARIABLE_TYPE, D3D_SRV_DIMENSION,
                                   D3D_TESSELLATOR_DOMAIN, D3D_TESSELLATOR_OUTPUT_PRIMITIVE,
                                   D3D_TESSELLATOR_PARTITIONING, ID3D11Device, ID3D11DeviceContext, ID3D11Resource,
                                   ID3DBlob;
public import windows.displaydevices : RECT;
public import windows.dxgi : DXGI_FORMAT, DXGI_SAMPLE_DESC;
public import windows.kernel : LUID;
public import windows.systemservices : BOOL, HANDLE, SECURITY_ATTRIBUTES;
public import windows.winrt : IInspectable;
public import windows.windowsandmessaging : HWND;

extern(Windows):


// Enums


enum : int
{
    D3D12_COMMAND_LIST_TYPE_DIRECT        = 0x00000000,
    D3D12_COMMAND_LIST_TYPE_BUNDLE        = 0x00000001,
    D3D12_COMMAND_LIST_TYPE_COMPUTE       = 0x00000002,
    D3D12_COMMAND_LIST_TYPE_COPY          = 0x00000003,
    D3D12_COMMAND_LIST_TYPE_VIDEO_DECODE  = 0x00000004,
    D3D12_COMMAND_LIST_TYPE_VIDEO_PROCESS = 0x00000005,
    D3D12_COMMAND_LIST_TYPE_VIDEO_ENCODE  = 0x00000006,
}
alias D3D12_COMMAND_LIST_TYPE = int;

enum : int
{
    D3D12_COMMAND_QUEUE_FLAG_NONE                = 0x00000000,
    D3D12_COMMAND_QUEUE_FLAG_DISABLE_GPU_TIMEOUT = 0x00000001,
}
alias D3D12_COMMAND_QUEUE_FLAGS = int;

enum : int
{
    D3D12_COMMAND_QUEUE_PRIORITY_NORMAL          = 0x00000000,
    D3D12_COMMAND_QUEUE_PRIORITY_HIGH            = 0x00000064,
    D3D12_COMMAND_QUEUE_PRIORITY_GLOBAL_REALTIME = 0x00002710,
}
alias D3D12_COMMAND_QUEUE_PRIORITY = int;

enum : int
{
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_UNDEFINED = 0x00000000,
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_POINT     = 0x00000001,
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_LINE      = 0x00000002,
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE  = 0x00000003,
    D3D12_PRIMITIVE_TOPOLOGY_TYPE_PATCH     = 0x00000004,
}
alias D3D12_PRIMITIVE_TOPOLOGY_TYPE = int;

enum : int
{
    D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA   = 0x00000000,
    D3D12_INPUT_CLASSIFICATION_PER_INSTANCE_DATA = 0x00000001,
}
alias D3D12_INPUT_CLASSIFICATION = int;

enum : int
{
    D3D12_FILL_MODE_WIREFRAME = 0x00000002,
    D3D12_FILL_MODE_SOLID     = 0x00000003,
}
alias D3D12_FILL_MODE = int;

enum : int
{
    D3D12_CULL_MODE_NONE  = 0x00000001,
    D3D12_CULL_MODE_FRONT = 0x00000002,
    D3D12_CULL_MODE_BACK  = 0x00000003,
}
alias D3D12_CULL_MODE = int;

enum : int
{
    D3D12_COMPARISON_FUNC_NEVER         = 0x00000001,
    D3D12_COMPARISON_FUNC_LESS          = 0x00000002,
    D3D12_COMPARISON_FUNC_EQUAL         = 0x00000003,
    D3D12_COMPARISON_FUNC_LESS_EQUAL    = 0x00000004,
    D3D12_COMPARISON_FUNC_GREATER       = 0x00000005,
    D3D12_COMPARISON_FUNC_NOT_EQUAL     = 0x00000006,
    D3D12_COMPARISON_FUNC_GREATER_EQUAL = 0x00000007,
    D3D12_COMPARISON_FUNC_ALWAYS        = 0x00000008,
}
alias D3D12_COMPARISON_FUNC = int;

enum : int
{
    D3D12_DEPTH_WRITE_MASK_ZERO = 0x00000000,
    D3D12_DEPTH_WRITE_MASK_ALL  = 0x00000001,
}
alias D3D12_DEPTH_WRITE_MASK = int;

enum : int
{
    D3D12_STENCIL_OP_KEEP     = 0x00000001,
    D3D12_STENCIL_OP_ZERO     = 0x00000002,
    D3D12_STENCIL_OP_REPLACE  = 0x00000003,
    D3D12_STENCIL_OP_INCR_SAT = 0x00000004,
    D3D12_STENCIL_OP_DECR_SAT = 0x00000005,
    D3D12_STENCIL_OP_INVERT   = 0x00000006,
    D3D12_STENCIL_OP_INCR     = 0x00000007,
    D3D12_STENCIL_OP_DECR     = 0x00000008,
}
alias D3D12_STENCIL_OP = int;

enum : int
{
    D3D12_BLEND_ZERO             = 0x00000001,
    D3D12_BLEND_ONE              = 0x00000002,
    D3D12_BLEND_SRC_COLOR        = 0x00000003,
    D3D12_BLEND_INV_SRC_COLOR    = 0x00000004,
    D3D12_BLEND_SRC_ALPHA        = 0x00000005,
    D3D12_BLEND_INV_SRC_ALPHA    = 0x00000006,
    D3D12_BLEND_DEST_ALPHA       = 0x00000007,
    D3D12_BLEND_INV_DEST_ALPHA   = 0x00000008,
    D3D12_BLEND_DEST_COLOR       = 0x00000009,
    D3D12_BLEND_INV_DEST_COLOR   = 0x0000000a,
    D3D12_BLEND_SRC_ALPHA_SAT    = 0x0000000b,
    D3D12_BLEND_BLEND_FACTOR     = 0x0000000e,
    D3D12_BLEND_INV_BLEND_FACTOR = 0x0000000f,
    D3D12_BLEND_SRC1_COLOR       = 0x00000010,
    D3D12_BLEND_INV_SRC1_COLOR   = 0x00000011,
    D3D12_BLEND_SRC1_ALPHA       = 0x00000012,
    D3D12_BLEND_INV_SRC1_ALPHA   = 0x00000013,
}
alias D3D12_BLEND = int;

enum : int
{
    D3D12_BLEND_OP_ADD          = 0x00000001,
    D3D12_BLEND_OP_SUBTRACT     = 0x00000002,
    D3D12_BLEND_OP_REV_SUBTRACT = 0x00000003,
    D3D12_BLEND_OP_MIN          = 0x00000004,
    D3D12_BLEND_OP_MAX          = 0x00000005,
}
alias D3D12_BLEND_OP = int;

enum : int
{
    D3D12_COLOR_WRITE_ENABLE_RED   = 0x00000001,
    D3D12_COLOR_WRITE_ENABLE_GREEN = 0x00000002,
    D3D12_COLOR_WRITE_ENABLE_BLUE  = 0x00000004,
    D3D12_COLOR_WRITE_ENABLE_ALPHA = 0x00000008,
    D3D12_COLOR_WRITE_ENABLE_ALL   = 0x0000000f,
}
alias D3D12_COLOR_WRITE_ENABLE = int;

enum : int
{
    D3D12_LOGIC_OP_CLEAR         = 0x00000000,
    D3D12_LOGIC_OP_SET           = 0x00000001,
    D3D12_LOGIC_OP_COPY          = 0x00000002,
    D3D12_LOGIC_OP_COPY_INVERTED = 0x00000003,
    D3D12_LOGIC_OP_NOOP          = 0x00000004,
    D3D12_LOGIC_OP_INVERT        = 0x00000005,
    D3D12_LOGIC_OP_AND           = 0x00000006,
    D3D12_LOGIC_OP_NAND          = 0x00000007,
    D3D12_LOGIC_OP_OR            = 0x00000008,
    D3D12_LOGIC_OP_NOR           = 0x00000009,
    D3D12_LOGIC_OP_XOR           = 0x0000000a,
    D3D12_LOGIC_OP_EQUIV         = 0x0000000b,
    D3D12_LOGIC_OP_AND_REVERSE   = 0x0000000c,
    D3D12_LOGIC_OP_AND_INVERTED  = 0x0000000d,
    D3D12_LOGIC_OP_OR_REVERSE    = 0x0000000e,
    D3D12_LOGIC_OP_OR_INVERTED   = 0x0000000f,
}
alias D3D12_LOGIC_OP = int;

enum : int
{
    D3D12_CONSERVATIVE_RASTERIZATION_MODE_OFF = 0x00000000,
    D3D12_CONSERVATIVE_RASTERIZATION_MODE_ON  = 0x00000001,
}
alias D3D12_CONSERVATIVE_RASTERIZATION_MODE = int;

enum : int
{
    D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_DISABLED   = 0x00000000,
    D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_0xFFFF     = 0x00000001,
    D3D12_INDEX_BUFFER_STRIP_CUT_VALUE_0xFFFFFFFF = 0x00000002,
}
alias D3D12_INDEX_BUFFER_STRIP_CUT_VALUE = int;

enum : int
{
    D3D12_PIPELINE_STATE_FLAG_NONE       = 0x00000000,
    D3D12_PIPELINE_STATE_FLAG_TOOL_DEBUG = 0x00000001,
}
alias D3D12_PIPELINE_STATE_FLAGS = int;

enum : int
{
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_ROOT_SIGNATURE        = 0x00000000,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VS                    = 0x00000001,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PS                    = 0x00000002,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DS                    = 0x00000003,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_HS                    = 0x00000004,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_GS                    = 0x00000005,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CS                    = 0x00000006,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_STREAM_OUTPUT         = 0x00000007,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_BLEND                 = 0x00000008,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_MASK           = 0x00000009,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RASTERIZER            = 0x0000000a,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL         = 0x0000000b,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_INPUT_LAYOUT          = 0x0000000c,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_IB_STRIP_CUT_VALUE    = 0x0000000d,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_PRIMITIVE_TOPOLOGY    = 0x0000000e,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_RENDER_TARGET_FORMATS = 0x0000000f,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL_FORMAT  = 0x00000010,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_SAMPLE_DESC           = 0x00000011,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_NODE_MASK             = 0x00000012,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_CACHED_PSO            = 0x00000013,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_FLAGS                 = 0x00000014,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_DEPTH_STENCIL1        = 0x00000015,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_VIEW_INSTANCING       = 0x00000016,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_AS                    = 0x00000018,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_MS                    = 0x00000019,
    D3D12_PIPELINE_STATE_SUBOBJECT_TYPE_MAX_VALID             = 0x0000001a,
}
alias D3D12_PIPELINE_STATE_SUBOBJECT_TYPE = int;

enum : int
{
    D3D12_FEATURE_D3D12_OPTIONS                         = 0x00000000,
    D3D12_FEATURE_ARCHITECTURE                          = 0x00000001,
    D3D12_FEATURE_FEATURE_LEVELS                        = 0x00000002,
    D3D12_FEATURE_FORMAT_SUPPORT                        = 0x00000003,
    D3D12_FEATURE_MULTISAMPLE_QUALITY_LEVELS            = 0x00000004,
    D3D12_FEATURE_FORMAT_INFO                           = 0x00000005,
    D3D12_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT           = 0x00000006,
    D3D12_FEATURE_SHADER_MODEL                          = 0x00000007,
    D3D12_FEATURE_D3D12_OPTIONS1                        = 0x00000008,
    D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_SUPPORT    = 0x0000000a,
    D3D12_FEATURE_ROOT_SIGNATURE                        = 0x0000000c,
    D3D12_FEATURE_ARCHITECTURE1                         = 0x00000010,
    D3D12_FEATURE_D3D12_OPTIONS2                        = 0x00000012,
    D3D12_FEATURE_SHADER_CACHE                          = 0x00000013,
    D3D12_FEATURE_COMMAND_QUEUE_PRIORITY                = 0x00000014,
    D3D12_FEATURE_D3D12_OPTIONS3                        = 0x00000015,
    D3D12_FEATURE_EXISTING_HEAPS                        = 0x00000016,
    D3D12_FEATURE_D3D12_OPTIONS4                        = 0x00000017,
    D3D12_FEATURE_SERIALIZATION                         = 0x00000018,
    D3D12_FEATURE_CROSS_NODE                            = 0x00000019,
    D3D12_FEATURE_D3D12_OPTIONS5                        = 0x0000001b,
    D3D12_FEATURE_D3D12_OPTIONS6                        = 0x0000001e,
    D3D12_FEATURE_QUERY_META_COMMAND                    = 0x0000001f,
    D3D12_FEATURE_D3D12_OPTIONS7                        = 0x00000020,
    D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPE_COUNT = 0x00000021,
    D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPES      = 0x00000022,
}
alias D3D12_FEATURE = int;

enum : int
{
    D3D12_SHADER_MIN_PRECISION_SUPPORT_NONE   = 0x00000000,
    D3D12_SHADER_MIN_PRECISION_SUPPORT_10_BIT = 0x00000001,
    D3D12_SHADER_MIN_PRECISION_SUPPORT_16_BIT = 0x00000002,
}
alias D3D12_SHADER_MIN_PRECISION_SUPPORT = int;

enum : int
{
    D3D12_TILED_RESOURCES_TIER_NOT_SUPPORTED = 0x00000000,
    D3D12_TILED_RESOURCES_TIER_1             = 0x00000001,
    D3D12_TILED_RESOURCES_TIER_2             = 0x00000002,
    D3D12_TILED_RESOURCES_TIER_3             = 0x00000003,
    D3D12_TILED_RESOURCES_TIER_4             = 0x00000004,
}
alias D3D12_TILED_RESOURCES_TIER = int;

enum : int
{
    D3D12_RESOURCE_BINDING_TIER_1 = 0x00000001,
    D3D12_RESOURCE_BINDING_TIER_2 = 0x00000002,
    D3D12_RESOURCE_BINDING_TIER_3 = 0x00000003,
}
alias D3D12_RESOURCE_BINDING_TIER = int;

enum : int
{
    D3D12_CONSERVATIVE_RASTERIZATION_TIER_NOT_SUPPORTED = 0x00000000,
    D3D12_CONSERVATIVE_RASTERIZATION_TIER_1             = 0x00000001,
    D3D12_CONSERVATIVE_RASTERIZATION_TIER_2             = 0x00000002,
    D3D12_CONSERVATIVE_RASTERIZATION_TIER_3             = 0x00000003,
}
alias D3D12_CONSERVATIVE_RASTERIZATION_TIER = int;

enum : int
{
    D3D12_FORMAT_SUPPORT1_NONE                        = 0x00000000,
    D3D12_FORMAT_SUPPORT1_BUFFER                      = 0x00000001,
    D3D12_FORMAT_SUPPORT1_IA_VERTEX_BUFFER            = 0x00000002,
    D3D12_FORMAT_SUPPORT1_IA_INDEX_BUFFER             = 0x00000004,
    D3D12_FORMAT_SUPPORT1_SO_BUFFER                   = 0x00000008,
    D3D12_FORMAT_SUPPORT1_TEXTURE1D                   = 0x00000010,
    D3D12_FORMAT_SUPPORT1_TEXTURE2D                   = 0x00000020,
    D3D12_FORMAT_SUPPORT1_TEXTURE3D                   = 0x00000040,
    D3D12_FORMAT_SUPPORT1_TEXTURECUBE                 = 0x00000080,
    D3D12_FORMAT_SUPPORT1_SHADER_LOAD                 = 0x00000100,
    D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE               = 0x00000200,
    D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE_COMPARISON    = 0x00000400,
    D3D12_FORMAT_SUPPORT1_SHADER_SAMPLE_MONO_TEXT     = 0x00000800,
    D3D12_FORMAT_SUPPORT1_MIP                         = 0x00001000,
    D3D12_FORMAT_SUPPORT1_RENDER_TARGET               = 0x00004000,
    D3D12_FORMAT_SUPPORT1_BLENDABLE                   = 0x00008000,
    D3D12_FORMAT_SUPPORT1_DEPTH_STENCIL               = 0x00010000,
    D3D12_FORMAT_SUPPORT1_MULTISAMPLE_RESOLVE         = 0x00040000,
    D3D12_FORMAT_SUPPORT1_DISPLAY                     = 0x00080000,
    D3D12_FORMAT_SUPPORT1_CAST_WITHIN_BIT_LAYOUT      = 0x00100000,
    D3D12_FORMAT_SUPPORT1_MULTISAMPLE_RENDERTARGET    = 0x00200000,
    D3D12_FORMAT_SUPPORT1_MULTISAMPLE_LOAD            = 0x00400000,
    D3D12_FORMAT_SUPPORT1_SHADER_GATHER               = 0x00800000,
    D3D12_FORMAT_SUPPORT1_BACK_BUFFER_CAST            = 0x01000000,
    D3D12_FORMAT_SUPPORT1_TYPED_UNORDERED_ACCESS_VIEW = 0x02000000,
    D3D12_FORMAT_SUPPORT1_SHADER_GATHER_COMPARISON    = 0x04000000,
    D3D12_FORMAT_SUPPORT1_DECODER_OUTPUT              = 0x08000000,
    D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_OUTPUT      = 0x10000000,
    D3D12_FORMAT_SUPPORT1_VIDEO_PROCESSOR_INPUT       = 0x20000000,
    D3D12_FORMAT_SUPPORT1_VIDEO_ENCODER               = 0x40000000,
}
alias D3D12_FORMAT_SUPPORT1 = int;

enum : int
{
    D3D12_FORMAT_SUPPORT2_NONE                                         = 0x00000000,
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_ADD                               = 0x00000001,
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS                       = 0x00000002,
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE = 0x00000004,
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE                          = 0x00000008,
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX                 = 0x00000010,
    D3D12_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX               = 0x00000020,
    D3D12_FORMAT_SUPPORT2_UAV_TYPED_LOAD                               = 0x00000040,
    D3D12_FORMAT_SUPPORT2_UAV_TYPED_STORE                              = 0x00000080,
    D3D12_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP                       = 0x00000100,
    D3D12_FORMAT_SUPPORT2_TILED                                        = 0x00000200,
    D3D12_FORMAT_SUPPORT2_MULTIPLANE_OVERLAY                           = 0x00004000,
    D3D12_FORMAT_SUPPORT2_SAMPLER_FEEDBACK                             = 0x00008000,
}
alias D3D12_FORMAT_SUPPORT2 = int;

enum : int
{
    D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_NONE           = 0x00000000,
    D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_TILED_RESOURCE = 0x00000001,
}
alias D3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS = int;

enum : int
{
    D3D12_CROSS_NODE_SHARING_TIER_NOT_SUPPORTED = 0x00000000,
    D3D12_CROSS_NODE_SHARING_TIER_1_EMULATED    = 0x00000001,
    D3D12_CROSS_NODE_SHARING_TIER_1             = 0x00000002,
    D3D12_CROSS_NODE_SHARING_TIER_2             = 0x00000003,
    D3D12_CROSS_NODE_SHARING_TIER_3             = 0x00000004,
}
alias D3D12_CROSS_NODE_SHARING_TIER = int;

enum : int
{
    D3D12_RESOURCE_HEAP_TIER_1 = 0x00000001,
    D3D12_RESOURCE_HEAP_TIER_2 = 0x00000002,
}
alias D3D12_RESOURCE_HEAP_TIER = int;

enum : int
{
    D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_NOT_SUPPORTED = 0x00000000,
    D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_1             = 0x00000001,
    D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER_2             = 0x00000002,
}
alias D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER = int;

enum : int
{
    D3D12_VIEW_INSTANCING_TIER_NOT_SUPPORTED = 0x00000000,
    D3D12_VIEW_INSTANCING_TIER_1             = 0x00000001,
    D3D12_VIEW_INSTANCING_TIER_2             = 0x00000002,
    D3D12_VIEW_INSTANCING_TIER_3             = 0x00000003,
}
alias D3D12_VIEW_INSTANCING_TIER = int;

enum : int
{
    D3D_ROOT_SIGNATURE_VERSION_1   = 0x00000001,
    D3D_ROOT_SIGNATURE_VERSION_1_0 = 0x00000001,
    D3D_ROOT_SIGNATURE_VERSION_1_1 = 0x00000002,
}
alias D3D_ROOT_SIGNATURE_VERSION = int;

enum : int
{
    D3D_SHADER_MODEL_5_1 = 0x00000051,
    D3D_SHADER_MODEL_6_0 = 0x00000060,
    D3D_SHADER_MODEL_6_1 = 0x00000061,
    D3D_SHADER_MODEL_6_2 = 0x00000062,
    D3D_SHADER_MODEL_6_3 = 0x00000063,
    D3D_SHADER_MODEL_6_4 = 0x00000064,
    D3D_SHADER_MODEL_6_5 = 0x00000065,
    D3D_SHADER_MODEL_6_6 = 0x00000066,
}
alias D3D_SHADER_MODEL = int;

enum : int
{
    D3D12_SHADER_CACHE_SUPPORT_NONE                   = 0x00000000,
    D3D12_SHADER_CACHE_SUPPORT_SINGLE_PSO             = 0x00000001,
    D3D12_SHADER_CACHE_SUPPORT_LIBRARY                = 0x00000002,
    D3D12_SHADER_CACHE_SUPPORT_AUTOMATIC_INPROC_CACHE = 0x00000004,
    D3D12_SHADER_CACHE_SUPPORT_AUTOMATIC_DISK_CACHE   = 0x00000008,
}
alias D3D12_SHADER_CACHE_SUPPORT_FLAGS = int;

enum : int
{
    D3D12_COMMAND_LIST_SUPPORT_FLAG_NONE          = 0x00000000,
    D3D12_COMMAND_LIST_SUPPORT_FLAG_DIRECT        = 0x00000001,
    D3D12_COMMAND_LIST_SUPPORT_FLAG_BUNDLE        = 0x00000002,
    D3D12_COMMAND_LIST_SUPPORT_FLAG_COMPUTE       = 0x00000004,
    D3D12_COMMAND_LIST_SUPPORT_FLAG_COPY          = 0x00000008,
    D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_DECODE  = 0x00000010,
    D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_PROCESS = 0x00000020,
    D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_ENCODE  = 0x00000040,
}
alias D3D12_COMMAND_LIST_SUPPORT_FLAGS = int;

enum : int
{
    D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_0 = 0x00000000,
    D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_1 = 0x00000001,
    D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER_2 = 0x00000002,
}
alias D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER = int;

enum : int
{
    D3D12_HEAP_SERIALIZATION_TIER_0  = 0x00000000,
    D3D12_HEAP_SERIALIZATION_TIER_10 = 0x0000000a,
}
alias D3D12_HEAP_SERIALIZATION_TIER = int;

enum : int
{
    D3D12_RENDER_PASS_TIER_0 = 0x00000000,
    D3D12_RENDER_PASS_TIER_1 = 0x00000001,
    D3D12_RENDER_PASS_TIER_2 = 0x00000002,
}
alias D3D12_RENDER_PASS_TIER = int;

enum : int
{
    D3D12_RAYTRACING_TIER_NOT_SUPPORTED = 0x00000000,
    D3D12_RAYTRACING_TIER_1_0           = 0x0000000a,
    D3D12_RAYTRACING_TIER_1_1           = 0x0000000b,
}
alias D3D12_RAYTRACING_TIER = int;

enum : int
{
    D3D12_VARIABLE_SHADING_RATE_TIER_NOT_SUPPORTED = 0x00000000,
    D3D12_VARIABLE_SHADING_RATE_TIER_1             = 0x00000001,
    D3D12_VARIABLE_SHADING_RATE_TIER_2             = 0x00000002,
}
alias D3D12_VARIABLE_SHADING_RATE_TIER = int;

enum : int
{
    D3D12_MESH_SHADER_TIER_NOT_SUPPORTED = 0x00000000,
    D3D12_MESH_SHADER_TIER_1             = 0x0000000a,
}
alias D3D12_MESH_SHADER_TIER = int;

enum : int
{
    D3D12_SAMPLER_FEEDBACK_TIER_NOT_SUPPORTED = 0x00000000,
    D3D12_SAMPLER_FEEDBACK_TIER_0_9           = 0x0000005a,
    D3D12_SAMPLER_FEEDBACK_TIER_1_0           = 0x00000064,
}
alias D3D12_SAMPLER_FEEDBACK_TIER = int;

enum : int
{
    D3D12_HEAP_TYPE_DEFAULT  = 0x00000001,
    D3D12_HEAP_TYPE_UPLOAD   = 0x00000002,
    D3D12_HEAP_TYPE_READBACK = 0x00000003,
    D3D12_HEAP_TYPE_CUSTOM   = 0x00000004,
}
alias D3D12_HEAP_TYPE = int;

enum : int
{
    D3D12_CPU_PAGE_PROPERTY_UNKNOWN       = 0x00000000,
    D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE = 0x00000001,
    D3D12_CPU_PAGE_PROPERTY_WRITE_COMBINE = 0x00000002,
    D3D12_CPU_PAGE_PROPERTY_WRITE_BACK    = 0x00000003,
}
alias D3D12_CPU_PAGE_PROPERTY = int;

enum : int
{
    D3D12_MEMORY_POOL_UNKNOWN = 0x00000000,
    D3D12_MEMORY_POOL_L0      = 0x00000001,
    D3D12_MEMORY_POOL_L1      = 0x00000002,
}
alias D3D12_MEMORY_POOL = int;

enum : int
{
    D3D12_HEAP_FLAG_NONE                           = 0x00000000,
    D3D12_HEAP_FLAG_SHARED                         = 0x00000001,
    D3D12_HEAP_FLAG_DENY_BUFFERS                   = 0x00000004,
    D3D12_HEAP_FLAG_ALLOW_DISPLAY                  = 0x00000008,
    D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER           = 0x00000020,
    D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES            = 0x00000040,
    D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES        = 0x00000080,
    D3D12_HEAP_FLAG_HARDWARE_PROTECTED             = 0x00000100,
    D3D12_HEAP_FLAG_ALLOW_WRITE_WATCH              = 0x00000200,
    D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS           = 0x00000400,
    D3D12_HEAP_FLAG_CREATE_NOT_RESIDENT            = 0x00000800,
    D3D12_HEAP_FLAG_CREATE_NOT_ZEROED              = 0x00001000,
    D3D12_HEAP_FLAG_ALLOW_ALL_BUFFERS_AND_TEXTURES = 0x00000000,
    D3D12_HEAP_FLAG_ALLOW_ONLY_BUFFERS             = 0x000000c0,
    D3D12_HEAP_FLAG_ALLOW_ONLY_NON_RT_DS_TEXTURES  = 0x00000044,
    D3D12_HEAP_FLAG_ALLOW_ONLY_RT_DS_TEXTURES      = 0x00000084,
}
alias D3D12_HEAP_FLAGS = int;

enum : int
{
    D3D12_RESOURCE_DIMENSION_UNKNOWN   = 0x00000000,
    D3D12_RESOURCE_DIMENSION_BUFFER    = 0x00000001,
    D3D12_RESOURCE_DIMENSION_TEXTURE1D = 0x00000002,
    D3D12_RESOURCE_DIMENSION_TEXTURE2D = 0x00000003,
    D3D12_RESOURCE_DIMENSION_TEXTURE3D = 0x00000004,
}
alias D3D12_RESOURCE_DIMENSION = int;

enum : int
{
    D3D12_TEXTURE_LAYOUT_UNKNOWN                = 0x00000000,
    D3D12_TEXTURE_LAYOUT_ROW_MAJOR              = 0x00000001,
    D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE = 0x00000002,
    D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE  = 0x00000003,
}
alias D3D12_TEXTURE_LAYOUT = int;

enum : int
{
    D3D12_RESOURCE_FLAG_NONE                        = 0x00000000,
    D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET         = 0x00000001,
    D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL         = 0x00000002,
    D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS      = 0x00000004,
    D3D12_RESOURCE_FLAG_DENY_SHADER_RESOURCE        = 0x00000008,
    D3D12_RESOURCE_FLAG_ALLOW_CROSS_ADAPTER         = 0x00000010,
    D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS   = 0x00000020,
    D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY = 0x00000040,
}
alias D3D12_RESOURCE_FLAGS = int;

enum : int
{
    D3D12_TILE_RANGE_FLAG_NONE              = 0x00000000,
    D3D12_TILE_RANGE_FLAG_NULL              = 0x00000001,
    D3D12_TILE_RANGE_FLAG_SKIP              = 0x00000002,
    D3D12_TILE_RANGE_FLAG_REUSE_SINGLE_TILE = 0x00000004,
}
alias D3D12_TILE_RANGE_FLAGS = int;

enum : int
{
    D3D12_TILE_MAPPING_FLAG_NONE      = 0x00000000,
    D3D12_TILE_MAPPING_FLAG_NO_HAZARD = 0x00000001,
}
alias D3D12_TILE_MAPPING_FLAGS = int;

enum : int
{
    D3D12_TILE_COPY_FLAG_NONE                                     = 0x00000000,
    D3D12_TILE_COPY_FLAG_NO_HAZARD                                = 0x00000001,
    D3D12_TILE_COPY_FLAG_LINEAR_BUFFER_TO_SWIZZLED_TILED_RESOURCE = 0x00000002,
    D3D12_TILE_COPY_FLAG_SWIZZLED_TILED_RESOURCE_TO_LINEAR_BUFFER = 0x00000004,
}
alias D3D12_TILE_COPY_FLAGS = int;

enum : int
{
    D3D12_RESOURCE_STATE_COMMON                            = 0x00000000,
    D3D12_RESOURCE_STATE_VERTEX_AND_CONSTANT_BUFFER        = 0x00000001,
    D3D12_RESOURCE_STATE_INDEX_BUFFER                      = 0x00000002,
    D3D12_RESOURCE_STATE_RENDER_TARGET                     = 0x00000004,
    D3D12_RESOURCE_STATE_UNORDERED_ACCESS                  = 0x00000008,
    D3D12_RESOURCE_STATE_DEPTH_WRITE                       = 0x00000010,
    D3D12_RESOURCE_STATE_DEPTH_READ                        = 0x00000020,
    D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE         = 0x00000040,
    D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE             = 0x00000080,
    D3D12_RESOURCE_STATE_STREAM_OUT                        = 0x00000100,
    D3D12_RESOURCE_STATE_INDIRECT_ARGUMENT                 = 0x00000200,
    D3D12_RESOURCE_STATE_COPY_DEST                         = 0x00000400,
    D3D12_RESOURCE_STATE_COPY_SOURCE                       = 0x00000800,
    D3D12_RESOURCE_STATE_RESOLVE_DEST                      = 0x00001000,
    D3D12_RESOURCE_STATE_RESOLVE_SOURCE                    = 0x00002000,
    D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE = 0x00400000,
    D3D12_RESOURCE_STATE_SHADING_RATE_SOURCE               = 0x01000000,
    D3D12_RESOURCE_STATE_GENERIC_READ                      = 0x00000ac3,
    D3D12_RESOURCE_STATE_PRESENT                           = 0x00000000,
    D3D12_RESOURCE_STATE_PREDICATION                       = 0x00000200,
    D3D12_RESOURCE_STATE_VIDEO_DECODE_READ                 = 0x00010000,
    D3D12_RESOURCE_STATE_VIDEO_DECODE_WRITE                = 0x00020000,
    D3D12_RESOURCE_STATE_VIDEO_PROCESS_READ                = 0x00040000,
    D3D12_RESOURCE_STATE_VIDEO_PROCESS_WRITE               = 0x00080000,
    D3D12_RESOURCE_STATE_VIDEO_ENCODE_READ                 = 0x00200000,
    D3D12_RESOURCE_STATE_VIDEO_ENCODE_WRITE                = 0x00800000,
}
alias D3D12_RESOURCE_STATES = int;

enum : int
{
    D3D12_RESOURCE_BARRIER_TYPE_TRANSITION = 0x00000000,
    D3D12_RESOURCE_BARRIER_TYPE_ALIASING   = 0x00000001,
    D3D12_RESOURCE_BARRIER_TYPE_UAV        = 0x00000002,
}
alias D3D12_RESOURCE_BARRIER_TYPE = int;

enum : int
{
    D3D12_RESOURCE_BARRIER_FLAG_NONE       = 0x00000000,
    D3D12_RESOURCE_BARRIER_FLAG_BEGIN_ONLY = 0x00000001,
    D3D12_RESOURCE_BARRIER_FLAG_END_ONLY   = 0x00000002,
}
alias D3D12_RESOURCE_BARRIER_FLAGS = int;

enum : int
{
    D3D12_TEXTURE_COPY_TYPE_SUBRESOURCE_INDEX = 0x00000000,
    D3D12_TEXTURE_COPY_TYPE_PLACED_FOOTPRINT  = 0x00000001,
}
alias D3D12_TEXTURE_COPY_TYPE = int;

enum : int
{
    D3D12_RESOLVE_MODE_DECOMPRESS              = 0x00000000,
    D3D12_RESOLVE_MODE_MIN                     = 0x00000001,
    D3D12_RESOLVE_MODE_MAX                     = 0x00000002,
    D3D12_RESOLVE_MODE_AVERAGE                 = 0x00000003,
    D3D12_RESOLVE_MODE_ENCODE_SAMPLER_FEEDBACK = 0x00000004,
    D3D12_RESOLVE_MODE_DECODE_SAMPLER_FEEDBACK = 0x00000005,
}
alias D3D12_RESOLVE_MODE = int;

enum : int
{
    D3D12_VIEW_INSTANCING_FLAG_NONE                         = 0x00000000,
    D3D12_VIEW_INSTANCING_FLAG_ENABLE_VIEW_INSTANCE_MASKING = 0x00000001,
}
alias D3D12_VIEW_INSTANCING_FLAGS = int;

enum : int
{
    D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_0 = 0x00000000,
    D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_1 = 0x00000001,
    D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_2 = 0x00000002,
    D3D12_SHADER_COMPONENT_MAPPING_FROM_MEMORY_COMPONENT_3 = 0x00000003,
    D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_0           = 0x00000004,
    D3D12_SHADER_COMPONENT_MAPPING_FORCE_VALUE_1           = 0x00000005,
}
alias D3D12_SHADER_COMPONENT_MAPPING = int;

enum : int
{
    D3D12_BUFFER_SRV_FLAG_NONE = 0x00000000,
    D3D12_BUFFER_SRV_FLAG_RAW  = 0x00000001,
}
alias D3D12_BUFFER_SRV_FLAGS = int;

enum : int
{
    D3D12_SRV_DIMENSION_UNKNOWN                           = 0x00000000,
    D3D12_SRV_DIMENSION_BUFFER                            = 0x00000001,
    D3D12_SRV_DIMENSION_TEXTURE1D                         = 0x00000002,
    D3D12_SRV_DIMENSION_TEXTURE1DARRAY                    = 0x00000003,
    D3D12_SRV_DIMENSION_TEXTURE2D                         = 0x00000004,
    D3D12_SRV_DIMENSION_TEXTURE2DARRAY                    = 0x00000005,
    D3D12_SRV_DIMENSION_TEXTURE2DMS                       = 0x00000006,
    D3D12_SRV_DIMENSION_TEXTURE2DMSARRAY                  = 0x00000007,
    D3D12_SRV_DIMENSION_TEXTURE3D                         = 0x00000008,
    D3D12_SRV_DIMENSION_TEXTURECUBE                       = 0x00000009,
    D3D12_SRV_DIMENSION_TEXTURECUBEARRAY                  = 0x0000000a,
    D3D12_SRV_DIMENSION_RAYTRACING_ACCELERATION_STRUCTURE = 0x0000000b,
}
alias D3D12_SRV_DIMENSION = int;

enum : int
{
    D3D12_FILTER_MIN_MAG_MIP_POINT                          = 0x00000000,
    D3D12_FILTER_MIN_MAG_POINT_MIP_LINEAR                   = 0x00000001,
    D3D12_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT             = 0x00000004,
    D3D12_FILTER_MIN_POINT_MAG_MIP_LINEAR                   = 0x00000005,
    D3D12_FILTER_MIN_LINEAR_MAG_MIP_POINT                   = 0x00000010,
    D3D12_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR            = 0x00000011,
    D3D12_FILTER_MIN_MAG_LINEAR_MIP_POINT                   = 0x00000014,
    D3D12_FILTER_MIN_MAG_MIP_LINEAR                         = 0x00000015,
    D3D12_FILTER_ANISOTROPIC                                = 0x00000055,
    D3D12_FILTER_COMPARISON_MIN_MAG_MIP_POINT               = 0x00000080,
    D3D12_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR        = 0x00000081,
    D3D12_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT  = 0x00000084,
    D3D12_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR        = 0x00000085,
    D3D12_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT        = 0x00000090,
    D3D12_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 0x00000091,
    D3D12_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT        = 0x00000094,
    D3D12_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR              = 0x00000095,
    D3D12_FILTER_COMPARISON_ANISOTROPIC                     = 0x000000d5,
    D3D12_FILTER_MINIMUM_MIN_MAG_MIP_POINT                  = 0x00000100,
    D3D12_FILTER_MINIMUM_MIN_MAG_POINT_MIP_LINEAR           = 0x00000101,
    D3D12_FILTER_MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT     = 0x00000104,
    D3D12_FILTER_MINIMUM_MIN_POINT_MAG_MIP_LINEAR           = 0x00000105,
    D3D12_FILTER_MINIMUM_MIN_LINEAR_MAG_MIP_POINT           = 0x00000110,
    D3D12_FILTER_MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR    = 0x00000111,
    D3D12_FILTER_MINIMUM_MIN_MAG_LINEAR_MIP_POINT           = 0x00000114,
    D3D12_FILTER_MINIMUM_MIN_MAG_MIP_LINEAR                 = 0x00000115,
    D3D12_FILTER_MINIMUM_ANISOTROPIC                        = 0x00000155,
    D3D12_FILTER_MAXIMUM_MIN_MAG_MIP_POINT                  = 0x00000180,
    D3D12_FILTER_MAXIMUM_MIN_MAG_POINT_MIP_LINEAR           = 0x00000181,
    D3D12_FILTER_MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT     = 0x00000184,
    D3D12_FILTER_MAXIMUM_MIN_POINT_MAG_MIP_LINEAR           = 0x00000185,
    D3D12_FILTER_MAXIMUM_MIN_LINEAR_MAG_MIP_POINT           = 0x00000190,
    D3D12_FILTER_MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR    = 0x00000191,
    D3D12_FILTER_MAXIMUM_MIN_MAG_LINEAR_MIP_POINT           = 0x00000194,
    D3D12_FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR                 = 0x00000195,
    D3D12_FILTER_MAXIMUM_ANISOTROPIC                        = 0x000001d5,
}
alias D3D12_FILTER = int;

enum : int
{
    D3D12_FILTER_TYPE_POINT  = 0x00000000,
    D3D12_FILTER_TYPE_LINEAR = 0x00000001,
}
alias D3D12_FILTER_TYPE = int;

enum : int
{
    D3D12_FILTER_REDUCTION_TYPE_STANDARD   = 0x00000000,
    D3D12_FILTER_REDUCTION_TYPE_COMPARISON = 0x00000001,
    D3D12_FILTER_REDUCTION_TYPE_MINIMUM    = 0x00000002,
    D3D12_FILTER_REDUCTION_TYPE_MAXIMUM    = 0x00000003,
}
alias D3D12_FILTER_REDUCTION_TYPE = int;

enum : int
{
    D3D12_TEXTURE_ADDRESS_MODE_WRAP        = 0x00000001,
    D3D12_TEXTURE_ADDRESS_MODE_MIRROR      = 0x00000002,
    D3D12_TEXTURE_ADDRESS_MODE_CLAMP       = 0x00000003,
    D3D12_TEXTURE_ADDRESS_MODE_BORDER      = 0x00000004,
    D3D12_TEXTURE_ADDRESS_MODE_MIRROR_ONCE = 0x00000005,
}
alias D3D12_TEXTURE_ADDRESS_MODE = int;

enum : int
{
    D3D12_BUFFER_UAV_FLAG_NONE = 0x00000000,
    D3D12_BUFFER_UAV_FLAG_RAW  = 0x00000001,
}
alias D3D12_BUFFER_UAV_FLAGS = int;

enum : int
{
    D3D12_UAV_DIMENSION_UNKNOWN        = 0x00000000,
    D3D12_UAV_DIMENSION_BUFFER         = 0x00000001,
    D3D12_UAV_DIMENSION_TEXTURE1D      = 0x00000002,
    D3D12_UAV_DIMENSION_TEXTURE1DARRAY = 0x00000003,
    D3D12_UAV_DIMENSION_TEXTURE2D      = 0x00000004,
    D3D12_UAV_DIMENSION_TEXTURE2DARRAY = 0x00000005,
    D3D12_UAV_DIMENSION_TEXTURE3D      = 0x00000008,
}
alias D3D12_UAV_DIMENSION = int;

enum : int
{
    D3D12_RTV_DIMENSION_UNKNOWN          = 0x00000000,
    D3D12_RTV_DIMENSION_BUFFER           = 0x00000001,
    D3D12_RTV_DIMENSION_TEXTURE1D        = 0x00000002,
    D3D12_RTV_DIMENSION_TEXTURE1DARRAY   = 0x00000003,
    D3D12_RTV_DIMENSION_TEXTURE2D        = 0x00000004,
    D3D12_RTV_DIMENSION_TEXTURE2DARRAY   = 0x00000005,
    D3D12_RTV_DIMENSION_TEXTURE2DMS      = 0x00000006,
    D3D12_RTV_DIMENSION_TEXTURE2DMSARRAY = 0x00000007,
    D3D12_RTV_DIMENSION_TEXTURE3D        = 0x00000008,
}
alias D3D12_RTV_DIMENSION = int;

enum : int
{
    D3D12_DSV_FLAG_NONE              = 0x00000000,
    D3D12_DSV_FLAG_READ_ONLY_DEPTH   = 0x00000001,
    D3D12_DSV_FLAG_READ_ONLY_STENCIL = 0x00000002,
}
alias D3D12_DSV_FLAGS = int;

enum : int
{
    D3D12_DSV_DIMENSION_UNKNOWN          = 0x00000000,
    D3D12_DSV_DIMENSION_TEXTURE1D        = 0x00000001,
    D3D12_DSV_DIMENSION_TEXTURE1DARRAY   = 0x00000002,
    D3D12_DSV_DIMENSION_TEXTURE2D        = 0x00000003,
    D3D12_DSV_DIMENSION_TEXTURE2DARRAY   = 0x00000004,
    D3D12_DSV_DIMENSION_TEXTURE2DMS      = 0x00000005,
    D3D12_DSV_DIMENSION_TEXTURE2DMSARRAY = 0x00000006,
}
alias D3D12_DSV_DIMENSION = int;

enum : int
{
    D3D12_CLEAR_FLAG_DEPTH   = 0x00000001,
    D3D12_CLEAR_FLAG_STENCIL = 0x00000002,
}
alias D3D12_CLEAR_FLAGS = int;

enum : int
{
    D3D12_FENCE_FLAG_NONE                 = 0x00000000,
    D3D12_FENCE_FLAG_SHARED               = 0x00000001,
    D3D12_FENCE_FLAG_SHARED_CROSS_ADAPTER = 0x00000002,
    D3D12_FENCE_FLAG_NON_MONITORED        = 0x00000004,
}
alias D3D12_FENCE_FLAGS = int;

enum : int
{
    D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV = 0x00000000,
    D3D12_DESCRIPTOR_HEAP_TYPE_SAMPLER     = 0x00000001,
    D3D12_DESCRIPTOR_HEAP_TYPE_RTV         = 0x00000002,
    D3D12_DESCRIPTOR_HEAP_TYPE_DSV         = 0x00000003,
    D3D12_DESCRIPTOR_HEAP_TYPE_NUM_TYPES   = 0x00000004,
}
alias D3D12_DESCRIPTOR_HEAP_TYPE = int;

enum : int
{
    D3D12_DESCRIPTOR_HEAP_FLAG_NONE           = 0x00000000,
    D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE = 0x00000001,
}
alias D3D12_DESCRIPTOR_HEAP_FLAGS = int;

enum : int
{
    D3D12_DESCRIPTOR_RANGE_TYPE_SRV     = 0x00000000,
    D3D12_DESCRIPTOR_RANGE_TYPE_UAV     = 0x00000001,
    D3D12_DESCRIPTOR_RANGE_TYPE_CBV     = 0x00000002,
    D3D12_DESCRIPTOR_RANGE_TYPE_SAMPLER = 0x00000003,
}
alias D3D12_DESCRIPTOR_RANGE_TYPE = int;

enum : int
{
    D3D12_SHADER_VISIBILITY_ALL           = 0x00000000,
    D3D12_SHADER_VISIBILITY_VERTEX        = 0x00000001,
    D3D12_SHADER_VISIBILITY_HULL          = 0x00000002,
    D3D12_SHADER_VISIBILITY_DOMAIN        = 0x00000003,
    D3D12_SHADER_VISIBILITY_GEOMETRY      = 0x00000004,
    D3D12_SHADER_VISIBILITY_PIXEL         = 0x00000005,
    D3D12_SHADER_VISIBILITY_AMPLIFICATION = 0x00000006,
    D3D12_SHADER_VISIBILITY_MESH          = 0x00000007,
}
alias D3D12_SHADER_VISIBILITY = int;

enum : int
{
    D3D12_ROOT_PARAMETER_TYPE_DESCRIPTOR_TABLE = 0x00000000,
    D3D12_ROOT_PARAMETER_TYPE_32BIT_CONSTANTS  = 0x00000001,
    D3D12_ROOT_PARAMETER_TYPE_CBV              = 0x00000002,
    D3D12_ROOT_PARAMETER_TYPE_SRV              = 0x00000003,
    D3D12_ROOT_PARAMETER_TYPE_UAV              = 0x00000004,
}
alias D3D12_ROOT_PARAMETER_TYPE = int;

enum : int
{
    D3D12_ROOT_SIGNATURE_FLAG_NONE                                  = 0x00000000,
    D3D12_ROOT_SIGNATURE_FLAG_ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT    = 0x00000001,
    D3D12_ROOT_SIGNATURE_FLAG_DENY_VERTEX_SHADER_ROOT_ACCESS        = 0x00000002,
    D3D12_ROOT_SIGNATURE_FLAG_DENY_HULL_SHADER_ROOT_ACCESS          = 0x00000004,
    D3D12_ROOT_SIGNATURE_FLAG_DENY_DOMAIN_SHADER_ROOT_ACCESS        = 0x00000008,
    D3D12_ROOT_SIGNATURE_FLAG_DENY_GEOMETRY_SHADER_ROOT_ACCESS      = 0x00000010,
    D3D12_ROOT_SIGNATURE_FLAG_DENY_PIXEL_SHADER_ROOT_ACCESS         = 0x00000020,
    D3D12_ROOT_SIGNATURE_FLAG_ALLOW_STREAM_OUTPUT                   = 0x00000040,
    D3D12_ROOT_SIGNATURE_FLAG_LOCAL_ROOT_SIGNATURE                  = 0x00000080,
    D3D12_ROOT_SIGNATURE_FLAG_DENY_AMPLIFICATION_SHADER_ROOT_ACCESS = 0x00000100,
    D3D12_ROOT_SIGNATURE_FLAG_DENY_MESH_SHADER_ROOT_ACCESS          = 0x00000200,
}
alias D3D12_ROOT_SIGNATURE_FLAGS = int;

enum : int
{
    D3D12_STATIC_BORDER_COLOR_TRANSPARENT_BLACK = 0x00000000,
    D3D12_STATIC_BORDER_COLOR_OPAQUE_BLACK      = 0x00000001,
    D3D12_STATIC_BORDER_COLOR_OPAQUE_WHITE      = 0x00000002,
}
alias D3D12_STATIC_BORDER_COLOR = int;

enum : int
{
    D3D12_DESCRIPTOR_RANGE_FLAG_NONE                                            = 0x00000000,
    D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_VOLATILE                            = 0x00000001,
    D3D12_DESCRIPTOR_RANGE_FLAG_DATA_VOLATILE                                   = 0x00000002,
    D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC_WHILE_SET_AT_EXECUTE                = 0x00000004,
    D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC                                     = 0x00000008,
    D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_STATIC_KEEPING_BUFFER_BOUNDS_CHECKS = 0x00010000,
}
alias D3D12_DESCRIPTOR_RANGE_FLAGS = int;

enum : int
{
    D3D12_ROOT_DESCRIPTOR_FLAG_NONE                             = 0x00000000,
    D3D12_ROOT_DESCRIPTOR_FLAG_DATA_VOLATILE                    = 0x00000002,
    D3D12_ROOT_DESCRIPTOR_FLAG_DATA_STATIC_WHILE_SET_AT_EXECUTE = 0x00000004,
    D3D12_ROOT_DESCRIPTOR_FLAG_DATA_STATIC                      = 0x00000008,
}
alias D3D12_ROOT_DESCRIPTOR_FLAGS = int;

enum : int
{
    D3D12_QUERY_HEAP_TYPE_OCCLUSION               = 0x00000000,
    D3D12_QUERY_HEAP_TYPE_TIMESTAMP               = 0x00000001,
    D3D12_QUERY_HEAP_TYPE_PIPELINE_STATISTICS     = 0x00000002,
    D3D12_QUERY_HEAP_TYPE_SO_STATISTICS           = 0x00000003,
    D3D12_QUERY_HEAP_TYPE_VIDEO_DECODE_STATISTICS = 0x00000004,
    D3D12_QUERY_HEAP_TYPE_COPY_QUEUE_TIMESTAMP    = 0x00000005,
}
alias D3D12_QUERY_HEAP_TYPE = int;

enum : int
{
    D3D12_QUERY_TYPE_OCCLUSION               = 0x00000000,
    D3D12_QUERY_TYPE_BINARY_OCCLUSION        = 0x00000001,
    D3D12_QUERY_TYPE_TIMESTAMP               = 0x00000002,
    D3D12_QUERY_TYPE_PIPELINE_STATISTICS     = 0x00000003,
    D3D12_QUERY_TYPE_SO_STATISTICS_STREAM0   = 0x00000004,
    D3D12_QUERY_TYPE_SO_STATISTICS_STREAM1   = 0x00000005,
    D3D12_QUERY_TYPE_SO_STATISTICS_STREAM2   = 0x00000006,
    D3D12_QUERY_TYPE_SO_STATISTICS_STREAM3   = 0x00000007,
    D3D12_QUERY_TYPE_VIDEO_DECODE_STATISTICS = 0x00000008,
}
alias D3D12_QUERY_TYPE = int;

enum : int
{
    D3D12_PREDICATION_OP_EQUAL_ZERO     = 0x00000000,
    D3D12_PREDICATION_OP_NOT_EQUAL_ZERO = 0x00000001,
}
alias D3D12_PREDICATION_OP = int;

enum : int
{
    D3D12_INDIRECT_ARGUMENT_TYPE_DRAW                  = 0x00000000,
    D3D12_INDIRECT_ARGUMENT_TYPE_DRAW_INDEXED          = 0x00000001,
    D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH              = 0x00000002,
    D3D12_INDIRECT_ARGUMENT_TYPE_VERTEX_BUFFER_VIEW    = 0x00000003,
    D3D12_INDIRECT_ARGUMENT_TYPE_INDEX_BUFFER_VIEW     = 0x00000004,
    D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT              = 0x00000005,
    D3D12_INDIRECT_ARGUMENT_TYPE_CONSTANT_BUFFER_VIEW  = 0x00000006,
    D3D12_INDIRECT_ARGUMENT_TYPE_SHADER_RESOURCE_VIEW  = 0x00000007,
    D3D12_INDIRECT_ARGUMENT_TYPE_UNORDERED_ACCESS_VIEW = 0x00000008,
    D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_RAYS         = 0x00000009,
    D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_MESH         = 0x0000000a,
}
alias D3D12_INDIRECT_ARGUMENT_TYPE = int;

enum : int
{
    D3D12_WRITEBUFFERIMMEDIATE_MODE_DEFAULT    = 0x00000000,
    D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_IN  = 0x00000001,
    D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_OUT = 0x00000002,
}
alias D3D12_WRITEBUFFERIMMEDIATE_MODE = int;

enum : int
{
    D3D12_MULTIPLE_FENCE_WAIT_FLAG_NONE = 0x00000000,
    D3D12_MULTIPLE_FENCE_WAIT_FLAG_ANY  = 0x00000001,
    D3D12_MULTIPLE_FENCE_WAIT_FLAG_ALL  = 0x00000000,
}
alias D3D12_MULTIPLE_FENCE_WAIT_FLAGS = int;

enum : int
{
    D3D12_RESIDENCY_PRIORITY_MINIMUM = 0x28000000,
    D3D12_RESIDENCY_PRIORITY_LOW     = 0x50000000,
    D3D12_RESIDENCY_PRIORITY_NORMAL  = 0x78000000,
    D3D12_RESIDENCY_PRIORITY_HIGH    = 0xa0010000,
    D3D12_RESIDENCY_PRIORITY_MAXIMUM = 0xc8000000,
}
alias D3D12_RESIDENCY_PRIORITY = int;

enum : int
{
    D3D12_RESIDENCY_FLAG_NONE            = 0x00000000,
    D3D12_RESIDENCY_FLAG_DENY_OVERBUDGET = 0x00000001,
}
alias D3D12_RESIDENCY_FLAGS = int;

enum : int
{
    D3D12_COMMAND_LIST_FLAG_NONE = 0x00000000,
}
alias D3D12_COMMAND_LIST_FLAGS = int;

enum : int
{
    D3D12_COMMAND_POOL_FLAG_NONE = 0x00000000,
}
alias D3D12_COMMAND_POOL_FLAGS = int;

enum : int
{
    D3D12_COMMAND_RECORDER_FLAG_NONE = 0x00000000,
}
alias D3D12_COMMAND_RECORDER_FLAGS = int;

enum : int
{
    D3D12_PROTECTED_SESSION_STATUS_OK      = 0x00000000,
    D3D12_PROTECTED_SESSION_STATUS_INVALID = 0x00000001,
}
alias D3D12_PROTECTED_SESSION_STATUS = int;

enum : int
{
    D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAG_NONE      = 0x00000000,
    D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAG_SUPPORTED = 0x00000001,
}
alias D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAGS = int;

enum : int
{
    D3D12_PROTECTED_RESOURCE_SESSION_FLAG_NONE = 0x00000000,
}
alias D3D12_PROTECTED_RESOURCE_SESSION_FLAGS = int;

enum : int
{
    D3D12_LIFETIME_STATE_IN_USE     = 0x00000000,
    D3D12_LIFETIME_STATE_NOT_IN_USE = 0x00000001,
}
alias D3D12_LIFETIME_STATE = int;

enum : int
{
    D3D12_META_COMMAND_PARAMETER_TYPE_FLOAT                                       = 0x00000000,
    D3D12_META_COMMAND_PARAMETER_TYPE_UINT64                                      = 0x00000001,
    D3D12_META_COMMAND_PARAMETER_TYPE_GPU_VIRTUAL_ADDRESS                         = 0x00000002,
    D3D12_META_COMMAND_PARAMETER_TYPE_CPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV = 0x00000003,
    D3D12_META_COMMAND_PARAMETER_TYPE_GPU_DESCRIPTOR_HANDLE_HEAP_TYPE_CBV_SRV_UAV = 0x00000004,
}
alias D3D12_META_COMMAND_PARAMETER_TYPE = int;

enum : int
{
    D3D12_META_COMMAND_PARAMETER_FLAG_INPUT  = 0x00000001,
    D3D12_META_COMMAND_PARAMETER_FLAG_OUTPUT = 0x00000002,
}
alias D3D12_META_COMMAND_PARAMETER_FLAGS = int;

enum : int
{
    D3D12_META_COMMAND_PARAMETER_STAGE_CREATION       = 0x00000000,
    D3D12_META_COMMAND_PARAMETER_STAGE_INITIALIZATION = 0x00000001,
    D3D12_META_COMMAND_PARAMETER_STAGE_EXECUTION      = 0x00000002,
}
alias D3D12_META_COMMAND_PARAMETER_STAGE = int;

enum : int
{
    D3D12_GRAPHICS_STATE_NONE                    = 0x00000000,
    D3D12_GRAPHICS_STATE_IA_VERTEX_BUFFERS       = 0x00000001,
    D3D12_GRAPHICS_STATE_IA_INDEX_BUFFER         = 0x00000002,
    D3D12_GRAPHICS_STATE_IA_PRIMITIVE_TOPOLOGY   = 0x00000004,
    D3D12_GRAPHICS_STATE_DESCRIPTOR_HEAP         = 0x00000008,
    D3D12_GRAPHICS_STATE_GRAPHICS_ROOT_SIGNATURE = 0x00000010,
    D3D12_GRAPHICS_STATE_COMPUTE_ROOT_SIGNATURE  = 0x00000020,
    D3D12_GRAPHICS_STATE_RS_VIEWPORTS            = 0x00000040,
    D3D12_GRAPHICS_STATE_RS_SCISSOR_RECTS        = 0x00000080,
    D3D12_GRAPHICS_STATE_PREDICATION             = 0x00000100,
    D3D12_GRAPHICS_STATE_OM_RENDER_TARGETS       = 0x00000200,
    D3D12_GRAPHICS_STATE_OM_STENCIL_REF          = 0x00000400,
    D3D12_GRAPHICS_STATE_OM_BLEND_FACTOR         = 0x00000800,
    D3D12_GRAPHICS_STATE_PIPELINE_STATE          = 0x00001000,
    D3D12_GRAPHICS_STATE_SO_TARGETS              = 0x00002000,
    D3D12_GRAPHICS_STATE_OM_DEPTH_BOUNDS         = 0x00004000,
    D3D12_GRAPHICS_STATE_SAMPLE_POSITIONS        = 0x00008000,
    D3D12_GRAPHICS_STATE_VIEW_INSTANCE_MASK      = 0x00010000,
}
alias D3D12_GRAPHICS_STATES = int;

enum : int
{
    D3D12_STATE_SUBOBJECT_TYPE_STATE_OBJECT_CONFIG                   = 0x00000000,
    D3D12_STATE_SUBOBJECT_TYPE_GLOBAL_ROOT_SIGNATURE                 = 0x00000001,
    D3D12_STATE_SUBOBJECT_TYPE_LOCAL_ROOT_SIGNATURE                  = 0x00000002,
    D3D12_STATE_SUBOBJECT_TYPE_NODE_MASK                             = 0x00000003,
    D3D12_STATE_SUBOBJECT_TYPE_DXIL_LIBRARY                          = 0x00000005,
    D3D12_STATE_SUBOBJECT_TYPE_EXISTING_COLLECTION                   = 0x00000006,
    D3D12_STATE_SUBOBJECT_TYPE_SUBOBJECT_TO_EXPORTS_ASSOCIATION      = 0x00000007,
    D3D12_STATE_SUBOBJECT_TYPE_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION = 0x00000008,
    D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_SHADER_CONFIG              = 0x00000009,
    D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG            = 0x0000000a,
    D3D12_STATE_SUBOBJECT_TYPE_HIT_GROUP                             = 0x0000000b,
    D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG1           = 0x0000000c,
    D3D12_STATE_SUBOBJECT_TYPE_MAX_VALID                             = 0x0000000d,
}
alias D3D12_STATE_SUBOBJECT_TYPE = int;

enum : int
{
    D3D12_STATE_OBJECT_FLAG_NONE                                             = 0x00000000,
    D3D12_STATE_OBJECT_FLAG_ALLOW_LOCAL_DEPENDENCIES_ON_EXTERNAL_DEFINITIONS = 0x00000001,
    D3D12_STATE_OBJECT_FLAG_ALLOW_EXTERNAL_DEPENDENCIES_ON_LOCAL_DEFINITIONS = 0x00000002,
    D3D12_STATE_OBJECT_FLAG_ALLOW_STATE_OBJECT_ADDITIONS                     = 0x00000004,
}
alias D3D12_STATE_OBJECT_FLAGS = int;

enum : int
{
    D3D12_EXPORT_FLAG_NONE = 0x00000000,
}
alias D3D12_EXPORT_FLAGS = int;

enum : int
{
    D3D12_HIT_GROUP_TYPE_TRIANGLES            = 0x00000000,
    D3D12_HIT_GROUP_TYPE_PROCEDURAL_PRIMITIVE = 0x00000001,
}
alias D3D12_HIT_GROUP_TYPE = int;

enum : int
{
    D3D12_RAYTRACING_PIPELINE_FLAG_NONE                       = 0x00000000,
    D3D12_RAYTRACING_PIPELINE_FLAG_SKIP_TRIANGLES             = 0x00000100,
    D3D12_RAYTRACING_PIPELINE_FLAG_SKIP_PROCEDURAL_PRIMITIVES = 0x00000200,
}
alias D3D12_RAYTRACING_PIPELINE_FLAGS = int;

enum : int
{
    D3D12_STATE_OBJECT_TYPE_COLLECTION          = 0x00000000,
    D3D12_STATE_OBJECT_TYPE_RAYTRACING_PIPELINE = 0x00000003,
}
alias D3D12_STATE_OBJECT_TYPE = int;

enum : int
{
    D3D12_RAYTRACING_GEOMETRY_FLAG_NONE                           = 0x00000000,
    D3D12_RAYTRACING_GEOMETRY_FLAG_OPAQUE                         = 0x00000001,
    D3D12_RAYTRACING_GEOMETRY_FLAG_NO_DUPLICATE_ANYHIT_INVOCATION = 0x00000002,
}
alias D3D12_RAYTRACING_GEOMETRY_FLAGS = int;

enum : int
{
    D3D12_RAYTRACING_GEOMETRY_TYPE_TRIANGLES                  = 0x00000000,
    D3D12_RAYTRACING_GEOMETRY_TYPE_PROCEDURAL_PRIMITIVE_AABBS = 0x00000001,
}
alias D3D12_RAYTRACING_GEOMETRY_TYPE = int;

enum : int
{
    D3D12_RAYTRACING_INSTANCE_FLAG_NONE                            = 0x00000000,
    D3D12_RAYTRACING_INSTANCE_FLAG_TRIANGLE_CULL_DISABLE           = 0x00000001,
    D3D12_RAYTRACING_INSTANCE_FLAG_TRIANGLE_FRONT_COUNTERCLOCKWISE = 0x00000002,
    D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_OPAQUE                    = 0x00000004,
    D3D12_RAYTRACING_INSTANCE_FLAG_FORCE_NON_OPAQUE                = 0x00000008,
}
alias D3D12_RAYTRACING_INSTANCE_FLAGS = int;

enum : int
{
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_NONE              = 0x00000000,
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_UPDATE      = 0x00000001,
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_COMPACTION  = 0x00000002,
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_TRACE = 0x00000004,
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_BUILD = 0x00000008,
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_MINIMIZE_MEMORY   = 0x00000010,
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PERFORM_UPDATE    = 0x00000020,
}
alias D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS = int;

enum : int
{
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_CLONE                          = 0x00000000,
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_COMPACT                        = 0x00000001,
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_VISUALIZATION_DECODE_FOR_TOOLS = 0x00000002,
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_SERIALIZE                      = 0x00000003,
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_DESERIALIZE                    = 0x00000004,
}
alias D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE = int;

enum : int
{
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL    = 0x00000000,
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL = 0x00000001,
}
alias D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE = int;

enum : int
{
    D3D12_ELEMENTS_LAYOUT_ARRAY             = 0x00000000,
    D3D12_ELEMENTS_LAYOUT_ARRAY_OF_POINTERS = 0x00000001,
}
alias D3D12_ELEMENTS_LAYOUT = int;

enum : int
{
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE      = 0x00000000,
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION = 0x00000001,
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION       = 0x00000002,
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE        = 0x00000003,
}
alias D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE = int;

enum : int
{
    D3D12_SERIALIZED_DATA_RAYTRACING_ACCELERATION_STRUCTURE = 0x00000000,
}
alias D3D12_SERIALIZED_DATA_TYPE = int;

enum : int
{
    D3D12_DRIVER_MATCHING_IDENTIFIER_COMPATIBLE_WITH_DEVICE = 0x00000000,
    D3D12_DRIVER_MATCHING_IDENTIFIER_UNSUPPORTED_TYPE       = 0x00000001,
    D3D12_DRIVER_MATCHING_IDENTIFIER_UNRECOGNIZED           = 0x00000002,
    D3D12_DRIVER_MATCHING_IDENTIFIER_INCOMPATIBLE_VERSION   = 0x00000003,
    D3D12_DRIVER_MATCHING_IDENTIFIER_INCOMPATIBLE_TYPE      = 0x00000004,
}
alias D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS = int;

enum : int
{
    D3D12_RAY_FLAG_NONE                            = 0x00000000,
    D3D12_RAY_FLAG_FORCE_OPAQUE                    = 0x00000001,
    D3D12_RAY_FLAG_FORCE_NON_OPAQUE                = 0x00000002,
    D3D12_RAY_FLAG_ACCEPT_FIRST_HIT_AND_END_SEARCH = 0x00000004,
    D3D12_RAY_FLAG_SKIP_CLOSEST_HIT_SHADER         = 0x00000008,
    D3D12_RAY_FLAG_CULL_BACK_FACING_TRIANGLES      = 0x00000010,
    D3D12_RAY_FLAG_CULL_FRONT_FACING_TRIANGLES     = 0x00000020,
    D3D12_RAY_FLAG_CULL_OPAQUE                     = 0x00000040,
    D3D12_RAY_FLAG_CULL_NON_OPAQUE                 = 0x00000080,
    D3D12_RAY_FLAG_SKIP_TRIANGLES                  = 0x00000100,
    D3D12_RAY_FLAG_SKIP_PROCEDURAL_PRIMITIVES      = 0x00000200,
}
alias D3D12_RAY_FLAGS = int;

enum : int
{
    D3D12_HIT_KIND_TRIANGLE_FRONT_FACE = 0x000000fe,
    D3D12_HIT_KIND_TRIANGLE_BACK_FACE  = 0x000000ff,
}
alias D3D12_HIT_KIND = int;

enum : int
{
    D3D12_AUTO_BREADCRUMB_OP_SETMARKER                                        = 0x00000000,
    D3D12_AUTO_BREADCRUMB_OP_BEGINEVENT                                       = 0x00000001,
    D3D12_AUTO_BREADCRUMB_OP_ENDEVENT                                         = 0x00000002,
    D3D12_AUTO_BREADCRUMB_OP_DRAWINSTANCED                                    = 0x00000003,
    D3D12_AUTO_BREADCRUMB_OP_DRAWINDEXEDINSTANCED                             = 0x00000004,
    D3D12_AUTO_BREADCRUMB_OP_EXECUTEINDIRECT                                  = 0x00000005,
    D3D12_AUTO_BREADCRUMB_OP_DISPATCH                                         = 0x00000006,
    D3D12_AUTO_BREADCRUMB_OP_COPYBUFFERREGION                                 = 0x00000007,
    D3D12_AUTO_BREADCRUMB_OP_COPYTEXTUREREGION                                = 0x00000008,
    D3D12_AUTO_BREADCRUMB_OP_COPYRESOURCE                                     = 0x00000009,
    D3D12_AUTO_BREADCRUMB_OP_COPYTILES                                        = 0x0000000a,
    D3D12_AUTO_BREADCRUMB_OP_RESOLVESUBRESOURCE                               = 0x0000000b,
    D3D12_AUTO_BREADCRUMB_OP_CLEARRENDERTARGETVIEW                            = 0x0000000c,
    D3D12_AUTO_BREADCRUMB_OP_CLEARUNORDEREDACCESSVIEW                         = 0x0000000d,
    D3D12_AUTO_BREADCRUMB_OP_CLEARDEPTHSTENCILVIEW                            = 0x0000000e,
    D3D12_AUTO_BREADCRUMB_OP_RESOURCEBARRIER                                  = 0x0000000f,
    D3D12_AUTO_BREADCRUMB_OP_EXECUTEBUNDLE                                    = 0x00000010,
    D3D12_AUTO_BREADCRUMB_OP_PRESENT                                          = 0x00000011,
    D3D12_AUTO_BREADCRUMB_OP_RESOLVEQUERYDATA                                 = 0x00000012,
    D3D12_AUTO_BREADCRUMB_OP_BEGINSUBMISSION                                  = 0x00000013,
    D3D12_AUTO_BREADCRUMB_OP_ENDSUBMISSION                                    = 0x00000014,
    D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME                                      = 0x00000015,
    D3D12_AUTO_BREADCRUMB_OP_PROCESSFRAMES                                    = 0x00000016,
    D3D12_AUTO_BREADCRUMB_OP_ATOMICCOPYBUFFERUINT                             = 0x00000017,
    D3D12_AUTO_BREADCRUMB_OP_ATOMICCOPYBUFFERUINT64                           = 0x00000018,
    D3D12_AUTO_BREADCRUMB_OP_RESOLVESUBRESOURCEREGION                         = 0x00000019,
    D3D12_AUTO_BREADCRUMB_OP_WRITEBUFFERIMMEDIATE                             = 0x0000001a,
    D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME1                                     = 0x0000001b,
    D3D12_AUTO_BREADCRUMB_OP_SETPROTECTEDRESOURCESESSION                      = 0x0000001c,
    D3D12_AUTO_BREADCRUMB_OP_DECODEFRAME2                                     = 0x0000001d,
    D3D12_AUTO_BREADCRUMB_OP_PROCESSFRAMES1                                   = 0x0000001e,
    D3D12_AUTO_BREADCRUMB_OP_BUILDRAYTRACINGACCELERATIONSTRUCTURE             = 0x0000001f,
    D3D12_AUTO_BREADCRUMB_OP_EMITRAYTRACINGACCELERATIONSTRUCTUREPOSTBUILDINFO = 0x00000020,
    D3D12_AUTO_BREADCRUMB_OP_COPYRAYTRACINGACCELERATIONSTRUCTURE              = 0x00000021,
    D3D12_AUTO_BREADCRUMB_OP_DISPATCHRAYS                                     = 0x00000022,
    D3D12_AUTO_BREADCRUMB_OP_INITIALIZEMETACOMMAND                            = 0x00000023,
    D3D12_AUTO_BREADCRUMB_OP_EXECUTEMETACOMMAND                               = 0x00000024,
    D3D12_AUTO_BREADCRUMB_OP_ESTIMATEMOTION                                   = 0x00000025,
    D3D12_AUTO_BREADCRUMB_OP_RESOLVEMOTIONVECTORHEAP                          = 0x00000026,
    D3D12_AUTO_BREADCRUMB_OP_SETPIPELINESTATE1                                = 0x00000027,
    D3D12_AUTO_BREADCRUMB_OP_INITIALIZEEXTENSIONCOMMAND                       = 0x00000028,
    D3D12_AUTO_BREADCRUMB_OP_EXECUTEEXTENSIONCOMMAND                          = 0x00000029,
    D3D12_AUTO_BREADCRUMB_OP_DISPATCHMESH                                     = 0x0000002a,
}
alias D3D12_AUTO_BREADCRUMB_OP = int;

enum : int
{
    D3D12_DRED_VERSION_1_0 = 0x00000001,
    D3D12_DRED_VERSION_1_1 = 0x00000002,
    D3D12_DRED_VERSION_1_2 = 0x00000003,
}
alias D3D12_DRED_VERSION = int;

enum : int
{
    D3D12_DRED_FLAG_NONE                    = 0x00000000,
    D3D12_DRED_FLAG_FORCE_ENABLE            = 0x00000001,
    D3D12_DRED_FLAG_DISABLE_AUTOBREADCRUMBS = 0x00000002,
}
alias D3D12_DRED_FLAGS = int;

enum : int
{
    D3D12_DRED_ENABLEMENT_SYSTEM_CONTROLLED = 0x00000000,
    D3D12_DRED_ENABLEMENT_FORCED_OFF        = 0x00000001,
    D3D12_DRED_ENABLEMENT_FORCED_ON         = 0x00000002,
}
alias D3D12_DRED_ENABLEMENT = int;

enum : int
{
    D3D12_DRED_ALLOCATION_TYPE_COMMAND_QUEUE            = 0x00000013,
    D3D12_DRED_ALLOCATION_TYPE_COMMAND_ALLOCATOR        = 0x00000014,
    D3D12_DRED_ALLOCATION_TYPE_PIPELINE_STATE           = 0x00000015,
    D3D12_DRED_ALLOCATION_TYPE_COMMAND_LIST             = 0x00000016,
    D3D12_DRED_ALLOCATION_TYPE_FENCE                    = 0x00000017,
    D3D12_DRED_ALLOCATION_TYPE_DESCRIPTOR_HEAP          = 0x00000018,
    D3D12_DRED_ALLOCATION_TYPE_HEAP                     = 0x00000019,
    D3D12_DRED_ALLOCATION_TYPE_QUERY_HEAP               = 0x0000001b,
    D3D12_DRED_ALLOCATION_TYPE_COMMAND_SIGNATURE        = 0x0000001c,
    D3D12_DRED_ALLOCATION_TYPE_PIPELINE_LIBRARY         = 0x0000001d,
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_DECODER            = 0x0000001e,
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_PROCESSOR          = 0x00000020,
    D3D12_DRED_ALLOCATION_TYPE_RESOURCE                 = 0x00000022,
    D3D12_DRED_ALLOCATION_TYPE_PASS                     = 0x00000023,
    D3D12_DRED_ALLOCATION_TYPE_CRYPTOSESSION            = 0x00000024,
    D3D12_DRED_ALLOCATION_TYPE_CRYPTOSESSIONPOLICY      = 0x00000025,
    D3D12_DRED_ALLOCATION_TYPE_PROTECTEDRESOURCESESSION = 0x00000026,
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_DECODER_HEAP       = 0x00000027,
    D3D12_DRED_ALLOCATION_TYPE_COMMAND_POOL             = 0x00000028,
    D3D12_DRED_ALLOCATION_TYPE_COMMAND_RECORDER         = 0x00000029,
    D3D12_DRED_ALLOCATION_TYPE_STATE_OBJECT             = 0x0000002a,
    D3D12_DRED_ALLOCATION_TYPE_METACOMMAND              = 0x0000002b,
    D3D12_DRED_ALLOCATION_TYPE_SCHEDULINGGROUP          = 0x0000002c,
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_MOTION_ESTIMATOR   = 0x0000002d,
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_MOTION_VECTOR_HEAP = 0x0000002e,
    D3D12_DRED_ALLOCATION_TYPE_VIDEO_EXTENSION_COMMAND  = 0x0000002f,
    D3D12_DRED_ALLOCATION_TYPE_INVALID                  = 0xffffffff,
}
alias D3D12_DRED_ALLOCATION_TYPE = int;

enum : int
{
    D3D12_BACKGROUND_PROCESSING_MODE_ALLOWED                      = 0x00000000,
    D3D12_BACKGROUND_PROCESSING_MODE_ALLOW_INTRUSIVE_MEASUREMENTS = 0x00000001,
    D3D12_BACKGROUND_PROCESSING_MODE_DISABLE_BACKGROUND_WORK      = 0x00000002,
    D3D12_BACKGROUND_PROCESSING_MODE_DISABLE_PROFILING_BY_SYSTEM  = 0x00000003,
}
alias D3D12_BACKGROUND_PROCESSING_MODE = int;

enum : int
{
    D3D12_MEASUREMENTS_ACTION_KEEP_ALL                     = 0x00000000,
    D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS               = 0x00000001,
    D3D12_MEASUREMENTS_ACTION_COMMIT_RESULTS_HIGH_PRIORITY = 0x00000002,
    D3D12_MEASUREMENTS_ACTION_DISCARD_PREVIOUS             = 0x00000003,
}
alias D3D12_MEASUREMENTS_ACTION = int;

enum : int
{
    D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_DISCARD   = 0x00000000,
    D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_PRESERVE  = 0x00000001,
    D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_CLEAR     = 0x00000002,
    D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_NO_ACCESS = 0x00000003,
}
alias D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE = int;

enum : int
{
    D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_DISCARD   = 0x00000000,
    D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_PRESERVE  = 0x00000001,
    D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_RESOLVE   = 0x00000002,
    D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_NO_ACCESS = 0x00000003,
}
alias D3D12_RENDER_PASS_ENDING_ACCESS_TYPE = int;

enum : int
{
    D3D12_RENDER_PASS_FLAG_NONE             = 0x00000000,
    D3D12_RENDER_PASS_FLAG_ALLOW_UAV_WRITES = 0x00000001,
    D3D12_RENDER_PASS_FLAG_SUSPENDING_PASS  = 0x00000002,
    D3D12_RENDER_PASS_FLAG_RESUMING_PASS    = 0x00000004,
}
alias D3D12_RENDER_PASS_FLAGS = int;

enum : int
{
    D3D12_GPU_BASED_VALIDATION_FLAGS_NONE                   = 0x00000000,
    D3D12_GPU_BASED_VALIDATION_FLAGS_DISABLE_STATE_TRACKING = 0x00000001,
}
alias D3D12_GPU_BASED_VALIDATION_FLAGS = int;

enum : int
{
    D3D12_RLDO_NONE            = 0x00000000,
    D3D12_RLDO_SUMMARY         = 0x00000001,
    D3D12_RLDO_DETAIL          = 0x00000002,
    D3D12_RLDO_IGNORE_INTERNAL = 0x00000004,
}
alias D3D12_RLDO_FLAGS = int;

enum : int
{
    D3D12_DEBUG_DEVICE_PARAMETER_FEATURE_FLAGS                   = 0x00000000,
    D3D12_DEBUG_DEVICE_PARAMETER_GPU_BASED_VALIDATION_SETTINGS   = 0x00000001,
    D3D12_DEBUG_DEVICE_PARAMETER_GPU_SLOWDOWN_PERFORMANCE_FACTOR = 0x00000002,
}
alias D3D12_DEBUG_DEVICE_PARAMETER_TYPE = int;

enum : int
{
    D3D12_DEBUG_FEATURE_NONE                                   = 0x00000000,
    D3D12_DEBUG_FEATURE_ALLOW_BEHAVIOR_CHANGING_DEBUG_AIDS     = 0x00000001,
    D3D12_DEBUG_FEATURE_CONSERVATIVE_RESOURCE_STATE_TRACKING   = 0x00000002,
    D3D12_DEBUG_FEATURE_DISABLE_VIRTUALIZED_BUNDLES_VALIDATION = 0x00000004,
    D3D12_DEBUG_FEATURE_EMULATE_WINDOWS7                       = 0x00000008,
}
alias D3D12_DEBUG_FEATURE = int;

enum : int
{
    D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_NONE                 = 0x00000000,
    D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_STATE_TRACKING_ONLY  = 0x00000001,
    D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_UNGUARDED_VALIDATION = 0x00000002,
    D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE_GUARDED_VALIDATION   = 0x00000003,
    NUM_D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODES                 = 0x00000004,
}
alias D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE = int;

enum : int
{
    D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_NONE                                           = 0x00000000,
    D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_FRONT_LOAD_CREATE_TRACKING_ONLY_SHADERS        = 0x00000001,
    D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_FRONT_LOAD_CREATE_UNGUARDED_VALIDATION_SHADERS = 0x00000002,
    D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAG_FRONT_LOAD_CREATE_GUARDED_VALIDATION_SHADERS   = 0x00000004,
    D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS_VALID_MASK                                    = 0x00000007,
}
alias D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS = int;

enum : int
{
    D3D12_DEBUG_COMMAND_LIST_PARAMETER_GPU_BASED_VALIDATION_SETTINGS = 0x00000000,
}
alias D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE = int;

enum : int
{
    D3D12_MESSAGE_CATEGORY_APPLICATION_DEFINED   = 0x00000000,
    D3D12_MESSAGE_CATEGORY_MISCELLANEOUS         = 0x00000001,
    D3D12_MESSAGE_CATEGORY_INITIALIZATION        = 0x00000002,
    D3D12_MESSAGE_CATEGORY_CLEANUP               = 0x00000003,
    D3D12_MESSAGE_CATEGORY_COMPILATION           = 0x00000004,
    D3D12_MESSAGE_CATEGORY_STATE_CREATION        = 0x00000005,
    D3D12_MESSAGE_CATEGORY_STATE_SETTING         = 0x00000006,
    D3D12_MESSAGE_CATEGORY_STATE_GETTING         = 0x00000007,
    D3D12_MESSAGE_CATEGORY_RESOURCE_MANIPULATION = 0x00000008,
    D3D12_MESSAGE_CATEGORY_EXECUTION             = 0x00000009,
    D3D12_MESSAGE_CATEGORY_SHADER                = 0x0000000a,
}
alias D3D12_MESSAGE_CATEGORY = int;

enum : int
{
    D3D12_MESSAGE_SEVERITY_CORRUPTION = 0x00000000,
    D3D12_MESSAGE_SEVERITY_ERROR      = 0x00000001,
    D3D12_MESSAGE_SEVERITY_WARNING    = 0x00000002,
    D3D12_MESSAGE_SEVERITY_INFO       = 0x00000003,
    D3D12_MESSAGE_SEVERITY_MESSAGE    = 0x00000004,
}
alias D3D12_MESSAGE_SEVERITY = int;

enum : int
{
    D3D12_MESSAGE_ID_UNKNOWN                                                                                       = 0x00000000,
    D3D12_MESSAGE_ID_STRING_FROM_APPLICATION                                                                       = 0x00000001,
    D3D12_MESSAGE_ID_CORRUPTED_THIS                                                                                = 0x00000002,
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER1                                                                          = 0x00000003,
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER2                                                                          = 0x00000004,
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER3                                                                          = 0x00000005,
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER4                                                                          = 0x00000006,
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER5                                                                          = 0x00000007,
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER6                                                                          = 0x00000008,
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER7                                                                          = 0x00000009,
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER8                                                                          = 0x0000000a,
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER9                                                                          = 0x0000000b,
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER10                                                                         = 0x0000000c,
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER11                                                                         = 0x0000000d,
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER12                                                                         = 0x0000000e,
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER13                                                                         = 0x0000000f,
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER14                                                                         = 0x00000010,
    D3D12_MESSAGE_ID_CORRUPTED_PARAMETER15                                                                         = 0x00000011,
    D3D12_MESSAGE_ID_CORRUPTED_MULTITHREADING                                                                      = 0x00000012,
    D3D12_MESSAGE_ID_MESSAGE_REPORTING_OUTOFMEMORY                                                                 = 0x00000013,
    D3D12_MESSAGE_ID_GETPRIVATEDATA_MOREDATA                                                                       = 0x00000014,
    D3D12_MESSAGE_ID_SETPRIVATEDATA_INVALIDFREEDATA                                                                = 0x00000015,
    D3D12_MESSAGE_ID_SETPRIVATEDATA_CHANGINGPARAMS                                                                 = 0x00000018,
    D3D12_MESSAGE_ID_SETPRIVATEDATA_OUTOFMEMORY                                                                    = 0x00000019,
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_UNRECOGNIZEDFORMAT                                                   = 0x0000001a,
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDESC                                                          = 0x0000001b,
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFORMAT                                                        = 0x0000001c,
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDVIDEOPLANESLICE                                               = 0x0000001d,
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDPLANESLICE                                                    = 0x0000001e,
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDIMENSIONS                                                    = 0x0000001f,
    D3D12_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDRESOURCE                                                      = 0x00000020,
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_UNRECOGNIZEDFORMAT                                                     = 0x00000023,
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_UNSUPPORTEDFORMAT                                                      = 0x00000024,
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDESC                                                            = 0x00000025,
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDFORMAT                                                          = 0x00000026,
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDVIDEOPLANESLICE                                                 = 0x00000027,
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDPLANESLICE                                                      = 0x00000028,
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDIMENSIONS                                                      = 0x00000029,
    D3D12_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDRESOURCE                                                        = 0x0000002a,
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_UNRECOGNIZEDFORMAT                                                     = 0x0000002d,
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDESC                                                            = 0x0000002e,
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFORMAT                                                          = 0x0000002f,
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDIMENSIONS                                                      = 0x00000030,
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDRESOURCE                                                        = 0x00000031,
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_OUTOFMEMORY                                                                 = 0x00000034,
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TOOMANYELEMENTS                                                             = 0x00000035,
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDFORMAT                                                               = 0x00000036,
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INCOMPATIBLEFORMAT                                                          = 0x00000037,
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOT                                                                 = 0x00000038,
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDINPUTSLOTCLASS                                                       = 0x00000039,
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_STEPRATESLOTCLASSMISMATCH                                                   = 0x0000003a,
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOTCLASSCHANGE                                                      = 0x0000003b,
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSTEPRATECHANGE                                                       = 0x0000003c,
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDALIGNMENT                                                            = 0x0000003d,
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_DUPLICATESEMANTIC                                                           = 0x0000003e,
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_UNPARSEABLEINPUTSIGNATURE                                                   = 0x0000003f,
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_NULLSEMANTIC                                                                = 0x00000040,
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_MISSINGELEMENT                                                              = 0x00000041,
    D3D12_MESSAGE_ID_CREATEVERTEXSHADER_OUTOFMEMORY                                                                = 0x00000042,
    D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERBYTECODE                                                      = 0x00000043,
    D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERTYPE                                                          = 0x00000044,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_OUTOFMEMORY                                                              = 0x00000045,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERBYTECODE                                                    = 0x00000046,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERTYPE                                                        = 0x00000047,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTOFMEMORY                                              = 0x00000048,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERBYTECODE                                    = 0x00000049,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERTYPE                                        = 0x0000004a,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMENTRIES                                        = 0x0000004b,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSTREAMSTRIDEUNUSED                                 = 0x0000004c,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSLOT0EXPECTED                                      = 0x0000004f,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSLOT                                        = 0x00000050,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_ONLYONEELEMENTPERSLOT                                    = 0x00000051,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCOMPONENTCOUNT                                    = 0x00000052,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTARTCOMPONENTANDCOMPONENTCOUNT                   = 0x00000053,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDGAPDEFINITION                                     = 0x00000054,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_REPEATEDOUTPUT                                           = 0x00000055,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSTREAMSTRIDE                                = 0x00000056,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGSEMANTIC                                          = 0x00000057,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MASKMISMATCH                                             = 0x00000058,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_CANTHAVEONLYGAPS                                         = 0x00000059,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DECLTOOCOMPLEX                                           = 0x0000005a,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGOUTPUTSIGNATURE                                   = 0x0000005b,
    D3D12_MESSAGE_ID_CREATEPIXELSHADER_OUTOFMEMORY                                                                 = 0x0000005c,
    D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERBYTECODE                                                       = 0x0000005d,
    D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERTYPE                                                           = 0x0000005e,
    D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFILLMODE                                                         = 0x0000005f,
    D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDCULLMODE                                                         = 0x00000060,
    D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDDEPTHBIASCLAMP                                                   = 0x00000061,
    D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDSLOPESCALEDDEPTHBIAS                                             = 0x00000062,
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHWRITEMASK                                                 = 0x00000064,
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHFUNC                                                      = 0x00000065,
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFAILOP                                         = 0x00000066,
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILZFAILOP                                        = 0x00000067,
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILPASSOP                                         = 0x00000068,
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFUNC                                           = 0x00000069,
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFAILOP                                          = 0x0000006a,
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILZFAILOP                                         = 0x0000006b,
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILPASSOP                                          = 0x0000006c,
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFUNC                                            = 0x0000006d,
    D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLEND                                                              = 0x0000006f,
    D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLEND                                                             = 0x00000070,
    D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOP                                                               = 0x00000071,
    D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLENDALPHA                                                         = 0x00000072,
    D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLENDALPHA                                                        = 0x00000073,
    D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOPALPHA                                                          = 0x00000074,
    D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDRENDERTARGETWRITEMASK                                                 = 0x00000075,
    D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_INVALID                                                                 = 0x00000087,
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_ROOT_SIGNATURE_NOT_SET                                                      = 0x000000c8,
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_ROOT_SIGNATURE_MISMATCH                                                     = 0x000000c9,
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_NOT_SET                                                       = 0x000000ca,
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_STRIDE_TOO_SMALL                                              = 0x000000d1,
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_BUFFER_TOO_SMALL                                                     = 0x000000d2,
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_NOT_SET                                                        = 0x000000d3,
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_FORMAT_INVALID                                                 = 0x000000d4,
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_BUFFER_TOO_SMALL                                                      = 0x000000d5,
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INVALID_PRIMITIVETOPOLOGY                                                   = 0x000000db,
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_VERTEX_STRIDE_UNALIGNED                                                     = 0x000000dd,
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_INDEX_OFFSET_UNALIGNED                                                      = 0x000000de,
    D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_AT_FAULT                                                               = 0x000000e8,
    D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_POSSIBLY_AT_FAULT                                                      = 0x000000e9,
    D3D12_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_NOT_AT_FAULT                                                           = 0x000000ea,
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TRAILING_DIGIT_IN_SEMANTIC                                                  = 0x000000ef,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_TRAILING_DIGIT_IN_SEMANTIC                               = 0x000000f0,
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_TYPE_MISMATCH                                                               = 0x000000f5,
    D3D12_MESSAGE_ID_CREATEINPUTLAYOUT_EMPTY_LAYOUT                                                                = 0x000000fd,
    D3D12_MESSAGE_ID_LIVE_OBJECT_SUMMARY                                                                           = 0x000000ff,
    D3D12_MESSAGE_ID_LIVE_DEVICE                                                                                   = 0x00000112,
    D3D12_MESSAGE_ID_LIVE_SWAPCHAIN                                                                                = 0x00000113,
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFLAGS                                                           = 0x00000114,
    D3D12_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDCLASSLINKAGE                                                        = 0x00000115,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDCLASSLINKAGE                                                      = 0x00000116,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAMTORASTERIZER                                = 0x00000118,
    D3D12_MESSAGE_ID_CREATEPIXELSHADER_INVALIDCLASSLINKAGE                                                         = 0x0000011b,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAM                                            = 0x0000011c,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDENTRIES                                        = 0x0000011d,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTRIDES                                        = 0x0000011e,
    D3D12_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTRIDES                                        = 0x0000011f,
    D3D12_MESSAGE_ID_CREATEHULLSHADER_OUTOFMEMORY                                                                  = 0x00000121,
    D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERBYTECODE                                                        = 0x00000122,
    D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERTYPE                                                            = 0x00000123,
    D3D12_MESSAGE_ID_CREATEHULLSHADER_INVALIDCLASSLINKAGE                                                          = 0x00000124,
    D3D12_MESSAGE_ID_CREATEDOMAINSHADER_OUTOFMEMORY                                                                = 0x00000126,
    D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERBYTECODE                                                      = 0x00000127,
    D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERTYPE                                                          = 0x00000128,
    D3D12_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCLASSLINKAGE                                                        = 0x00000129,
    D3D12_MESSAGE_ID_RESOURCE_UNMAP_NOTMAPPED                                                                      = 0x00000136,
    D3D12_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_MISMATCHED_DATA_SIZE                                               = 0x0000013e,
    D3D12_MESSAGE_ID_CREATECOMPUTESHADER_OUTOFMEMORY                                                               = 0x00000141,
    D3D12_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDSHADERBYTECODE                                                     = 0x00000142,
    D3D12_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCLASSLINKAGE                                                       = 0x00000143,
    D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEFLOATOPSNOTSUPPORTED                                          = 0x0000014b,
    D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEFLOATOPSNOTSUPPORTED                                            = 0x0000014c,
    D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEFLOATOPSNOTSUPPORTED                                          = 0x0000014d,
    D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEFLOATOPSNOTSUPPORTED                                        = 0x0000014e,
    D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEFLOATOPSNOTSUPPORTED                        = 0x0000014f,
    D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEFLOATOPSNOTSUPPORTED                                           = 0x00000150,
    D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEFLOATOPSNOTSUPPORTED                                         = 0x00000151,
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDRESOURCE                                                     = 0x00000154,
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDESC                                                         = 0x00000155,
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFORMAT                                                       = 0x00000156,
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDVIDEOPLANESLICE                                              = 0x00000157,
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDPLANESLICE                                                   = 0x00000158,
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS                                                   = 0x00000159,
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_UNRECOGNIZEDFORMAT                                                  = 0x0000015a,
    D3D12_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFLAGS                                                        = 0x00000162,
    D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFORCEDSAMPLECOUNT                                                = 0x00000191,
    D3D12_MESSAGE_ID_CREATEBLENDSTATE_INVALIDLOGICOPS                                                              = 0x00000193,
    D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEEXTENSIONSNOTSUPPORTED                                        = 0x0000019a,
    D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEEXTENSIONSNOTSUPPORTED                                          = 0x0000019c,
    D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEEXTENSIONSNOTSUPPORTED                                        = 0x0000019e,
    D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEEXTENSIONSNOTSUPPORTED                                      = 0x000001a0,
    D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEEXTENSIONSNOTSUPPORTED                      = 0x000001a2,
    D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEEXTENSIONSNOTSUPPORTED                                         = 0x000001a4,
    D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEEXTENSIONSNOTSUPPORTED                                       = 0x000001a6,
    D3D12_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_UAVSNOTSUPPORTED                                                    = 0x000001a9,
    D3D12_MESSAGE_ID_DEVICE_CREATEHULLSHADER_UAVSNOTSUPPORTED                                                      = 0x000001aa,
    D3D12_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_UAVSNOTSUPPORTED                                                    = 0x000001ab,
    D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_UAVSNOTSUPPORTED                                                  = 0x000001ac,
    D3D12_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UAVSNOTSUPPORTED                                  = 0x000001ad,
    D3D12_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_UAVSNOTSUPPORTED                                                     = 0x000001ae,
    D3D12_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_UAVSNOTSUPPORTED                                                   = 0x000001af,
    D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDSOURCERECT                                                            = 0x000001bf,
    D3D12_MESSAGE_ID_DEVICE_CLEARVIEW_EMPTYRECT                                                                    = 0x000001c0,
    D3D12_MESSAGE_ID_UPDATETILEMAPPINGS_INVALID_PARAMETER                                                          = 0x000001ed,
    D3D12_MESSAGE_ID_COPYTILEMAPPINGS_INVALID_PARAMETER                                                            = 0x000001ee,
    D3D12_MESSAGE_ID_CREATEDEVICE_INVALIDARGS                                                                      = 0x000001fa,
    D3D12_MESSAGE_ID_CREATEDEVICE_WARNING                                                                          = 0x000001fb,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_TYPE                                                                 = 0x00000207,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_NULL_POINTER                                                                 = 0x00000208,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_SUBRESOURCE                                                          = 0x00000209,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_RESERVED_BITS                                                                = 0x0000020a,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISSING_BIND_FLAGS                                                           = 0x0000020b,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISMATCHING_MISC_FLAGS                                                       = 0x0000020c,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_MATCHING_STATES                                                              = 0x0000020d,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMBINATION                                                          = 0x0000020e,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_BEFORE_AFTER_MISMATCH                                                        = 0x0000020f,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_RESOURCE                                                             = 0x00000210,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_SAMPLE_COUNT                                                                 = 0x00000211,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAGS                                                                = 0x00000212,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMBINED_FLAGS                                                       = 0x00000213,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAGS_FOR_FORMAT                                                     = 0x00000214,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_SPLIT_BARRIER                                                        = 0x00000215,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_UNMATCHED_END                                                                = 0x00000216,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_UNMATCHED_BEGIN                                                              = 0x00000217,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_FLAG                                                                 = 0x00000218,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_COMMAND_LIST_TYPE                                                    = 0x00000219,
    D3D12_MESSAGE_ID_INVALID_SUBRESOURCE_STATE                                                                     = 0x0000021a,
    D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_CONTENTION                                                                  = 0x0000021c,
    D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_RESET                                                                       = 0x0000021d,
    D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_RESET_BUNDLE                                                                = 0x0000021e,
    D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_CANNOT_RESET                                                                = 0x0000021f,
    D3D12_MESSAGE_ID_COMMAND_LIST_OPEN                                                                             = 0x00000220,
    D3D12_MESSAGE_ID_INVALID_BUNDLE_API                                                                            = 0x00000222,
    D3D12_MESSAGE_ID_COMMAND_LIST_CLOSED                                                                           = 0x00000223,
    D3D12_MESSAGE_ID_WRONG_COMMAND_ALLOCATOR_TYPE                                                                  = 0x00000225,
    D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_SYNC                                                                        = 0x00000228,
    D3D12_MESSAGE_ID_COMMAND_LIST_SYNC                                                                             = 0x00000229,
    D3D12_MESSAGE_ID_SET_DESCRIPTOR_HEAP_INVALID                                                                   = 0x0000022a,
    D3D12_MESSAGE_ID_CREATE_COMMANDQUEUE                                                                           = 0x0000022d,
    D3D12_MESSAGE_ID_CREATE_COMMANDALLOCATOR                                                                       = 0x0000022e,
    D3D12_MESSAGE_ID_CREATE_PIPELINESTATE                                                                          = 0x0000022f,
    D3D12_MESSAGE_ID_CREATE_COMMANDLIST12                                                                          = 0x00000230,
    D3D12_MESSAGE_ID_CREATE_RESOURCE                                                                               = 0x00000232,
    D3D12_MESSAGE_ID_CREATE_DESCRIPTORHEAP                                                                         = 0x00000233,
    D3D12_MESSAGE_ID_CREATE_ROOTSIGNATURE                                                                          = 0x00000234,
    D3D12_MESSAGE_ID_CREATE_LIBRARY                                                                                = 0x00000235,
    D3D12_MESSAGE_ID_CREATE_HEAP                                                                                   = 0x00000236,
    D3D12_MESSAGE_ID_CREATE_MONITOREDFENCE                                                                         = 0x00000237,
    D3D12_MESSAGE_ID_CREATE_QUERYHEAP                                                                              = 0x00000238,
    D3D12_MESSAGE_ID_CREATE_COMMANDSIGNATURE                                                                       = 0x00000239,
    D3D12_MESSAGE_ID_LIVE_COMMANDQUEUE                                                                             = 0x0000023a,
    D3D12_MESSAGE_ID_LIVE_COMMANDALLOCATOR                                                                         = 0x0000023b,
    D3D12_MESSAGE_ID_LIVE_PIPELINESTATE                                                                            = 0x0000023c,
    D3D12_MESSAGE_ID_LIVE_COMMANDLIST12                                                                            = 0x0000023d,
    D3D12_MESSAGE_ID_LIVE_RESOURCE                                                                                 = 0x0000023f,
    D3D12_MESSAGE_ID_LIVE_DESCRIPTORHEAP                                                                           = 0x00000240,
    D3D12_MESSAGE_ID_LIVE_ROOTSIGNATURE                                                                            = 0x00000241,
    D3D12_MESSAGE_ID_LIVE_LIBRARY                                                                                  = 0x00000242,
    D3D12_MESSAGE_ID_LIVE_HEAP                                                                                     = 0x00000243,
    D3D12_MESSAGE_ID_LIVE_MONITOREDFENCE                                                                           = 0x00000244,
    D3D12_MESSAGE_ID_LIVE_QUERYHEAP                                                                                = 0x00000245,
    D3D12_MESSAGE_ID_LIVE_COMMANDSIGNATURE                                                                         = 0x00000246,
    D3D12_MESSAGE_ID_DESTROY_COMMANDQUEUE                                                                          = 0x00000247,
    D3D12_MESSAGE_ID_DESTROY_COMMANDALLOCATOR                                                                      = 0x00000248,
    D3D12_MESSAGE_ID_DESTROY_PIPELINESTATE                                                                         = 0x00000249,
    D3D12_MESSAGE_ID_DESTROY_COMMANDLIST12                                                                         = 0x0000024a,
    D3D12_MESSAGE_ID_DESTROY_RESOURCE                                                                              = 0x0000024c,
    D3D12_MESSAGE_ID_DESTROY_DESCRIPTORHEAP                                                                        = 0x0000024d,
    D3D12_MESSAGE_ID_DESTROY_ROOTSIGNATURE                                                                         = 0x0000024e,
    D3D12_MESSAGE_ID_DESTROY_LIBRARY                                                                               = 0x0000024f,
    D3D12_MESSAGE_ID_DESTROY_HEAP                                                                                  = 0x00000250,
    D3D12_MESSAGE_ID_DESTROY_MONITOREDFENCE                                                                        = 0x00000251,
    D3D12_MESSAGE_ID_DESTROY_QUERYHEAP                                                                             = 0x00000252,
    D3D12_MESSAGE_ID_DESTROY_COMMANDSIGNATURE                                                                      = 0x00000253,
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDIMENSIONS                                                              = 0x00000255,
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDMISCFLAGS                                                               = 0x00000257,
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDARG_RETURN                                                              = 0x0000025a,
    D3D12_MESSAGE_ID_CREATERESOURCE_OUTOFMEMORY_RETURN                                                             = 0x0000025b,
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDESC                                                                    = 0x0000025c,
    D3D12_MESSAGE_ID_POSSIBLY_INVALID_SUBRESOURCE_STATE                                                            = 0x0000025f,
    D3D12_MESSAGE_ID_INVALID_USE_OF_NON_RESIDENT_RESOURCE                                                          = 0x00000260,
    D3D12_MESSAGE_ID_POSSIBLE_INVALID_USE_OF_NON_RESIDENT_RESOURCE                                                 = 0x00000261,
    D3D12_MESSAGE_ID_BUNDLE_PIPELINE_STATE_MISMATCH                                                                = 0x00000262,
    D3D12_MESSAGE_ID_PRIMITIVE_TOPOLOGY_MISMATCH_PIPELINE_STATE                                                    = 0x00000263,
    D3D12_MESSAGE_ID_RENDER_TARGET_FORMAT_MISMATCH_PIPELINE_STATE                                                  = 0x00000265,
    D3D12_MESSAGE_ID_RENDER_TARGET_SAMPLE_DESC_MISMATCH_PIPELINE_STATE                                             = 0x00000266,
    D3D12_MESSAGE_ID_DEPTH_STENCIL_FORMAT_MISMATCH_PIPELINE_STATE                                                  = 0x00000267,
    D3D12_MESSAGE_ID_DEPTH_STENCIL_SAMPLE_DESC_MISMATCH_PIPELINE_STATE                                             = 0x00000268,
    D3D12_MESSAGE_ID_CREATESHADER_INVALIDBYTECODE                                                                  = 0x0000026e,
    D3D12_MESSAGE_ID_CREATEHEAP_NULLDESC                                                                           = 0x0000026f,
    D3D12_MESSAGE_ID_CREATEHEAP_INVALIDSIZE                                                                        = 0x00000270,
    D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDHEAPTYPE                                                               = 0x00000271,
    D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDCPUPAGEPROPERTIES                                                      = 0x00000272,
    D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDMEMORYPOOL                                                             = 0x00000273,
    D3D12_MESSAGE_ID_CREATEHEAP_INVALIDPROPERTIES                                                                  = 0x00000274,
    D3D12_MESSAGE_ID_CREATEHEAP_INVALIDALIGNMENT                                                                   = 0x00000275,
    D3D12_MESSAGE_ID_CREATEHEAP_UNRECOGNIZEDMISCFLAGS                                                              = 0x00000276,
    D3D12_MESSAGE_ID_CREATEHEAP_INVALIDMISCFLAGS                                                                   = 0x00000277,
    D3D12_MESSAGE_ID_CREATEHEAP_INVALIDARG_RETURN                                                                  = 0x00000278,
    D3D12_MESSAGE_ID_CREATEHEAP_OUTOFMEMORY_RETURN                                                                 = 0x00000279,
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLHEAPPROPERTIES                                                      = 0x0000027a,
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDHEAPTYPE                                                    = 0x0000027b,
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDCPUPAGEPROPERTIES                                           = 0x0000027c,
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDMEMORYPOOL                                                  = 0x0000027d,
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDHEAPPROPERTIES                                                   = 0x0000027e,
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_UNRECOGNIZEDHEAPMISCFLAGS                                               = 0x0000027f,
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDHEAPMISCFLAGS                                                    = 0x00000280,
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_INVALIDARG_RETURN                                                       = 0x00000281,
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_OUTOFMEMORY_RETURN                                                      = 0x00000282,
    D3D12_MESSAGE_ID_GETCUSTOMHEAPPROPERTIES_UNRECOGNIZEDHEAPTYPE                                                  = 0x00000283,
    D3D12_MESSAGE_ID_GETCUSTOMHEAPPROPERTIES_INVALIDHEAPTYPE                                                       = 0x00000284,
    D3D12_MESSAGE_ID_CREATE_DESCRIPTOR_HEAP_INVALID_DESC                                                           = 0x00000285,
    D3D12_MESSAGE_ID_INVALID_DESCRIPTOR_HANDLE                                                                     = 0x00000286,
    D3D12_MESSAGE_ID_CREATERASTERIZERSTATE_INVALID_CONSERVATIVERASTERMODE                                          = 0x00000287,
    D3D12_MESSAGE_ID_CREATE_CONSTANT_BUFFER_VIEW_INVALID_RESOURCE                                                  = 0x00000289,
    D3D12_MESSAGE_ID_CREATE_CONSTANT_BUFFER_VIEW_INVALID_DESC                                                      = 0x0000028a,
    D3D12_MESSAGE_ID_CREATE_UNORDEREDACCESS_VIEW_INVALID_COUNTER_USAGE                                             = 0x0000028c,
    D3D12_MESSAGE_ID_COPY_DESCRIPTORS_INVALID_RANGES                                                               = 0x0000028d,
    D3D12_MESSAGE_ID_COPY_DESCRIPTORS_WRITE_ONLY_DESCRIPTOR                                                        = 0x0000028e,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RTV_FORMAT_NOT_UNKNOWN                                            = 0x0000028f,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_RENDER_TARGET_COUNT                                       = 0x00000290,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_VERTEX_SHADER_NOT_SET                                             = 0x00000291,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INPUTLAYOUT_NOT_SET                                               = 0x00000292,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_HS_DS_SIGNATURE_MISMATCH                           = 0x00000293,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_REGISTERINDEX                                      = 0x00000294,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_COMPONENTTYPE                                      = 0x00000295,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_REGISTERMASK                                       = 0x00000296,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_SYSTEMVALUE                                        = 0x00000297,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_NEVERWRITTEN_ALWAYSREADS                           = 0x00000298,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_MINPRECISION                                       = 0x00000299,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_LINKAGE_SEMANTICNAME_NOT_FOUND                             = 0x0000029a,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_XOR_DS_MISMATCH                                                = 0x0000029b,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HULL_SHADER_INPUT_TOPOLOGY_MISMATCH                               = 0x0000029c,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_DS_CONTROL_POINT_COUNT_MISMATCH                                = 0x0000029d,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_DS_TESSELLATOR_DOMAIN_MISMATCH                                 = 0x0000029e,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_USE_OF_CENTER_MULTISAMPLE_PATTERN                         = 0x0000029f,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_USE_OF_FORCED_SAMPLE_COUNT                                = 0x000002a0,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_PRIMITIVETOPOLOGY                                         = 0x000002a1,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_SYSTEMVALUE                                               = 0x000002a2,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_DUAL_SOURCE_BLENDING_CAN_ONLY_HAVE_RENDER_TARGET_0             = 0x000002a3,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_RENDER_TARGET_DOES_NOT_SUPPORT_BLENDING                        = 0x000002a4,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_PS_OUTPUT_TYPE_MISMATCH                                           = 0x000002a5,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_OM_RENDER_TARGET_DOES_NOT_SUPPORT_LOGIC_OPS                       = 0x000002a6,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RENDERTARGETVIEW_NOT_SET                                          = 0x000002a7,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_DEPTHSTENCILVIEW_NOT_SET                                          = 0x000002a8,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_GS_INPUT_PRIMITIVE_MISMATCH                                       = 0x000002a9,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_POSITION_NOT_PRESENT                                              = 0x000002aa,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MISSING_ROOT_SIGNATURE_FLAGS                                      = 0x000002ab,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_INDEX_BUFFER_PROPERTIES                                   = 0x000002ac,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INVALID_SAMPLE_DESC                                               = 0x000002ad,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_HS_ROOT_SIGNATURE_MISMATCH                                        = 0x000002ae,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_DS_ROOT_SIGNATURE_MISMATCH                                        = 0x000002af,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_VS_ROOT_SIGNATURE_MISMATCH                                        = 0x000002b0,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_GS_ROOT_SIGNATURE_MISMATCH                                        = 0x000002b1,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_PS_ROOT_SIGNATURE_MISMATCH                                        = 0x000002b2,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MISSING_ROOT_SIGNATURE                                            = 0x000002b3,
    D3D12_MESSAGE_ID_EXECUTE_BUNDLE_OPEN_BUNDLE                                                                    = 0x000002b4,
    D3D12_MESSAGE_ID_EXECUTE_BUNDLE_DESCRIPTOR_HEAP_MISMATCH                                                       = 0x000002b5,
    D3D12_MESSAGE_ID_EXECUTE_BUNDLE_TYPE                                                                           = 0x000002b6,
    D3D12_MESSAGE_ID_DRAW_EMPTY_SCISSOR_RECTANGLE                                                                  = 0x000002b7,
    D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_BLOB_NOT_FOUND                                                          = 0x000002b8,
    D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_DESERIALIZE_FAILED                                                      = 0x000002b9,
    D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_INVALID_CONFIGURATION                                                   = 0x000002ba,
    D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_NOT_SUPPORTED_ON_DEVICE                                                 = 0x000002bb,
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLRESOURCEPROPERTIES                                                  = 0x000002bc,
    D3D12_MESSAGE_ID_CREATERESOURCEANDHEAP_NULLHEAP                                                                = 0x000002bd,
    D3D12_MESSAGE_ID_GETRESOURCEALLOCATIONINFO_INVALIDRDESCS                                                       = 0x000002be,
    D3D12_MESSAGE_ID_MAKERESIDENT_NULLOBJECTARRAY                                                                  = 0x000002bf,
    D3D12_MESSAGE_ID_EVICT_NULLOBJECTARRAY                                                                         = 0x000002c1,
    D3D12_MESSAGE_ID_SET_DESCRIPTOR_TABLE_INVALID                                                                  = 0x000002c4,
    D3D12_MESSAGE_ID_SET_ROOT_CONSTANT_INVALID                                                                     = 0x000002c5,
    D3D12_MESSAGE_ID_SET_ROOT_CONSTANT_BUFFER_VIEW_INVALID                                                         = 0x000002c6,
    D3D12_MESSAGE_ID_SET_ROOT_SHADER_RESOURCE_VIEW_INVALID                                                         = 0x000002c7,
    D3D12_MESSAGE_ID_SET_ROOT_UNORDERED_ACCESS_VIEW_INVALID                                                        = 0x000002c8,
    D3D12_MESSAGE_ID_SET_VERTEX_BUFFERS_INVALID_DESC                                                               = 0x000002c9,
    D3D12_MESSAGE_ID_SET_INDEX_BUFFER_INVALID_DESC                                                                 = 0x000002cb,
    D3D12_MESSAGE_ID_SET_STREAM_OUTPUT_BUFFERS_INVALID_DESC                                                        = 0x000002cd,
    D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDDIMENSIONALITY                                                     = 0x000002ce,
    D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDLAYOUT                                                             = 0x000002cf,
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDDIMENSIONALITY                                                          = 0x000002d0,
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDALIGNMENT                                                               = 0x000002d1,
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDMIPLEVELS                                                               = 0x000002d2,
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDSAMPLEDESC                                                              = 0x000002d3,
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDLAYOUT                                                                  = 0x000002d4,
    D3D12_MESSAGE_ID_SET_INDEX_BUFFER_INVALID                                                                      = 0x000002d5,
    D3D12_MESSAGE_ID_SET_VERTEX_BUFFERS_INVALID                                                                    = 0x000002d6,
    D3D12_MESSAGE_ID_SET_STREAM_OUTPUT_BUFFERS_INVALID                                                             = 0x000002d7,
    D3D12_MESSAGE_ID_SET_RENDER_TARGETS_INVALID                                                                    = 0x000002d8,
    D3D12_MESSAGE_ID_CREATEQUERY_HEAP_INVALID_PARAMETERS                                                           = 0x000002d9,
    D3D12_MESSAGE_ID_BEGIN_END_QUERY_INVALID_PARAMETERS                                                            = 0x000002db,
    D3D12_MESSAGE_ID_CLOSE_COMMAND_LIST_OPEN_QUERY                                                                 = 0x000002dc,
    D3D12_MESSAGE_ID_RESOLVE_QUERY_DATA_INVALID_PARAMETERS                                                         = 0x000002dd,
    D3D12_MESSAGE_ID_SET_PREDICATION_INVALID_PARAMETERS                                                            = 0x000002de,
    D3D12_MESSAGE_ID_TIMESTAMPS_NOT_SUPPORTED                                                                      = 0x000002df,
    D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDFORMAT                                                             = 0x000002e1,
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDFORMAT                                                                  = 0x000002e2,
    D3D12_MESSAGE_ID_GETCOPYABLEFOOTPRINTS_INVALIDSUBRESOURCERANGE                                                 = 0x000002e3,
    D3D12_MESSAGE_ID_GETCOPYABLEFOOTPRINTS_INVALIDBASEOFFSET                                                       = 0x000002e4,
    D3D12_MESSAGE_ID_GETCOPYABLELAYOUT_INVALIDSUBRESOURCERANGE                                                     = 0x000002e3,
    D3D12_MESSAGE_ID_GETCOPYABLELAYOUT_INVALIDBASEOFFSET                                                           = 0x000002e4,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_INVALID_HEAP                                                                 = 0x000002e5,
    D3D12_MESSAGE_ID_CREATE_SAMPLER_INVALID                                                                        = 0x000002e6,
    D3D12_MESSAGE_ID_CREATECOMMANDSIGNATURE_INVALID                                                                = 0x000002e7,
    D3D12_MESSAGE_ID_EXECUTE_INDIRECT_INVALID_PARAMETERS                                                           = 0x000002e8,
    D3D12_MESSAGE_ID_GETGPUVIRTUALADDRESS_INVALID_RESOURCE_DIMENSION                                               = 0x000002e9,
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDCLEARVALUE                                                              = 0x0000032f,
    D3D12_MESSAGE_ID_CREATERESOURCE_UNRECOGNIZEDCLEARVALUEFORMAT                                                   = 0x00000330,
    D3D12_MESSAGE_ID_CREATERESOURCE_INVALIDCLEARVALUEFORMAT                                                        = 0x00000331,
    D3D12_MESSAGE_ID_CREATERESOURCE_CLEARVALUEDENORMFLUSH                                                          = 0x00000332,
    D3D12_MESSAGE_ID_CLEARRENDERTARGETVIEW_MISMATCHINGCLEARVALUE                                                   = 0x00000334,
    D3D12_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_MISMATCHINGCLEARVALUE                                                   = 0x00000335,
    D3D12_MESSAGE_ID_MAP_INVALIDHEAP                                                                               = 0x00000336,
    D3D12_MESSAGE_ID_UNMAP_INVALIDHEAP                                                                             = 0x00000337,
    D3D12_MESSAGE_ID_MAP_INVALIDRESOURCE                                                                           = 0x00000338,
    D3D12_MESSAGE_ID_UNMAP_INVALIDRESOURCE                                                                         = 0x00000339,
    D3D12_MESSAGE_ID_MAP_INVALIDSUBRESOURCE                                                                        = 0x0000033a,
    D3D12_MESSAGE_ID_UNMAP_INVALIDSUBRESOURCE                                                                      = 0x0000033b,
    D3D12_MESSAGE_ID_MAP_INVALIDRANGE                                                                              = 0x0000033c,
    D3D12_MESSAGE_ID_UNMAP_INVALIDRANGE                                                                            = 0x0000033d,
    D3D12_MESSAGE_ID_MAP_INVALIDDATAPOINTER                                                                        = 0x00000340,
    D3D12_MESSAGE_ID_MAP_INVALIDARG_RETURN                                                                         = 0x00000341,
    D3D12_MESSAGE_ID_MAP_OUTOFMEMORY_RETURN                                                                        = 0x00000342,
    D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_BUNDLENOTSUPPORTED                                                        = 0x00000343,
    D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_COMMANDLISTMISMATCH                                                       = 0x00000344,
    D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_OPENCOMMANDLIST                                                           = 0x00000345,
    D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_FAILEDCOMMANDLIST                                                         = 0x00000346,
    D3D12_MESSAGE_ID_COPYBUFFERREGION_NULLDST                                                                      = 0x00000347,
    D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDDSTRESOURCEDIMENSION                                                  = 0x00000348,
    D3D12_MESSAGE_ID_COPYBUFFERREGION_DSTRANGEOUTOFBOUNDS                                                          = 0x00000349,
    D3D12_MESSAGE_ID_COPYBUFFERREGION_NULLSRC                                                                      = 0x0000034a,
    D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDSRCRESOURCEDIMENSION                                                  = 0x0000034b,
    D3D12_MESSAGE_ID_COPYBUFFERREGION_SRCRANGEOUTOFBOUNDS                                                          = 0x0000034c,
    D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALIDCOPYFLAGS                                                             = 0x0000034d,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_NULLDST                                                                     = 0x0000034e,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDDSTTYPE                                                         = 0x0000034f,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTRESOURCEDIMENSION                                                 = 0x00000350,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTRESOURCE                                                          = 0x00000351,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTSUBRESOURCE                                                       = 0x00000352,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTOFFSET                                                            = 0x00000353,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDDSTFORMAT                                                       = 0x00000354,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTFORMAT                                                            = 0x00000355,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTDIMENSIONS                                                        = 0x00000356,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTROWPITCH                                                          = 0x00000357,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTPLACEMENT                                                         = 0x00000358,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTDSPLACEDFOOTPRINTFORMAT                                           = 0x00000359,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_DSTREGIONOUTOFBOUNDS                                                        = 0x0000035a,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_NULLSRC                                                                     = 0x0000035b,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDSRCTYPE                                                         = 0x0000035c,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCRESOURCEDIMENSION                                                 = 0x0000035d,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCRESOURCE                                                          = 0x0000035e,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCSUBRESOURCE                                                       = 0x0000035f,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCOFFSET                                                            = 0x00000360,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_UNRECOGNIZEDSRCFORMAT                                                       = 0x00000361,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCFORMAT                                                            = 0x00000362,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCDIMENSIONS                                                        = 0x00000363,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCROWPITCH                                                          = 0x00000364,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCPLACEMENT                                                         = 0x00000365,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCDSPLACEDFOOTPRINTFORMAT                                           = 0x00000366,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_SRCREGIONOUTOFBOUNDS                                                        = 0x00000367,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDDSTCOORDINATES                                                       = 0x00000368,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDSRCBOX                                                               = 0x00000369,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_FORMATMISMATCH                                                              = 0x0000036a,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_EMPTYBOX                                                                    = 0x0000036b,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_INVALIDCOPYFLAGS                                                            = 0x0000036c,
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_SUBRESOURCE_INDEX                                                  = 0x0000036d,
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_FORMAT                                                             = 0x0000036e,
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_RESOURCE_MISMATCH                                                          = 0x0000036f,
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALID_SAMPLE_COUNT                                                       = 0x00000370,
    D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_INVALID_SHADER                                                     = 0x00000371,
    D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_CS_ROOT_SIGNATURE_MISMATCH                                         = 0x00000372,
    D3D12_MESSAGE_ID_CREATECOMPUTEPIPELINESTATE_MISSING_ROOT_SIGNATURE                                             = 0x00000373,
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_INVALIDCACHEDBLOB                                                         = 0x00000374,
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBADAPTERMISMATCH                                                 = 0x00000375,
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBDRIVERVERSIONMISMATCH                                           = 0x00000376,
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBDESCMISMATCH                                                    = 0x00000377,
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CACHEDBLOBIGNORED                                                         = 0x00000378,
    D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDHEAP                                                                = 0x00000379,
    D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDRESOURCE                                                            = 0x0000037a,
    D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDBOX                                                                 = 0x0000037b,
    D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_INVALIDSUBRESOURCE                                                         = 0x0000037c,
    D3D12_MESSAGE_ID_WRITETOSUBRESOURCE_EMPTYBOX                                                                   = 0x0000037d,
    D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDHEAP                                                               = 0x0000037e,
    D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDRESOURCE                                                           = 0x0000037f,
    D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDBOX                                                                = 0x00000380,
    D3D12_MESSAGE_ID_READFROMSUBRESOURCE_INVALIDSUBRESOURCE                                                        = 0x00000381,
    D3D12_MESSAGE_ID_READFROMSUBRESOURCE_EMPTYBOX                                                                  = 0x00000382,
    D3D12_MESSAGE_ID_TOO_MANY_NODES_SPECIFIED                                                                      = 0x00000383,
    D3D12_MESSAGE_ID_INVALID_NODE_INDEX                                                                            = 0x00000384,
    D3D12_MESSAGE_ID_GETHEAPPROPERTIES_INVALIDRESOURCE                                                             = 0x00000385,
    D3D12_MESSAGE_ID_NODE_MASK_MISMATCH                                                                            = 0x00000386,
    D3D12_MESSAGE_ID_COMMAND_LIST_OUTOFMEMORY                                                                      = 0x00000387,
    D3D12_MESSAGE_ID_COMMAND_LIST_MULTIPLE_SWAPCHAIN_BUFFER_REFERENCES                                             = 0x00000388,
    D3D12_MESSAGE_ID_COMMAND_LIST_TOO_MANY_SWAPCHAIN_REFERENCES                                                    = 0x00000389,
    D3D12_MESSAGE_ID_COMMAND_QUEUE_TOO_MANY_SWAPCHAIN_REFERENCES                                                   = 0x0000038a,
    D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_WRONGSWAPCHAINBUFFERREFERENCE                                             = 0x0000038b,
    D3D12_MESSAGE_ID_COMMAND_LIST_SETRENDERTARGETS_INVALIDNUMRENDERTARGETS                                         = 0x0000038c,
    D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_TYPE                                                                     = 0x0000038d,
    D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_FLAGS                                                                    = 0x0000038e,
    D3D12_MESSAGE_ID_CREATESHAREDRESOURCE_INVALIDFLAGS                                                             = 0x0000038f,
    D3D12_MESSAGE_ID_CREATESHAREDRESOURCE_INVALIDFORMAT                                                            = 0x00000390,
    D3D12_MESSAGE_ID_CREATESHAREDHEAP_INVALIDFLAGS                                                                 = 0x00000391,
    D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_UNRECOGNIZEDPROPERTIES                                                = 0x00000392,
    D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_INVALIDSIZE                                                           = 0x00000393,
    D3D12_MESSAGE_ID_REFLECTSHAREDPROPERTIES_INVALIDOBJECT                                                         = 0x00000394,
    D3D12_MESSAGE_ID_KEYEDMUTEX_INVALIDOBJECT                                                                      = 0x00000395,
    D3D12_MESSAGE_ID_KEYEDMUTEX_INVALIDKEY                                                                         = 0x00000396,
    D3D12_MESSAGE_ID_KEYEDMUTEX_WRONGSTATE                                                                         = 0x00000397,
    D3D12_MESSAGE_ID_CREATE_QUEUE_INVALID_PRIORITY                                                                 = 0x00000398,
    D3D12_MESSAGE_ID_OBJECT_DELETED_WHILE_STILL_IN_USE                                                             = 0x00000399,
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_INVALID_FLAGS                                                             = 0x0000039a,
    D3D12_MESSAGE_ID_HEAP_ADDRESS_RANGE_HAS_NO_RESOURCE                                                            = 0x0000039b,
    D3D12_MESSAGE_ID_COMMAND_LIST_DRAW_RENDER_TARGET_DELETED                                                       = 0x0000039c,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_ALL_RENDER_TARGETS_HAVE_UNKNOWN_FORMAT                            = 0x0000039d,
    D3D12_MESSAGE_ID_HEAP_ADDRESS_RANGE_INTERSECTS_MULTIPLE_BUFFERS                                                = 0x0000039e,
    D3D12_MESSAGE_ID_EXECUTECOMMANDLISTS_GPU_WRITTEN_READBACK_RESOURCE_MAPPED                                      = 0x0000039f,
    D3D12_MESSAGE_ID_UNMAP_RANGE_NOT_EMPTY                                                                         = 0x000003a1,
    D3D12_MESSAGE_ID_MAP_INVALID_NULLRANGE                                                                         = 0x000003a2,
    D3D12_MESSAGE_ID_UNMAP_INVALID_NULLRANGE                                                                       = 0x000003a3,
    D3D12_MESSAGE_ID_NO_GRAPHICS_API_SUPPORT                                                                       = 0x000003a4,
    D3D12_MESSAGE_ID_NO_COMPUTE_API_SUPPORT                                                                        = 0x000003a5,
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_RESOURCE_FLAGS_NOT_SUPPORTED                                               = 0x000003a6,
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_ROOT_ARGUMENT_UNINITIALIZED                                              = 0x000003a7,
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_HEAP_INDEX_OUT_OF_BOUNDS                                      = 0x000003a8,
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_TABLE_REGISTER_INDEX_OUT_OF_BOUNDS                            = 0x000003a9,
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_UNINITIALIZED                                                 = 0x000003aa,
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_DESCRIPTOR_TYPE_MISMATCH                                                 = 0x000003ab,
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_SRV_RESOURCE_DIMENSION_MISMATCH                                          = 0x000003ac,
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_UAV_RESOURCE_DIMENSION_MISMATCH                                          = 0x000003ad,
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_INCOMPATIBLE_RESOURCE_STATE                                              = 0x000003ae,
    D3D12_MESSAGE_ID_COPYRESOURCE_NULLDST                                                                          = 0x000003af,
    D3D12_MESSAGE_ID_COPYRESOURCE_INVALIDDSTRESOURCE                                                               = 0x000003b0,
    D3D12_MESSAGE_ID_COPYRESOURCE_NULLSRC                                                                          = 0x000003b1,
    D3D12_MESSAGE_ID_COPYRESOURCE_INVALIDSRCRESOURCE                                                               = 0x000003b2,
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_NULLDST                                                                    = 0x000003b3,
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALIDDSTRESOURCE                                                         = 0x000003b4,
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_NULLSRC                                                                    = 0x000003b5,
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_INVALIDSRCRESOURCE                                                         = 0x000003b6,
    D3D12_MESSAGE_ID_PIPELINE_STATE_TYPE_MISMATCH                                                                  = 0x000003b7,
    D3D12_MESSAGE_ID_COMMAND_LIST_DISPATCH_ROOT_SIGNATURE_NOT_SET                                                  = 0x000003b8,
    D3D12_MESSAGE_ID_COMMAND_LIST_DISPATCH_ROOT_SIGNATURE_MISMATCH                                                 = 0x000003b9,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_ZERO_BARRIERS                                                                = 0x000003ba,
    D3D12_MESSAGE_ID_BEGIN_END_EVENT_MISMATCH                                                                      = 0x000003bb,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_POSSIBLE_BEFORE_AFTER_MISMATCH                                               = 0x000003bc,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISMATCHING_BEGIN_END                                                        = 0x000003bd,
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_INVALID_RESOURCE                                                         = 0x000003be,
    D3D12_MESSAGE_ID_USE_OF_ZERO_REFCOUNT_OBJECT                                                                   = 0x000003bf,
    D3D12_MESSAGE_ID_OBJECT_EVICTED_WHILE_STILL_IN_USE                                                             = 0x000003c0,
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_ROOT_DESCRIPTOR_ACCESS_OUT_OF_BOUNDS                                     = 0x000003c1,
    D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_INVALIDLIBRARYBLOB                                                      = 0x000003c2,
    D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_DRIVERVERSIONMISMATCH                                                   = 0x000003c3,
    D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_ADAPTERVERSIONMISMATCH                                                  = 0x000003c4,
    D3D12_MESSAGE_ID_CREATEPIPELINELIBRARY_UNSUPPORTED                                                             = 0x000003c5,
    D3D12_MESSAGE_ID_CREATE_PIPELINELIBRARY                                                                        = 0x000003c6,
    D3D12_MESSAGE_ID_LIVE_PIPELINELIBRARY                                                                          = 0x000003c7,
    D3D12_MESSAGE_ID_DESTROY_PIPELINELIBRARY                                                                       = 0x000003c8,
    D3D12_MESSAGE_ID_STOREPIPELINE_NONAME                                                                          = 0x000003c9,
    D3D12_MESSAGE_ID_STOREPIPELINE_DUPLICATENAME                                                                   = 0x000003ca,
    D3D12_MESSAGE_ID_LOADPIPELINE_NAMENOTFOUND                                                                     = 0x000003cb,
    D3D12_MESSAGE_ID_LOADPIPELINE_INVALIDDESC                                                                      = 0x000003cc,
    D3D12_MESSAGE_ID_PIPELINELIBRARY_SERIALIZE_NOTENOUGHMEMORY                                                     = 0x000003cd,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_PS_OUTPUT_RT_OUTPUT_MISMATCH                                      = 0x000003ce,
    D3D12_MESSAGE_ID_SETEVENTONMULTIPLEFENCECOMPLETION_INVALIDFLAGS                                                = 0x000003cf,
    D3D12_MESSAGE_ID_CREATE_QUEUE_VIDEO_NOT_SUPPORTED                                                              = 0x000003d0,
    D3D12_MESSAGE_ID_CREATE_COMMAND_ALLOCATOR_VIDEO_NOT_SUPPORTED                                                  = 0x000003d1,
    D3D12_MESSAGE_ID_CREATEQUERY_HEAP_VIDEO_DECODE_STATISTICS_NOT_SUPPORTED                                        = 0x000003d2,
    D3D12_MESSAGE_ID_CREATE_VIDEODECODECOMMANDLIST                                                                 = 0x000003d3,
    D3D12_MESSAGE_ID_CREATE_VIDEODECODER                                                                           = 0x000003d4,
    D3D12_MESSAGE_ID_CREATE_VIDEODECODESTREAM                                                                      = 0x000003d5,
    D3D12_MESSAGE_ID_LIVE_VIDEODECODECOMMANDLIST                                                                   = 0x000003d6,
    D3D12_MESSAGE_ID_LIVE_VIDEODECODER                                                                             = 0x000003d7,
    D3D12_MESSAGE_ID_LIVE_VIDEODECODESTREAM                                                                        = 0x000003d8,
    D3D12_MESSAGE_ID_DESTROY_VIDEODECODECOMMANDLIST                                                                = 0x000003d9,
    D3D12_MESSAGE_ID_DESTROY_VIDEODECODER                                                                          = 0x000003da,
    D3D12_MESSAGE_ID_DESTROY_VIDEODECODESTREAM                                                                     = 0x000003db,
    D3D12_MESSAGE_ID_DECODE_FRAME_INVALID_PARAMETERS                                                               = 0x000003dc,
    D3D12_MESSAGE_ID_DEPRECATED_API                                                                                = 0x000003dd,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_MISMATCHING_COMMAND_LIST_TYPE                                                = 0x000003de,
    D3D12_MESSAGE_ID_COMMAND_LIST_DESCRIPTOR_TABLE_NOT_SET                                                         = 0x000003df,
    D3D12_MESSAGE_ID_COMMAND_LIST_ROOT_CONSTANT_BUFFER_VIEW_NOT_SET                                                = 0x000003e0,
    D3D12_MESSAGE_ID_COMMAND_LIST_ROOT_SHADER_RESOURCE_VIEW_NOT_SET                                                = 0x000003e1,
    D3D12_MESSAGE_ID_COMMAND_LIST_ROOT_UNORDERED_ACCESS_VIEW_NOT_SET                                               = 0x000003e2,
    D3D12_MESSAGE_ID_DISCARD_INVALID_SUBRESOURCE_RANGE                                                             = 0x000003e3,
    D3D12_MESSAGE_ID_DISCARD_ONE_SUBRESOURCE_FOR_MIPS_WITH_RECTS                                                   = 0x000003e4,
    D3D12_MESSAGE_ID_DISCARD_NO_RECTS_FOR_NON_TEXTURE2D                                                            = 0x000003e5,
    D3D12_MESSAGE_ID_COPY_ON_SAME_SUBRESOURCE                                                                      = 0x000003e6,
    D3D12_MESSAGE_ID_SETRESIDENCYPRIORITY_INVALID_PAGEABLE                                                         = 0x000003e7,
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_UNSUPPORTED                                                              = 0x000003e8,
    D3D12_MESSAGE_ID_STATIC_DESCRIPTOR_INVALID_DESCRIPTOR_CHANGE                                                   = 0x000003e9,
    D3D12_MESSAGE_ID_DATA_STATIC_DESCRIPTOR_INVALID_DATA_CHANGE                                                    = 0x000003ea,
    D3D12_MESSAGE_ID_DATA_STATIC_WHILE_SET_AT_EXECUTE_DESCRIPTOR_INVALID_DATA_CHANGE                               = 0x000003eb,
    D3D12_MESSAGE_ID_EXECUTE_BUNDLE_STATIC_DESCRIPTOR_DATA_STATIC_NOT_SET                                          = 0x000003ec,
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_RESOURCE_ACCESS_OUT_OF_BOUNDS                                            = 0x000003ed,
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_SAMPLER_MODE_MISMATCH                                                    = 0x000003ee,
    D3D12_MESSAGE_ID_CREATE_FENCE_INVALID_FLAGS                                                                    = 0x000003ef,
    D3D12_MESSAGE_ID_RESOURCE_BARRIER_DUPLICATE_SUBRESOURCE_TRANSITIONS                                            = 0x000003f0,
    D3D12_MESSAGE_ID_SETRESIDENCYPRIORITY_INVALID_PRIORITY                                                         = 0x000003f1,
    D3D12_MESSAGE_ID_CREATE_DESCRIPTOR_HEAP_LARGE_NUM_DESCRIPTORS                                                  = 0x000003f5,
    D3D12_MESSAGE_ID_BEGIN_EVENT                                                                                   = 0x000003f6,
    D3D12_MESSAGE_ID_END_EVENT                                                                                     = 0x000003f7,
    D3D12_MESSAGE_ID_CREATEDEVICE_DEBUG_LAYER_STARTUP_OPTIONS                                                      = 0x000003f8,
    D3D12_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_DEPTHBOUNDSTEST_UNSUPPORTED                                           = 0x000003f9,
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_DUPLICATE_SUBOBJECT                                                       = 0x000003fa,
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_UNKNOWN_SUBOBJECT                                                         = 0x000003fb,
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_ZERO_SIZE_STREAM                                                          = 0x000003fc,
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_INVALID_STREAM                                                            = 0x000003fd,
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_CANNOT_DEDUCE_TYPE                                                        = 0x000003fe,
    D3D12_MESSAGE_ID_COMMAND_LIST_STATIC_DESCRIPTOR_RESOURCE_DIMENSION_MISMATCH                                    = 0x000003ff,
    D3D12_MESSAGE_ID_CREATE_COMMAND_QUEUE_INSUFFICIENT_PRIVILEGE_FOR_GLOBAL_REALTIME                               = 0x00000400,
    D3D12_MESSAGE_ID_CREATE_COMMAND_QUEUE_INSUFFICIENT_HARDWARE_SUPPORT_FOR_GLOBAL_REALTIME                        = 0x00000401,
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_ARCHITECTURE                                                         = 0x00000402,
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_DST                                                                     = 0x00000403,
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DST_RESOURCE_DIMENSION                                               = 0x00000404,
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_DST_RANGE_OUT_OF_BOUNDS                                                      = 0x00000405,
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_SRC                                                                     = 0x00000406,
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_SRC_RESOURCE_DIMENSION                                               = 0x00000407,
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_SRC_RANGE_OUT_OF_BOUNDS                                                      = 0x00000408,
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_OFFSET_ALIGNMENT                                                     = 0x00000409,
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_DEPENDENT_RESOURCES                                                     = 0x0000040a,
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_NULL_DEPENDENT_SUBRESOURCE_RANGES                                            = 0x0000040b,
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DEPENDENT_RESOURCE                                                   = 0x0000040c,
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DEPENDENT_SUBRESOURCE_RANGE                                          = 0x0000040d,
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_DEPENDENT_SUBRESOURCE_OUT_OF_BOUNDS                                          = 0x0000040e,
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_DEPENDENT_RANGE_OUT_OF_BOUNDS                                                = 0x0000040f,
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_ZERO_DEPENDENCIES                                                            = 0x00000410,
    D3D12_MESSAGE_ID_DEVICE_CREATE_SHARED_HANDLE_INVALIDARG                                                        = 0x00000411,
    D3D12_MESSAGE_ID_DESCRIPTOR_HANDLE_WITH_INVALID_RESOURCE                                                       = 0x00000412,
    D3D12_MESSAGE_ID_SETDEPTHBOUNDS_INVALIDARGS                                                                    = 0x00000413,
    D3D12_MESSAGE_ID_GPU_BASED_VALIDATION_RESOURCE_STATE_IMPRECISE                                                 = 0x00000414,
    D3D12_MESSAGE_ID_COMMAND_LIST_PIPELINE_STATE_NOT_SET                                                           = 0x00000415,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_SHADER_MODEL_MISMATCH                                             = 0x00000416,
    D3D12_MESSAGE_ID_OBJECT_ACCESSED_WHILE_STILL_IN_USE                                                            = 0x00000417,
    D3D12_MESSAGE_ID_PROGRAMMABLE_MSAA_UNSUPPORTED                                                                 = 0x00000418,
    D3D12_MESSAGE_ID_SETSAMPLEPOSITIONS_INVALIDARGS                                                                = 0x00000419,
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCEREGION_INVALID_RECT                                                         = 0x0000041a,
    D3D12_MESSAGE_ID_CREATE_VIDEODECODECOMMANDQUEUE                                                                = 0x0000041b,
    D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSCOMMANDLIST                                                                = 0x0000041c,
    D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSCOMMANDQUEUE                                                               = 0x0000041d,
    D3D12_MESSAGE_ID_LIVE_VIDEODECODECOMMANDQUEUE                                                                  = 0x0000041e,
    D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSCOMMANDLIST                                                                  = 0x0000041f,
    D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSCOMMANDQUEUE                                                                 = 0x00000420,
    D3D12_MESSAGE_ID_DESTROY_VIDEODECODECOMMANDQUEUE                                                               = 0x00000421,
    D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSCOMMANDLIST                                                               = 0x00000422,
    D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSCOMMANDQUEUE                                                              = 0x00000423,
    D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSOR                                                                         = 0x00000424,
    D3D12_MESSAGE_ID_CREATE_VIDEOPROCESSSTREAM                                                                     = 0x00000425,
    D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSOR                                                                           = 0x00000426,
    D3D12_MESSAGE_ID_LIVE_VIDEOPROCESSSTREAM                                                                       = 0x00000427,
    D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSOR                                                                        = 0x00000428,
    D3D12_MESSAGE_ID_DESTROY_VIDEOPROCESSSTREAM                                                                    = 0x00000429,
    D3D12_MESSAGE_ID_PROCESS_FRAME_INVALID_PARAMETERS                                                              = 0x0000042a,
    D3D12_MESSAGE_ID_COPY_INVALIDLAYOUT                                                                            = 0x0000042b,
    D3D12_MESSAGE_ID_CREATE_CRYPTO_SESSION                                                                         = 0x0000042c,
    D3D12_MESSAGE_ID_CREATE_CRYPTO_SESSION_POLICY                                                                  = 0x0000042d,
    D3D12_MESSAGE_ID_CREATE_PROTECTED_RESOURCE_SESSION                                                             = 0x0000042e,
    D3D12_MESSAGE_ID_LIVE_CRYPTO_SESSION                                                                           = 0x0000042f,
    D3D12_MESSAGE_ID_LIVE_CRYPTO_SESSION_POLICY                                                                    = 0x00000430,
    D3D12_MESSAGE_ID_LIVE_PROTECTED_RESOURCE_SESSION                                                               = 0x00000431,
    D3D12_MESSAGE_ID_DESTROY_CRYPTO_SESSION                                                                        = 0x00000432,
    D3D12_MESSAGE_ID_DESTROY_CRYPTO_SESSION_POLICY                                                                 = 0x00000433,
    D3D12_MESSAGE_ID_DESTROY_PROTECTED_RESOURCE_SESSION                                                            = 0x00000434,
    D3D12_MESSAGE_ID_PROTECTED_RESOURCE_SESSION_UNSUPPORTED                                                        = 0x00000435,
    D3D12_MESSAGE_ID_FENCE_INVALIDOPERATION                                                                        = 0x00000436,
    D3D12_MESSAGE_ID_CREATEQUERY_HEAP_COPY_QUEUE_TIMESTAMPS_NOT_SUPPORTED                                          = 0x00000437,
    D3D12_MESSAGE_ID_SAMPLEPOSITIONS_MISMATCH_DEFERRED                                                             = 0x00000438,
    D3D12_MESSAGE_ID_SAMPLEPOSITIONS_MISMATCH_RECORDTIME_ASSUMEDFROMFIRSTUSE                                       = 0x00000439,
    D3D12_MESSAGE_ID_SAMPLEPOSITIONS_MISMATCH_RECORDTIME_ASSUMEDFROMCLEAR                                          = 0x0000043a,
    D3D12_MESSAGE_ID_CREATE_VIDEODECODERHEAP                                                                       = 0x0000043b,
    D3D12_MESSAGE_ID_LIVE_VIDEODECODERHEAP                                                                         = 0x0000043c,
    D3D12_MESSAGE_ID_DESTROY_VIDEODECODERHEAP                                                                      = 0x0000043d,
    D3D12_MESSAGE_ID_OPENEXISTINGHEAP_INVALIDARG_RETURN                                                            = 0x0000043e,
    D3D12_MESSAGE_ID_OPENEXISTINGHEAP_OUTOFMEMORY_RETURN                                                           = 0x0000043f,
    D3D12_MESSAGE_ID_OPENEXISTINGHEAP_INVALIDADDRESS                                                               = 0x00000440,
    D3D12_MESSAGE_ID_OPENEXISTINGHEAP_INVALIDHANDLE                                                                = 0x00000441,
    D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_INVALID_DEST                                                             = 0x00000442,
    D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_INVALID_MODE                                                             = 0x00000443,
    D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_INVALID_ALIGNMENT                                                        = 0x00000444,
    D3D12_MESSAGE_ID_WRITEBUFFERIMMEDIATE_NOT_SUPPORTED                                                            = 0x00000445,
    D3D12_MESSAGE_ID_SETVIEWINSTANCEMASK_INVALIDARGS                                                               = 0x00000446,
    D3D12_MESSAGE_ID_VIEW_INSTANCING_UNSUPPORTED                                                                   = 0x00000447,
    D3D12_MESSAGE_ID_VIEW_INSTANCING_INVALIDARGS                                                                   = 0x00000448,
    D3D12_MESSAGE_ID_COPYTEXTUREREGION_MISMATCH_DECODE_REFERENCE_ONLY_FLAG                                         = 0x00000449,
    D3D12_MESSAGE_ID_COPYRESOURCE_MISMATCH_DECODE_REFERENCE_ONLY_FLAG                                              = 0x0000044a,
    D3D12_MESSAGE_ID_CREATE_VIDEO_DECODE_HEAP_CAPS_FAILURE                                                         = 0x0000044b,
    D3D12_MESSAGE_ID_CREATE_VIDEO_DECODE_HEAP_CAPS_UNSUPPORTED                                                     = 0x0000044c,
    D3D12_MESSAGE_ID_VIDEO_DECODE_SUPPORT_INVALID_INPUT                                                            = 0x0000044d,
    D3D12_MESSAGE_ID_CREATE_VIDEO_DECODER_UNSUPPORTED                                                              = 0x0000044e,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_METADATA_ERROR                                                    = 0x0000044f,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_VIEW_INSTANCING_VERTEX_SIZE_EXCEEDED                              = 0x00000450,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_RUNTIME_INTERNAL_ERROR                                            = 0x00000451,
    D3D12_MESSAGE_ID_NO_VIDEO_API_SUPPORT                                                                          = 0x00000452,
    D3D12_MESSAGE_ID_VIDEO_PROCESS_SUPPORT_INVALID_INPUT                                                           = 0x00000453,
    D3D12_MESSAGE_ID_CREATE_VIDEO_PROCESSOR_CAPS_FAILURE                                                           = 0x00000454,
    D3D12_MESSAGE_ID_VIDEO_PROCESS_SUPPORT_UNSUPPORTED_FORMAT                                                      = 0x00000455,
    D3D12_MESSAGE_ID_VIDEO_DECODE_FRAME_INVALID_ARGUMENT                                                           = 0x00000456,
    D3D12_MESSAGE_ID_ENQUEUE_MAKE_RESIDENT_INVALID_FLAGS                                                           = 0x00000457,
    D3D12_MESSAGE_ID_OPENEXISTINGHEAP_UNSUPPORTED                                                                  = 0x00000458,
    D3D12_MESSAGE_ID_VIDEO_PROCESS_FRAMES_INVALID_ARGUMENT                                                         = 0x00000459,
    D3D12_MESSAGE_ID_VIDEO_DECODE_SUPPORT_UNSUPPORTED                                                              = 0x0000045a,
    D3D12_MESSAGE_ID_CREATE_COMMANDRECORDER                                                                        = 0x0000045b,
    D3D12_MESSAGE_ID_LIVE_COMMANDRECORDER                                                                          = 0x0000045c,
    D3D12_MESSAGE_ID_DESTROY_COMMANDRECORDER                                                                       = 0x0000045d,
    D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_VIDEO_NOT_SUPPORTED                                                   = 0x0000045e,
    D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_INVALID_SUPPORT_FLAGS                                                 = 0x0000045f,
    D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_INVALID_FLAGS                                                         = 0x00000460,
    D3D12_MESSAGE_ID_CREATE_COMMAND_RECORDER_MORE_RECORDERS_THAN_LOGICAL_PROCESSORS                                = 0x00000461,
    D3D12_MESSAGE_ID_CREATE_COMMANDPOOL                                                                            = 0x00000462,
    D3D12_MESSAGE_ID_LIVE_COMMANDPOOL                                                                              = 0x00000463,
    D3D12_MESSAGE_ID_DESTROY_COMMANDPOOL                                                                           = 0x00000464,
    D3D12_MESSAGE_ID_CREATE_COMMAND_POOL_INVALID_FLAGS                                                             = 0x00000465,
    D3D12_MESSAGE_ID_CREATE_COMMAND_LIST_VIDEO_NOT_SUPPORTED                                                       = 0x00000466,
    D3D12_MESSAGE_ID_COMMAND_RECORDER_SUPPORT_FLAGS_MISMATCH                                                       = 0x00000467,
    D3D12_MESSAGE_ID_COMMAND_RECORDER_CONTENTION                                                                   = 0x00000468,
    D3D12_MESSAGE_ID_COMMAND_RECORDER_USAGE_WITH_CREATECOMMANDLIST_COMMAND_LIST                                    = 0x00000469,
    D3D12_MESSAGE_ID_COMMAND_ALLOCATOR_USAGE_WITH_CREATECOMMANDLIST1_COMMAND_LIST                                  = 0x0000046a,
    D3D12_MESSAGE_ID_CANNOT_EXECUTE_EMPTY_COMMAND_LIST                                                             = 0x0000046b,
    D3D12_MESSAGE_ID_CANNOT_RESET_COMMAND_POOL_WITH_OPEN_COMMAND_LISTS                                             = 0x0000046c,
    D3D12_MESSAGE_ID_CANNOT_USE_COMMAND_RECORDER_WITHOUT_CURRENT_TARGET                                            = 0x0000046d,
    D3D12_MESSAGE_ID_CANNOT_CHANGE_COMMAND_RECORDER_TARGET_WHILE_RECORDING                                         = 0x0000046e,
    D3D12_MESSAGE_ID_COMMAND_POOL_SYNC                                                                             = 0x0000046f,
    D3D12_MESSAGE_ID_EVICT_UNDERFLOW                                                                               = 0x00000470,
    D3D12_MESSAGE_ID_CREATE_META_COMMAND                                                                           = 0x00000471,
    D3D12_MESSAGE_ID_LIVE_META_COMMAND                                                                             = 0x00000472,
    D3D12_MESSAGE_ID_DESTROY_META_COMMAND                                                                          = 0x00000473,
    D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALID_DST_RESOURCE                                                         = 0x00000474,
    D3D12_MESSAGE_ID_COPYBUFFERREGION_INVALID_SRC_RESOURCE                                                         = 0x00000475,
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_DST_RESOURCE                                                         = 0x00000476,
    D3D12_MESSAGE_ID_ATOMICCOPYBUFFER_INVALID_SRC_RESOURCE                                                         = 0x00000477,
    D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_NULL_BUFFER                                                      = 0x00000478,
    D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_NULL_RESOURCE_DESC                                               = 0x00000479,
    D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_UNSUPPORTED                                                      = 0x0000047a,
    D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_BUFFER_DIMENSION                                         = 0x0000047b,
    D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_BUFFER_FLAGS                                             = 0x0000047c,
    D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_BUFFER_OFFSET                                            = 0x0000047d,
    D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_RESOURCE_DIMENSION                                       = 0x0000047e,
    D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_INVALID_RESOURCE_FLAGS                                           = 0x0000047f,
    D3D12_MESSAGE_ID_CREATEPLACEDRESOURCEONBUFFER_OUTOFMEMORY_RETURN                                               = 0x00000480,
    D3D12_MESSAGE_ID_CANNOT_CREATE_GRAPHICS_AND_VIDEO_COMMAND_RECORDER                                             = 0x00000481,
    D3D12_MESSAGE_ID_UPDATETILEMAPPINGS_POSSIBLY_MISMATCHING_PROPERTIES                                            = 0x00000482,
    D3D12_MESSAGE_ID_CREATE_COMMAND_LIST_INVALID_COMMAND_LIST_TYPE                                                 = 0x00000483,
    D3D12_MESSAGE_ID_CLEARUNORDEREDACCESSVIEW_INCOMPATIBLE_WITH_STRUCTURED_BUFFERS                                 = 0x00000484,
    D3D12_MESSAGE_ID_COMPUTE_ONLY_DEVICE_OPERATION_UNSUPPORTED                                                     = 0x00000485,
    D3D12_MESSAGE_ID_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INVALID                                               = 0x00000486,
    D3D12_MESSAGE_ID_EMIT_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_INVALID                                 = 0x00000487,
    D3D12_MESSAGE_ID_COPY_RAYTRACING_ACCELERATION_STRUCTURE_INVALID                                                = 0x00000488,
    D3D12_MESSAGE_ID_DISPATCH_RAYS_INVALID                                                                         = 0x00000489,
    D3D12_MESSAGE_ID_GET_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO_INVALID                                   = 0x0000048a,
    D3D12_MESSAGE_ID_CREATE_LIFETIMETRACKER                                                                        = 0x0000048b,
    D3D12_MESSAGE_ID_LIVE_LIFETIMETRACKER                                                                          = 0x0000048c,
    D3D12_MESSAGE_ID_DESTROY_LIFETIMETRACKER                                                                       = 0x0000048d,
    D3D12_MESSAGE_ID_DESTROYOWNEDOBJECT_OBJECTNOTOWNED                                                             = 0x0000048e,
    D3D12_MESSAGE_ID_CREATE_TRACKEDWORKLOAD                                                                        = 0x0000048f,
    D3D12_MESSAGE_ID_LIVE_TRACKEDWORKLOAD                                                                          = 0x00000490,
    D3D12_MESSAGE_ID_DESTROY_TRACKEDWORKLOAD                                                                       = 0x00000491,
    D3D12_MESSAGE_ID_RENDER_PASS_ERROR                                                                             = 0x00000492,
    D3D12_MESSAGE_ID_META_COMMAND_ID_INVALID                                                                       = 0x00000493,
    D3D12_MESSAGE_ID_META_COMMAND_UNSUPPORTED_PARAMS                                                               = 0x00000494,
    D3D12_MESSAGE_ID_META_COMMAND_FAILED_ENUMERATION                                                               = 0x00000495,
    D3D12_MESSAGE_ID_META_COMMAND_PARAMETER_SIZE_MISMATCH                                                          = 0x00000496,
    D3D12_MESSAGE_ID_UNINITIALIZED_META_COMMAND                                                                    = 0x00000497,
    D3D12_MESSAGE_ID_META_COMMAND_INVALID_GPU_VIRTUAL_ADDRESS                                                      = 0x00000498,
    D3D12_MESSAGE_ID_CREATE_VIDEOENCODECOMMANDLIST                                                                 = 0x00000499,
    D3D12_MESSAGE_ID_LIVE_VIDEOENCODECOMMANDLIST                                                                   = 0x0000049a,
    D3D12_MESSAGE_ID_DESTROY_VIDEOENCODECOMMANDLIST                                                                = 0x0000049b,
    D3D12_MESSAGE_ID_CREATE_VIDEOENCODECOMMANDQUEUE                                                                = 0x0000049c,
    D3D12_MESSAGE_ID_LIVE_VIDEOENCODECOMMANDQUEUE                                                                  = 0x0000049d,
    D3D12_MESSAGE_ID_DESTROY_VIDEOENCODECOMMANDQUEUE                                                               = 0x0000049e,
    D3D12_MESSAGE_ID_CREATE_VIDEOMOTIONESTIMATOR                                                                   = 0x0000049f,
    D3D12_MESSAGE_ID_LIVE_VIDEOMOTIONESTIMATOR                                                                     = 0x000004a0,
    D3D12_MESSAGE_ID_DESTROY_VIDEOMOTIONESTIMATOR                                                                  = 0x000004a1,
    D3D12_MESSAGE_ID_CREATE_VIDEOMOTIONVECTORHEAP                                                                  = 0x000004a2,
    D3D12_MESSAGE_ID_LIVE_VIDEOMOTIONVECTORHEAP                                                                    = 0x000004a3,
    D3D12_MESSAGE_ID_DESTROY_VIDEOMOTIONVECTORHEAP                                                                 = 0x000004a4,
    D3D12_MESSAGE_ID_MULTIPLE_TRACKED_WORKLOADS                                                                    = 0x000004a5,
    D3D12_MESSAGE_ID_MULTIPLE_TRACKED_WORKLOAD_PAIRS                                                               = 0x000004a6,
    D3D12_MESSAGE_ID_OUT_OF_ORDER_TRACKED_WORKLOAD_PAIR                                                            = 0x000004a7,
    D3D12_MESSAGE_ID_CANNOT_ADD_TRACKED_WORKLOAD                                                                   = 0x000004a8,
    D3D12_MESSAGE_ID_INCOMPLETE_TRACKED_WORKLOAD_PAIR                                                              = 0x000004a9,
    D3D12_MESSAGE_ID_CREATE_STATE_OBJECT_ERROR                                                                     = 0x000004aa,
    D3D12_MESSAGE_ID_GET_SHADER_IDENTIFIER_ERROR                                                                   = 0x000004ab,
    D3D12_MESSAGE_ID_GET_SHADER_STACK_SIZE_ERROR                                                                   = 0x000004ac,
    D3D12_MESSAGE_ID_GET_PIPELINE_STACK_SIZE_ERROR                                                                 = 0x000004ad,
    D3D12_MESSAGE_ID_SET_PIPELINE_STACK_SIZE_ERROR                                                                 = 0x000004ae,
    D3D12_MESSAGE_ID_GET_SHADER_IDENTIFIER_SIZE_INVALID                                                            = 0x000004af,
    D3D12_MESSAGE_ID_CHECK_DRIVER_MATCHING_IDENTIFIER_INVALID                                                      = 0x000004b0,
    D3D12_MESSAGE_ID_CHECK_DRIVER_MATCHING_IDENTIFIER_DRIVER_REPORTED_ISSUE                                        = 0x000004b1,
    D3D12_MESSAGE_ID_RENDER_PASS_INVALID_RESOURCE_BARRIER                                                          = 0x000004b2,
    D3D12_MESSAGE_ID_RENDER_PASS_DISALLOWED_API_CALLED                                                             = 0x000004b3,
    D3D12_MESSAGE_ID_RENDER_PASS_CANNOT_NEST_RENDER_PASSES                                                         = 0x000004b4,
    D3D12_MESSAGE_ID_RENDER_PASS_CANNOT_END_WITHOUT_BEGIN                                                          = 0x000004b5,
    D3D12_MESSAGE_ID_RENDER_PASS_CANNOT_CLOSE_COMMAND_LIST                                                         = 0x000004b6,
    D3D12_MESSAGE_ID_RENDER_PASS_GPU_WORK_WHILE_SUSPENDED                                                          = 0x000004b7,
    D3D12_MESSAGE_ID_RENDER_PASS_MISMATCHING_SUSPEND_RESUME                                                        = 0x000004b8,
    D3D12_MESSAGE_ID_RENDER_PASS_NO_PRIOR_SUSPEND_WITHIN_EXECUTECOMMANDLISTS                                       = 0x000004b9,
    D3D12_MESSAGE_ID_RENDER_PASS_NO_SUBSEQUENT_RESUME_WITHIN_EXECUTECOMMANDLISTS                                   = 0x000004ba,
    D3D12_MESSAGE_ID_TRACKED_WORKLOAD_COMMAND_QUEUE_MISMATCH                                                       = 0x000004bb,
    D3D12_MESSAGE_ID_TRACKED_WORKLOAD_NOT_SUPPORTED                                                                = 0x000004bc,
    D3D12_MESSAGE_ID_RENDER_PASS_MISMATCHING_NO_ACCESS                                                             = 0x000004bd,
    D3D12_MESSAGE_ID_RENDER_PASS_UNSUPPORTED_RESOLVE                                                               = 0x000004be,
    D3D12_MESSAGE_ID_CLEARUNORDEREDACCESSVIEW_INVALID_RESOURCE_PTR                                                 = 0x000004bf,
    D3D12_MESSAGE_ID_WINDOWS7_FENCE_OUTOFORDER_SIGNAL                                                              = 0x000004c0,
    D3D12_MESSAGE_ID_WINDOWS7_FENCE_OUTOFORDER_WAIT                                                                = 0x000004c1,
    D3D12_MESSAGE_ID_VIDEO_CREATE_MOTION_ESTIMATOR_INVALID_ARGUMENT                                                = 0x000004c2,
    D3D12_MESSAGE_ID_VIDEO_CREATE_MOTION_VECTOR_HEAP_INVALID_ARGUMENT                                              = 0x000004c3,
    D3D12_MESSAGE_ID_ESTIMATE_MOTION_INVALID_ARGUMENT                                                              = 0x000004c4,
    D3D12_MESSAGE_ID_RESOLVE_MOTION_VECTOR_HEAP_INVALID_ARGUMENT                                                   = 0x000004c5,
    D3D12_MESSAGE_ID_GETGPUVIRTUALADDRESS_INVALID_HEAP_TYPE                                                        = 0x000004c6,
    D3D12_MESSAGE_ID_SET_BACKGROUND_PROCESSING_MODE_INVALID_ARGUMENT                                               = 0x000004c7,
    D3D12_MESSAGE_ID_CREATE_COMMAND_LIST_INVALID_COMMAND_LIST_TYPE_FOR_FEATURE_LEVEL                               = 0x000004c8,
    D3D12_MESSAGE_ID_CREATE_VIDEOEXTENSIONCOMMAND                                                                  = 0x000004c9,
    D3D12_MESSAGE_ID_LIVE_VIDEOEXTENSIONCOMMAND                                                                    = 0x000004ca,
    D3D12_MESSAGE_ID_DESTROY_VIDEOEXTENSIONCOMMAND                                                                 = 0x000004cb,
    D3D12_MESSAGE_ID_INVALID_VIDEO_EXTENSION_COMMAND_ID                                                            = 0x000004cc,
    D3D12_MESSAGE_ID_VIDEO_EXTENSION_COMMAND_INVALID_ARGUMENT                                                      = 0x000004cd,
    D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_NOT_UNIQUE_IN_DXIL_LIBRARY                                              = 0x000004ce,
    D3D12_MESSAGE_ID_VARIABLE_SHADING_RATE_NOT_ALLOWED_WITH_TIR                                                    = 0x000004cf,
    D3D12_MESSAGE_ID_GEOMETRY_SHADER_OUTPUTTING_BOTH_VIEWPORT_ARRAY_INDEX_AND_SHADING_RATE_NOT_SUPPORTED_ON_DEVICE = 0x000004d0,
    D3D12_MESSAGE_ID_RSSETSHADING_RATE_INVALID_SHADING_RATE                                                        = 0x000004d1,
    D3D12_MESSAGE_ID_RSSETSHADING_RATE_SHADING_RATE_NOT_PERMITTED_BY_CAP                                           = 0x000004d2,
    D3D12_MESSAGE_ID_RSSETSHADING_RATE_INVALID_COMBINER                                                            = 0x000004d3,
    D3D12_MESSAGE_ID_RSSETSHADINGRATEIMAGE_REQUIRES_TIER_2                                                         = 0x000004d4,
    D3D12_MESSAGE_ID_RSSETSHADINGRATE_REQUIRES_TIER_1                                                              = 0x000004d5,
    D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_FORMAT                                                           = 0x000004d6,
    D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_ARRAY_SIZE                                                       = 0x000004d7,
    D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_MIP_LEVEL                                                        = 0x000004d8,
    D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_SAMPLE_COUNT                                                     = 0x000004d9,
    D3D12_MESSAGE_ID_SHADING_RATE_IMAGE_INCORRECT_SAMPLE_QUALITY                                                   = 0x000004da,
    D3D12_MESSAGE_ID_NON_RETAIL_SHADER_MODEL_WONT_VALIDATE                                                         = 0x000004db,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_AS_ROOT_SIGNATURE_MISMATCH                                        = 0x000004dc,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MS_ROOT_SIGNATURE_MISMATCH                                        = 0x000004dd,
    D3D12_MESSAGE_ID_ADD_TO_STATE_OBJECT_ERROR                                                                     = 0x000004de,
    D3D12_MESSAGE_ID_CREATE_PROTECTED_RESOURCE_SESSION_INVALID_ARGUMENT                                            = 0x000004df,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MS_PSO_DESC_MISMATCH                                              = 0x000004e0,
    D3D12_MESSAGE_ID_CREATEPIPELINESTATE_MS_INCOMPLETE_TYPE                                                        = 0x000004e1,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_AS_NOT_MS_MISMATCH                                                = 0x000004e2,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_MS_NOT_PS_MISMATCH                                                = 0x000004e3,
    D3D12_MESSAGE_ID_NONZERO_SAMPLER_FEEDBACK_MIP_REGION_WITH_INCOMPATIBLE_FORMAT                                  = 0x000004e4,
    D3D12_MESSAGE_ID_CREATEGRAPHICSPIPELINESTATE_INPUTLAYOUT_SHADER_MISMATCH                                       = 0x000004e5,
    D3D12_MESSAGE_ID_EMPTY_DISPATCH                                                                                = 0x000004e6,
    D3D12_MESSAGE_ID_RESOURCE_FORMAT_REQUIRES_SAMPLER_FEEDBACK_CAPABILITY                                          = 0x000004e7,
    D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_MIP_REGION                                                       = 0x000004e8,
    D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_DIMENSION                                                        = 0x000004e9,
    D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_SAMPLE_COUNT                                                     = 0x000004ea,
    D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_SAMPLE_QUALITY                                                   = 0x000004eb,
    D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_INVALID_LAYOUT                                                           = 0x000004ec,
    D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_MAP_REQUIRES_UNORDERED_ACCESS_FLAG                                           = 0x000004ed,
    D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_CREATE_UAV_NULL_ARGUMENTS                                                    = 0x000004ee,
    D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_UAV_REQUIRES_SAMPLER_FEEDBACK_CAPABILITY                                     = 0x000004ef,
    D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_CREATE_UAV_REQUIRES_FEEDBACK_MAP_FORMAT                                      = 0x000004f0,
    D3D12_MESSAGE_ID_CREATEMESHSHADER_INVALIDSHADERBYTECODE                                                        = 0x000004f1,
    D3D12_MESSAGE_ID_CREATEMESHSHADER_OUTOFMEMORY                                                                  = 0x000004f2,
    D3D12_MESSAGE_ID_CREATEMESHSHADERWITHSTREAMOUTPUT_INVALIDSHADERTYPE                                            = 0x000004f3,
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_SAMPLER_FEEDBACK_TRANSCODE_INVALID_FORMAT                                  = 0x000004f4,
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_SAMPLER_FEEDBACK_INVALID_MIP_LEVEL_COUNT                                   = 0x000004f5,
    D3D12_MESSAGE_ID_RESOLVESUBRESOURCE_SAMPLER_FEEDBACK_TRANSCODE_ARRAY_SIZE_MISMATCH                             = 0x000004f6,
    D3D12_MESSAGE_ID_SAMPLER_FEEDBACK_CREATE_UAV_MISMATCHING_TARGETED_RESOURCE                                     = 0x000004f7,
    D3D12_MESSAGE_ID_CREATEMESHSHADER_OUTPUTEXCEEDSMAXSIZE                                                         = 0x000004f8,
    D3D12_MESSAGE_ID_CREATEMESHSHADER_GROUPSHAREDEXCEEDSMAXSIZE                                                    = 0x000004f9,
    D3D12_MESSAGE_ID_VERTEX_SHADER_OUTPUTTING_BOTH_VIEWPORT_ARRAY_INDEX_AND_SHADING_RATE_NOT_SUPPORTED_ON_DEVICE   = 0x000004fa,
    D3D12_MESSAGE_ID_MESH_SHADER_OUTPUTTING_BOTH_VIEWPORT_ARRAY_INDEX_AND_SHADING_RATE_NOT_SUPPORTED_ON_DEVICE     = 0x000004fb,
    D3D12_MESSAGE_ID_CREATEMESHSHADER_MISMATCHEDASMSPAYLOADSIZE                                                    = 0x000004fc,
    D3D12_MESSAGE_ID_CREATE_ROOT_SIGNATURE_UNBOUNDED_STATIC_DESCRIPTORS                                            = 0x000004fd,
    D3D12_MESSAGE_ID_CREATEAMPLIFICATIONSHADER_INVALIDSHADERBYTECODE                                               = 0x000004fe,
    D3D12_MESSAGE_ID_CREATEAMPLIFICATIONSHADER_OUTOFMEMORY                                                         = 0x000004ff,
    D3D12_MESSAGE_ID_D3D12_MESSAGES_END                                                                            = 0x00000500,
}
alias D3D12_MESSAGE_ID = int;

enum : int
{
    D3D12_AXIS_SHADING_RATE_1X = 0x00000000,
    D3D12_AXIS_SHADING_RATE_2X = 0x00000001,
    D3D12_AXIS_SHADING_RATE_4X = 0x00000002,
}
alias D3D12_AXIS_SHADING_RATE = int;

enum : int
{
    D3D12_SHADING_RATE_1X1 = 0x00000000,
    D3D12_SHADING_RATE_1X2 = 0x00000001,
    D3D12_SHADING_RATE_2X1 = 0x00000004,
    D3D12_SHADING_RATE_2X2 = 0x00000005,
    D3D12_SHADING_RATE_2X4 = 0x00000006,
    D3D12_SHADING_RATE_4X2 = 0x00000009,
    D3D12_SHADING_RATE_4X4 = 0x0000000a,
}
alias D3D12_SHADING_RATE = int;

enum : int
{
    D3D12_SHADING_RATE_COMBINER_PASSTHROUGH = 0x00000000,
    D3D12_SHADING_RATE_COMBINER_OVERRIDE    = 0x00000001,
    D3D12_SHADING_RATE_COMBINER_MIN         = 0x00000002,
    D3D12_SHADING_RATE_COMBINER_MAX         = 0x00000003,
    D3D12_SHADING_RATE_COMBINER_SUM         = 0x00000004,
}
alias D3D12_SHADING_RATE_COMBINER = int;

enum : int
{
    D3D12_SHVER_PIXEL_SHADER    = 0x00000000,
    D3D12_SHVER_VERTEX_SHADER   = 0x00000001,
    D3D12_SHVER_GEOMETRY_SHADER = 0x00000002,
    D3D12_SHVER_HULL_SHADER     = 0x00000003,
    D3D12_SHVER_DOMAIN_SHADER   = 0x00000004,
    D3D12_SHVER_COMPUTE_SHADER  = 0x00000005,
    D3D12_SHVER_RESERVED0       = 0x0000fff0,
}
alias D3D12_SHADER_VERSION_TYPE = int;

// Constants


enum uint D3D12_16BIT_INDEX_STRIP_CUT_VALUE = 0x0000ffff;
enum uint D3D12_8BIT_INDEX_STRIP_CUT_VALUE = 0x000000ff;
enum uint D3D12_ARRAY_AXIS_ADDRESS_RANGE_BIT_COUNT = 0x00000009;
enum uint D3D12_CLIP_OR_CULL_DISTANCE_ELEMENT_COUNT = 0x00000002;

enum : uint
{
    D3D12_COMMONSHADER_CONSTANT_BUFFER_COMPONENTS                            = 0x00000004,
    D3D12_COMMONSHADER_CONSTANT_BUFFER_COMPONENT_BIT_COUNT                   = 0x00000020,
    D3D12_COMMONSHADER_CONSTANT_BUFFER_HW_SLOT_COUNT                         = 0x0000000f,
    D3D12_COMMONSHADER_CONSTANT_BUFFER_PARTIAL_UPDATE_EXTENTS_BYTE_ALIGNMENT = 0x00000010,
    D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COMPONENTS                   = 0x00000004,
    D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COUNT                        = 0x0000000f,
    D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READS_PER_INST               = 0x00000001,
    D3D12_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READ_PORTS                   = 0x00000001,
}

enum : uint
{
    D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COMPONENTS     = 0x00000004,
    D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COUNT          = 0x00000001,
    D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READS_PER_INST = 0x00000001,
    D3D12_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READ_PORTS     = 0x00000001,
    D3D12_COMMONSHADER_IMMEDIATE_VALUE_COMPONENT_BIT_COUNT               = 0x00000020,
}

enum : uint
{
    D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_COUNT          = 0x00000080,
    D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_READS_PER_INST = 0x00000001,
    D3D12_COMMONSHADER_INPUT_RESOURCE_REGISTER_READ_PORTS     = 0x00000001,
    D3D12_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT              = 0x00000080,
    D3D12_COMMONSHADER_SAMPLER_REGISTER_COMPONENTS            = 0x00000001,
    D3D12_COMMONSHADER_SAMPLER_REGISTER_COUNT                 = 0x00000010,
    D3D12_COMMONSHADER_SAMPLER_REGISTER_READS_PER_INST        = 0x00000001,
    D3D12_COMMONSHADER_SAMPLER_REGISTER_READ_PORTS            = 0x00000001,
    D3D12_COMMONSHADER_SAMPLER_SLOT_COUNT                     = 0x00000010,
    D3D12_COMMONSHADER_SUBROUTINE_NESTING_LIMIT               = 0x00000020,
    D3D12_COMMONSHADER_TEMP_REGISTER_COMPONENTS               = 0x00000004,
    D3D12_COMMONSHADER_TEMP_REGISTER_COMPONENT_BIT_COUNT      = 0x00000020,
    D3D12_COMMONSHADER_TEMP_REGISTER_COUNT                    = 0x00001000,
    D3D12_COMMONSHADER_TEMP_REGISTER_READS_PER_INST           = 0x00000003,
    D3D12_COMMONSHADER_TEMP_REGISTER_READ_PORTS               = 0x00000003,
    D3D12_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MAX           = 0x0000000a,
}

enum int D3D12_COMMONSHADER_TEXEL_OFFSET_MAX_NEGATIVE = 0xfffffff8;
enum uint D3D12_CONSTANT_BUFFER_DATA_PLACEMENT_ALIGNMENT = 0x00000100;

enum : uint
{
    D3D12_CS_4_X_BUCKET00_MAX_NUM_THREADS_PER_GROUP          = 0x00000040,
    D3D12_CS_4_X_BUCKET01_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 0x000000f0,
    D3D12_CS_4_X_BUCKET01_MAX_NUM_THREADS_PER_GROUP          = 0x00000044,
    D3D12_CS_4_X_BUCKET02_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 0x000000e0,
    D3D12_CS_4_X_BUCKET02_MAX_NUM_THREADS_PER_GROUP          = 0x00000048,
    D3D12_CS_4_X_BUCKET03_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 0x000000d0,
    D3D12_CS_4_X_BUCKET03_MAX_NUM_THREADS_PER_GROUP          = 0x0000004c,
    D3D12_CS_4_X_BUCKET04_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 0x000000c0,
    D3D12_CS_4_X_BUCKET04_MAX_NUM_THREADS_PER_GROUP          = 0x00000054,
    D3D12_CS_4_X_BUCKET05_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 0x000000b0,
    D3D12_CS_4_X_BUCKET05_MAX_NUM_THREADS_PER_GROUP          = 0x0000005c,
    D3D12_CS_4_X_BUCKET06_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 0x000000a0,
    D3D12_CS_4_X_BUCKET06_MAX_NUM_THREADS_PER_GROUP          = 0x00000064,
    D3D12_CS_4_X_BUCKET07_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 0x00000090,
    D3D12_CS_4_X_BUCKET07_MAX_NUM_THREADS_PER_GROUP          = 0x00000070,
    D3D12_CS_4_X_BUCKET08_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 0x00000080,
    D3D12_CS_4_X_BUCKET08_MAX_NUM_THREADS_PER_GROUP          = 0x00000080,
    D3D12_CS_4_X_BUCKET09_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 0x00000070,
    D3D12_CS_4_X_BUCKET09_MAX_NUM_THREADS_PER_GROUP          = 0x00000090,
    D3D12_CS_4_X_BUCKET10_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 0x00000060,
    D3D12_CS_4_X_BUCKET10_MAX_NUM_THREADS_PER_GROUP          = 0x000000a8,
    D3D12_CS_4_X_BUCKET11_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 0x00000050,
    D3D12_CS_4_X_BUCKET11_MAX_NUM_THREADS_PER_GROUP          = 0x000000cc,
    D3D12_CS_4_X_BUCKET12_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 0x00000040,
    D3D12_CS_4_X_BUCKET12_MAX_NUM_THREADS_PER_GROUP          = 0x00000100,
    D3D12_CS_4_X_BUCKET13_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 0x00000030,
    D3D12_CS_4_X_BUCKET13_MAX_NUM_THREADS_PER_GROUP          = 0x00000154,
    D3D12_CS_4_X_BUCKET14_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 0x00000020,
    D3D12_CS_4_X_BUCKET14_MAX_NUM_THREADS_PER_GROUP          = 0x00000200,
    D3D12_CS_4_X_BUCKET15_MAX_BYTES_TGSM_WRITABLE_PER_THREAD = 0x00000010,
    D3D12_CS_4_X_BUCKET15_MAX_NUM_THREADS_PER_GROUP          = 0x00000300,
}

enum uint D3D12_CS_4_X_RAW_UAV_BYTE_ALIGNMENT = 0x00000100;

enum : uint
{
    D3D12_CS_4_X_THREAD_GROUP_MAX_X = 0x00000300,
    D3D12_CS_4_X_THREAD_GROUP_MAX_Y = 0x00000300,
    D3D12_CS_4_X_UAV_REGISTER_COUNT = 0x00000001,
}

enum : uint
{
    D3D12_CS_TGSM_REGISTER_COUNT               = 0x00002000,
    D3D12_CS_TGSM_REGISTER_READS_PER_INST      = 0x00000001,
    D3D12_CS_TGSM_RESOURCE_REGISTER_COMPONENTS = 0x00000001,
    D3D12_CS_TGSM_RESOURCE_REGISTER_READ_PORTS = 0x00000001,
}

enum : uint
{
    D3D12_CS_THREADGROUPID_REGISTER_COUNT                 = 0x00000001,
    D3D12_CS_THREADIDINGROUPFLATTENED_REGISTER_COMPONENTS = 0x00000001,
    D3D12_CS_THREADIDINGROUPFLATTENED_REGISTER_COUNT      = 0x00000001,
    D3D12_CS_THREADIDINGROUP_REGISTER_COMPONENTS          = 0x00000003,
    D3D12_CS_THREADIDINGROUP_REGISTER_COUNT               = 0x00000001,
    D3D12_CS_THREADID_REGISTER_COMPONENTS                 = 0x00000003,
    D3D12_CS_THREADID_REGISTER_COUNT                      = 0x00000001,
    D3D12_CS_THREAD_GROUP_MAX_THREADS_PER_GROUP           = 0x00000400,
    D3D12_CS_THREAD_GROUP_MAX_X                           = 0x00000400,
    D3D12_CS_THREAD_GROUP_MAX_Y                           = 0x00000400,
    D3D12_CS_THREAD_GROUP_MAX_Z                           = 0x00000040,
    D3D12_CS_THREAD_GROUP_MIN_X                           = 0x00000001,
    D3D12_CS_THREAD_GROUP_MIN_Y                           = 0x00000001,
    D3D12_CS_THREAD_GROUP_MIN_Z                           = 0x00000001,
    D3D12_CS_THREAD_LOCAL_TEMP_REGISTER_POOL              = 0x00004000,
}

enum : float
{
    D3D12_DEFAULT_BLEND_FACTOR_BLUE      = 0x1p+0,
    D3D12_DEFAULT_BLEND_FACTOR_GREEN     = 0x1p+0,
    D3D12_DEFAULT_BLEND_FACTOR_RED       = 0x1p+0,
    D3D12_DEFAULT_BORDER_COLOR_COMPONENT = 0x0p+0,
}

enum float D3D12_DEFAULT_DEPTH_BIAS_CLAMP = 0x0p+0;
enum float D3D12_DEFAULT_MIP_LOD_BIAS = 0x0p+0;

enum : uint
{
    D3D12_DEFAULT_RENDER_TARGET_ARRAY_INDEX    = 0x00000000,
    D3D12_DEFAULT_RESOURCE_PLACEMENT_ALIGNMENT = 0x00010000,
}

enum : uint
{
    D3D12_DEFAULT_SCISSOR_ENDX   = 0x00000000,
    D3D12_DEFAULT_SCISSOR_ENDY   = 0x00000000,
    D3D12_DEFAULT_SCISSOR_STARTX = 0x00000000,
    D3D12_DEFAULT_SCISSOR_STARTY = 0x00000000,
}

enum : uint
{
    D3D12_DEFAULT_STENCIL_READ_MASK              = 0x000000ff,
    D3D12_DEFAULT_STENCIL_REFERENCE              = 0x00000000,
    D3D12_DEFAULT_STENCIL_WRITE_MASK             = 0x000000ff,
    D3D12_DEFAULT_VIEWPORT_AND_SCISSORRECT_INDEX = 0x00000000,
    D3D12_DEFAULT_VIEWPORT_HEIGHT                = 0x00000000,
}

enum float D3D12_DEFAULT_VIEWPORT_MIN_DEPTH = 0x0p+0;

enum : uint
{
    D3D12_DEFAULT_VIEWPORT_TOPLEFTY = 0x00000000,
    D3D12_DEFAULT_VIEWPORT_WIDTH    = 0x00000000,
}

enum : uint
{
    D3D12_DRIVER_RESERVED_REGISTER_SPACE_VALUES_END   = 0xfffffff7,
    D3D12_DRIVER_RESERVED_REGISTER_SPACE_VALUES_START = 0xfffffff0,
}

enum : uint
{
    D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENTS          = 0x00000004,
    D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT = 0x00000020,
    D3D12_DS_INPUT_CONTROL_POINT_REGISTER_COUNT               = 0x00000020,
    D3D12_DS_INPUT_CONTROL_POINT_REGISTER_READS_PER_INST      = 0x00000002,
    D3D12_DS_INPUT_CONTROL_POINT_REGISTER_READ_PORTS          = 0x00000001,
}

enum : uint
{
    D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COMPONENT_BIT_COUNT = 0x00000020,
    D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_COUNT               = 0x00000001,
    D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_READS_PER_INST      = 0x00000002,
    D3D12_DS_INPUT_DOMAIN_POINT_REGISTER_READ_PORTS          = 0x00000001,
}

enum : uint
{
    D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT = 0x00000020,
    D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_COUNT               = 0x00000020,
    D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST      = 0x00000002,
    D3D12_DS_INPUT_PATCH_CONSTANT_REGISTER_READ_PORTS          = 0x00000001,
}

enum : uint
{
    D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT = 0x00000020,
    D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_COUNT               = 0x00000001,
    D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST      = 0x00000002,
    D3D12_DS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS          = 0x00000001,
}

enum : uint
{
    D3D12_DS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT = 0x00000020,
    D3D12_DS_OUTPUT_REGISTER_COUNT               = 0x00000020,
}

enum : float
{
    D3D12_FLOAT32_MAX                         = 0x1.fffffep+127,
    D3D12_FLOAT32_TO_INTEGER_TOLERANCE_IN_ULP = 0x1.333334p-1,
}

enum : float
{
    D3D12_FLOAT_TO_SRGB_EXPONENT_NUMERATOR = 0x1p+0,
    D3D12_FLOAT_TO_SRGB_OFFSET             = 0x1.c28f5cp-5,
    D3D12_FLOAT_TO_SRGB_SCALE_1            = 0x1.9d70a4p+3,
    D3D12_FLOAT_TO_SRGB_SCALE_2            = 0x1.0e147ap+0,
    D3D12_FLOAT_TO_SRGB_THRESHOLD          = 0x1.9a5c38p-9,
}

enum float D3D12_FTOI_INSTRUCTION_MIN_INPUT = -0x1p+31;
enum float D3D12_FTOU_INSTRUCTION_MIN_INPUT = 0x0p+0;

enum : uint
{
    D3D12_GS_INPUT_INSTANCE_ID_READ_PORTS                   = 0x00000001,
    D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENTS          = 0x00000001,
    D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT = 0x00000020,
    D3D12_GS_INPUT_INSTANCE_ID_REGISTER_COUNT               = 0x00000001,
}

enum : uint
{
    D3D12_GS_INPUT_PRIM_CONST_REGISTER_COMPONENT_BIT_COUNT = 0x00000020,
    D3D12_GS_INPUT_PRIM_CONST_REGISTER_COUNT               = 0x00000001,
    D3D12_GS_INPUT_PRIM_CONST_REGISTER_READS_PER_INST      = 0x00000002,
    D3D12_GS_INPUT_PRIM_CONST_REGISTER_READ_PORTS          = 0x00000001,
}

enum : uint
{
    D3D12_GS_INPUT_REGISTER_COMPONENT_BIT_COUNT = 0x00000020,
    D3D12_GS_INPUT_REGISTER_COUNT               = 0x00000020,
    D3D12_GS_INPUT_REGISTER_READS_PER_INST      = 0x00000002,
    D3D12_GS_INPUT_REGISTER_READ_PORTS          = 0x00000001,
    D3D12_GS_INPUT_REGISTER_VERTICES            = 0x00000020,
}

enum uint D3D12_GS_MAX_OUTPUT_VERTEX_COUNT_ACROSS_INSTANCES = 0x00000400;

enum : uint
{
    D3D12_GS_OUTPUT_REGISTER_COMPONENTS          = 0x00000004,
    D3D12_GS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT = 0x00000020,
    D3D12_GS_OUTPUT_REGISTER_COUNT               = 0x00000020,
}

enum : uint
{
    D3D12_HS_CONTROL_POINT_PHASE_OUTPUT_REGISTER_COUNT  = 0x00000020,
    D3D12_HS_CONTROL_POINT_REGISTER_COMPONENTS          = 0x00000004,
    D3D12_HS_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT = 0x00000020,
    D3D12_HS_CONTROL_POINT_REGISTER_READS_PER_INST      = 0x00000002,
    D3D12_HS_CONTROL_POINT_REGISTER_READ_PORTS          = 0x00000001,
}

enum : uint
{
    D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENTS          = 0x00000001,
    D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT = 0x00000020,
    D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COUNT               = 0x00000001,
    D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READS_PER_INST      = 0x00000002,
    D3D12_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READ_PORTS          = 0x00000001,
}

enum : uint
{
    D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT = 0x00000020,
    D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COUNT               = 0x00000001,
    D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READS_PER_INST      = 0x00000002,
    D3D12_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READ_PORTS          = 0x00000001,
}

enum : uint
{
    D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT = 0x00000020,
    D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_COUNT               = 0x00000001,
    D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST      = 0x00000002,
    D3D12_HS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS          = 0x00000001,
}

enum : float
{
    D3D12_HS_MAXTESSFACTOR_LOWER_BOUND = 0x1p+0,
    D3D12_HS_MAXTESSFACTOR_UPPER_BOUND = 0x1p+6,
}

enum : uint
{
    D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENTS          = 0x00000001,
    D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENT_BIT_COUNT = 0x00000020,
    D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COUNT               = 0x00000001,
    D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READS_PER_INST      = 0x00000002,
    D3D12_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READ_PORTS          = 0x00000001,
}

enum : uint
{
    D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT = 0x00000020,
    D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COUNT               = 0x00000020,
    D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST      = 0x00000002,
    D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READ_PORTS          = 0x00000001,
    D3D12_HS_OUTPUT_PATCH_CONSTANT_REGISTER_SCALAR_COMPONENTS   = 0x00000080,
}

enum : uint
{
    D3D12_IA_DEFAULT_PRIMITIVE_TOPOLOGY            = 0x00000000,
    D3D12_IA_DEFAULT_VERTEX_BUFFER_OFFSET_IN_BYTES = 0x00000000,
}

enum uint D3D12_IA_INSTANCE_ID_BIT_COUNT = 0x00000020;
enum uint D3D12_IA_PATCH_MAX_CONTROL_POINT_COUNT = 0x00000020;

enum : uint
{
    D3D12_IA_VERTEX_ID_BIT_COUNT                        = 0x00000020,
    D3D12_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT           = 0x00000020,
    D3D12_IA_VERTEX_INPUT_STRUCTURE_ELEMENTS_COMPONENTS = 0x00000080,
    D3D12_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT       = 0x00000020,
}

enum uint D3D12_INTEGER_DIVIDE_BY_ZERO_REMAINDER = 0xffffffff;
enum uint D3D12_KEEP_UNORDERED_ACCESS_VIEWS = 0xffffffff;
enum uint D3D12_MAJOR_VERSION = 0x0000000c;
enum float D3D12_MAX_DEPTH = 0x1p+0;

enum : uint
{
    D3D12_MAX_MAXANISOTROPY            = 0x00000010,
    D3D12_MAX_MULTISAMPLE_SAMPLE_COUNT = 0x00000020,
}

enum : uint
{
    D3D12_MAX_ROOT_COST                                  = 0x00000040,
    D3D12_MAX_SHADER_VISIBLE_DESCRIPTOR_HEAP_SIZE_TIER_1 = 0x000f4240,
    D3D12_MAX_SHADER_VISIBLE_DESCRIPTOR_HEAP_SIZE_TIER_2 = 0x000f4240,
    D3D12_MAX_SHADER_VISIBLE_SAMPLER_HEAP_SIZE           = 0x00000800,
}

enum uint D3D12_MAX_VIEW_INSTANCE_COUNT = 0x00000004;
enum float D3D12_MIN_BORDER_COLOR_COMPONENT = 0x0p+0;
enum uint D3D12_MIN_MAXANISOTROPY = 0x00000000;
enum float D3D12_MIP_LOD_BIAS_MIN = -0x1p+4;
enum uint D3D12_MIP_LOD_RANGE_BIT_COUNT = 0x00000008;
enum uint D3D12_NONSAMPLE_FETCH_OUT_OF_RANGE_ACCESS_RESULT = 0x00000000;
enum uint D3D12_OS_RESERVED_REGISTER_SPACE_VALUES_START = 0xfffffff8;
enum uint D3D12_PIXEL_ADDRESS_RANGE_BIT_COUNT = 0x0000000f;

enum : uint
{
    D3D12_PS_CS_UAV_REGISTER_COMPONENTS     = 0x00000001,
    D3D12_PS_CS_UAV_REGISTER_COUNT          = 0x00000008,
    D3D12_PS_CS_UAV_REGISTER_READS_PER_INST = 0x00000001,
    D3D12_PS_CS_UAV_REGISTER_READ_PORTS     = 0x00000001,
}

enum : uint
{
    D3D12_PS_FRONTFACING_FALSE_VALUE = 0x00000000,
    D3D12_PS_FRONTFACING_TRUE_VALUE  = 0xffffffff,
}

enum : uint
{
    D3D12_PS_INPUT_REGISTER_COMPONENT_BIT_COUNT = 0x00000020,
    D3D12_PS_INPUT_REGISTER_COUNT               = 0x00000020,
    D3D12_PS_INPUT_REGISTER_READS_PER_INST      = 0x00000002,
    D3D12_PS_INPUT_REGISTER_READ_PORTS          = 0x00000001,
}

enum : uint
{
    D3D12_PS_OUTPUT_DEPTH_REGISTER_COMPONENTS          = 0x00000001,
    D3D12_PS_OUTPUT_DEPTH_REGISTER_COMPONENT_BIT_COUNT = 0x00000020,
    D3D12_PS_OUTPUT_DEPTH_REGISTER_COUNT               = 0x00000001,
    D3D12_PS_OUTPUT_MASK_REGISTER_COMPONENTS           = 0x00000001,
    D3D12_PS_OUTPUT_MASK_REGISTER_COMPONENT_BIT_COUNT  = 0x00000020,
    D3D12_PS_OUTPUT_MASK_REGISTER_COUNT                = 0x00000001,
    D3D12_PS_OUTPUT_REGISTER_COMPONENTS                = 0x00000004,
    D3D12_PS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT       = 0x00000020,
    D3D12_PS_OUTPUT_REGISTER_COUNT                     = 0x00000008,
}

enum uint D3D12_RAW_UAV_SRV_BYTE_ALIGNMENT = 0x00000010;
enum uint D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BYTE_ALIGNMENT = 0x00000100;

enum : uint
{
    D3D12_RAYTRACING_MAX_ATTRIBUTE_SIZE_IN_BYTES          = 0x00000020,
    D3D12_RAYTRACING_MAX_DECLARABLE_TRACE_RECURSION_DEPTH = 0x0000001f,
}

enum uint D3D12_RAYTRACING_MAX_INSTANCES_PER_TOP_LEVEL_ACCELERATION_STRUCTURE = 0x01000000;

enum : uint
{
    D3D12_RAYTRACING_MAX_RAY_GENERATION_SHADER_THREADS = 0x40000000,
    D3D12_RAYTRACING_MAX_SHADER_RECORD_STRIDE          = 0x00001000,
    D3D12_RAYTRACING_SHADER_RECORD_BYTE_ALIGNMENT      = 0x00000020,
    D3D12_RAYTRACING_SHADER_TABLE_BYTE_ALIGNMENT       = 0x00000040,
}

enum uint D3D12_REQ_BLEND_OBJECT_COUNT_PER_DEVICE = 0x00001000;
enum uint D3D12_REQ_CONSTANT_BUFFER_ELEMENT_COUNT = 0x00001000;
enum uint D3D12_REQ_DRAWINDEXED_INDEX_COUNT_2_TO_EXP = 0x00000020;
enum uint D3D12_REQ_FILTERING_HW_ADDRESSABLE_RESOURCE_DIMENSION = 0x00004000;
enum uint D3D12_REQ_IMMEDIATE_CONSTANT_BUFFER_ELEMENT_COUNT = 0x00001000;

enum : uint
{
    D3D12_REQ_MIP_LEVELS                            = 0x0000000f,
    D3D12_REQ_MULTI_ELEMENT_STRUCTURE_SIZE_IN_BYTES = 0x00000800,
}

enum uint D3D12_REQ_RENDER_TO_BUFFER_WINDOW_WIDTH = 0x00004000;
enum float D3D12_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_B_TERM = 0x1p-2;
enum uint D3D12_REQ_RESOURCE_VIEW_COUNT_PER_DEVICE_2_TO_EXP = 0x00000014;

enum : uint
{
    D3D12_REQ_SUBRESOURCES                   = 0x00007800,
    D3D12_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION = 0x00000800,
    D3D12_REQ_TEXTURE1D_U_DIMENSION          = 0x00004000,
    D3D12_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION = 0x00000800,
    D3D12_REQ_TEXTURE2D_U_OR_V_DIMENSION     = 0x00004000,
    D3D12_REQ_TEXTURE3D_U_V_OR_W_DIMENSION   = 0x00000800,
    D3D12_REQ_TEXTURECUBE_DIMENSION          = 0x00004000,
}

enum uint D3D12_RESOURCE_BARRIER_ALL_SUBRESOURCES = 0xffffffff;
enum uint D3D12_SHADER_IDENTIFIER_SIZE_IN_BYTES = 0x00000020;

enum : uint
{
    D3D12_SHADER_MAX_INSTANCES            = 0x0000ffff,
    D3D12_SHADER_MAX_INTERFACES           = 0x000000fd,
    D3D12_SHADER_MAX_INTERFACE_CALL_SITES = 0x00001000,
    D3D12_SHADER_MAX_TYPES                = 0x0000ffff,
    D3D12_SHADER_MINOR_VERSION            = 0x00000001,
}

enum uint D3D12_SHIFT_INSTRUCTION_SHIFT_VALUE_BIT_COUNT = 0x00000005;
enum uint D3D12_SMALL_MSAA_RESOURCE_PLACEMENT_ALIGNMENT = 0x00010000;

enum : uint
{
    D3D12_SO_BUFFER_MAX_STRIDE_IN_BYTES       = 0x00000800,
    D3D12_SO_BUFFER_MAX_WRITE_WINDOW_IN_BYTES = 0x00000200,
}

enum uint D3D12_SO_DDI_REGISTER_INDEX_DENOTING_GAP = 0xffffffff;
enum uint D3D12_SO_OUTPUT_COMPONENT_COUNT = 0x00000080;

enum : uint
{
    D3D12_SPEC_DATE_DAY   = 0x0000000e,
    D3D12_SPEC_DATE_MONTH = 0x0000000b,
    D3D12_SPEC_DATE_YEAR  = 0x000007de,
}

enum : float
{
    D3D12_SRGB_GAMMA                     = 0x1.19999ap+1,
    D3D12_SRGB_TO_FLOAT_DENOMINATOR_1    = 0x1.9d70a4p+3,
    D3D12_SRGB_TO_FLOAT_DENOMINATOR_2    = 0x1.0e147ap+0,
    D3D12_SRGB_TO_FLOAT_EXPONENT         = 0x1.333334p+1,
    D3D12_SRGB_TO_FLOAT_OFFSET           = 0x1.c28f5cp-5,
    D3D12_SRGB_TO_FLOAT_THRESHOLD        = 0x1.4b5dccp-5,
    D3D12_SRGB_TO_FLOAT_TOLERANCE_IN_ULP = 0x1p-1,
}

enum uint D3D12_STANDARD_COMPONENT_BIT_COUNT_DOUBLED = 0x00000040;

enum : uint
{
    D3D12_STANDARD_PIXEL_COMPONENT_COUNT        = 0x00000080,
    D3D12_STANDARD_PIXEL_ELEMENT_COUNT          = 0x00000020,
    D3D12_STANDARD_VECTOR_SIZE                  = 0x00000004,
    D3D12_STANDARD_VERTEX_ELEMENT_COUNT         = 0x00000020,
    D3D12_STANDARD_VERTEX_TOTAL_COMPONENT_COUNT = 0x00000040,
}

enum uint D3D12_SUBTEXEL_FRACTIONAL_BIT_COUNT = 0x00000008;
enum uint D3D12_SYSTEM_RESERVED_REGISTER_SPACE_VALUES_START = 0xfffffff0;
enum uint D3D12_TESSELLATOR_MAX_ISOLINE_DENSITY_TESSELLATION_FACTOR = 0x00000040;

enum : uint
{
    D3D12_TESSELLATOR_MAX_TESSELLATION_FACTOR                 = 0x00000040,
    D3D12_TESSELLATOR_MIN_EVEN_TESSELLATION_FACTOR            = 0x00000002,
    D3D12_TESSELLATOR_MIN_ISOLINE_DENSITY_TESSELLATION_FACTOR = 0x00000001,
}

enum uint D3D12_TEXEL_ADDRESS_RANGE_BIT_COUNT = 0x00000010;
enum uint D3D12_TEXTURE_DATA_PLACEMENT_ALIGNMENT = 0x00000200;
enum uint D3D12_TRACKED_WORKLOAD_MAX_INSTANCES = 0x00000020;
enum uint D3D12_UAV_SLOT_COUNT = 0x00000040;

enum : uint
{
    D3D12_VIDEO_DECODE_MAX_ARGUMENTS                  = 0x0000000a,
    D3D12_VIDEO_DECODE_MAX_HISTOGRAM_COMPONENTS       = 0x00000004,
    D3D12_VIDEO_DECODE_MIN_BITSTREAM_OFFSET_ALIGNMENT = 0x00000100,
    D3D12_VIDEO_DECODE_MIN_HISTOGRAM_OFFSET_ALIGNMENT = 0x00000100,
}

enum : uint
{
    D3D12_VIDEO_PROCESS_MAX_FILTERS  = 0x00000020,
    D3D12_VIDEO_PROCESS_STEREO_VIEWS = 0x00000002,
}

enum uint D3D12_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE = 0x00000010;
enum int D3D12_VIEWPORT_BOUNDS_MIN = 0xffff8000;

enum : uint
{
    D3D12_VS_INPUT_REGISTER_COMPONENT_BIT_COUNT = 0x00000020,
    D3D12_VS_INPUT_REGISTER_COUNT               = 0x00000020,
    D3D12_VS_INPUT_REGISTER_READS_PER_INST      = 0x00000002,
    D3D12_VS_INPUT_REGISTER_READ_PORTS          = 0x00000001,
}

enum : uint
{
    D3D12_VS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT = 0x00000020,
    D3D12_VS_OUTPUT_REGISTER_COUNT               = 0x00000020,
}

enum uint D3D12_WHQL_DRAWINDEXED_INDEX_COUNT_2_TO_EXP = 0x00000019;

enum : uint
{
    D3D12_SHADER_COMPONENT_MAPPING_MASK                                     = 0x00000007,
    D3D12_SHADER_COMPONENT_MAPPING_SHIFT                                    = 0x00000003,
    D3D12_SHADER_COMPONENT_MAPPING_ALWAYS_SET_BIT_AVOIDING_ZEROMEM_MISTAKES = 0x00001000,
}

enum : uint
{
    D3D12_FILTER_REDUCTION_TYPE_MASK  = 0x00000003,
    D3D12_FILTER_REDUCTION_TYPE_SHIFT = 0x00000007,
}

enum uint D3D12_MIN_FILTER_SHIFT = 0x00000004;
enum uint D3D12_MIP_FILTER_SHIFT = 0x00000000;

enum : uint
{
    D3D12_SHADING_RATE_X_AXIS_SHIFT = 0x00000002,
    D3D12_SHADING_RATE_VALID_MASK   = 0x00000003,
}

// Callbacks

alias PFN_D3D12_SERIALIZE_ROOT_SIGNATURE = HRESULT function(const(D3D12_ROOT_SIGNATURE_DESC)* pRootSignature, 
                                                            D3D_ROOT_SIGNATURE_VERSION Version, ID3DBlob* ppBlob, 
                                                            ID3DBlob* ppErrorBlob);
alias PFN_D3D12_CREATE_ROOT_SIGNATURE_DESERIALIZER = HRESULT function(char* pSrcData, size_t SrcDataSizeInBytes, 
                                                                      const(GUID)* pRootSignatureDeserializerInterface, 
                                                                      void** ppRootSignatureDeserializer);
alias PFN_D3D12_SERIALIZE_VERSIONED_ROOT_SIGNATURE = HRESULT function(const(D3D12_VERSIONED_ROOT_SIGNATURE_DESC)* pRootSignature, 
                                                                      ID3DBlob* ppBlob, ID3DBlob* ppErrorBlob);
alias PFN_D3D12_CREATE_VERSIONED_ROOT_SIGNATURE_DESERIALIZER = HRESULT function(char* pSrcData, 
                                                                                size_t SrcDataSizeInBytes, 
                                                                                const(GUID)* pRootSignatureDeserializerInterface, 
                                                                                void** ppRootSignatureDeserializer);
alias PFN_D3D12_CREATE_DEVICE = HRESULT function(IUnknown param0, D3D_FEATURE_LEVEL param1, const(GUID)* param2, 
                                                 void** param3);
alias PFN_D3D12_GET_DEBUG_INTERFACE = HRESULT function(const(GUID)* param0, void** param1);
alias PFN_D3D11ON12_CREATE_DEVICE = HRESULT function(IUnknown param0, uint param1, char* param2, 
                                                     uint FeatureLevels, char* param4, uint NumQueues, uint param6, 
                                                     ID3D11Device* param7, ID3D11DeviceContext* param8, 
                                                     D3D_FEATURE_LEVEL* param9);

// Structs


struct D3D12_COMMAND_QUEUE_DESC
{
    D3D12_COMMAND_LIST_TYPE Type;
    int  Priority;
    D3D12_COMMAND_QUEUE_FLAGS Flags;
    uint NodeMask;
}

struct D3D12_INPUT_ELEMENT_DESC
{
    const(char)* SemanticName;
    uint         SemanticIndex;
    DXGI_FORMAT  Format;
    uint         InputSlot;
    uint         AlignedByteOffset;
    D3D12_INPUT_CLASSIFICATION InputSlotClass;
    uint         InstanceDataStepRate;
}

struct D3D12_SO_DECLARATION_ENTRY
{
    uint         Stream;
    const(char)* SemanticName;
    uint         SemanticIndex;
    ubyte        StartComponent;
    ubyte        ComponentCount;
    ubyte        OutputSlot;
}

struct D3D12_VIEWPORT
{
    float TopLeftX;
    float TopLeftY;
    float Width;
    float Height;
    float MinDepth;
    float MaxDepth;
}

struct D3D12_BOX
{
    uint left;
    uint top;
    uint front;
    uint right;
    uint bottom;
    uint back;
}

struct D3D12_DEPTH_STENCILOP_DESC
{
    D3D12_STENCIL_OP StencilFailOp;
    D3D12_STENCIL_OP StencilDepthFailOp;
    D3D12_STENCIL_OP StencilPassOp;
    D3D12_COMPARISON_FUNC StencilFunc;
}

struct D3D12_DEPTH_STENCIL_DESC
{
    BOOL  DepthEnable;
    D3D12_DEPTH_WRITE_MASK DepthWriteMask;
    D3D12_COMPARISON_FUNC DepthFunc;
    BOOL  StencilEnable;
    ubyte StencilReadMask;
    ubyte StencilWriteMask;
    D3D12_DEPTH_STENCILOP_DESC FrontFace;
    D3D12_DEPTH_STENCILOP_DESC BackFace;
}

struct D3D12_DEPTH_STENCIL_DESC1
{
    BOOL  DepthEnable;
    D3D12_DEPTH_WRITE_MASK DepthWriteMask;
    D3D12_COMPARISON_FUNC DepthFunc;
    BOOL  StencilEnable;
    ubyte StencilReadMask;
    ubyte StencilWriteMask;
    D3D12_DEPTH_STENCILOP_DESC FrontFace;
    D3D12_DEPTH_STENCILOP_DESC BackFace;
    BOOL  DepthBoundsTestEnable;
}

struct D3D12_RENDER_TARGET_BLEND_DESC
{
    BOOL           BlendEnable;
    BOOL           LogicOpEnable;
    D3D12_BLEND    SrcBlend;
    D3D12_BLEND    DestBlend;
    D3D12_BLEND_OP BlendOp;
    D3D12_BLEND    SrcBlendAlpha;
    D3D12_BLEND    DestBlendAlpha;
    D3D12_BLEND_OP BlendOpAlpha;
    D3D12_LOGIC_OP LogicOp;
    ubyte          RenderTargetWriteMask;
}

struct D3D12_BLEND_DESC
{
    BOOL AlphaToCoverageEnable;
    BOOL IndependentBlendEnable;
    D3D12_RENDER_TARGET_BLEND_DESC[8] RenderTarget;
}

struct D3D12_RASTERIZER_DESC
{
    D3D12_FILL_MODE FillMode;
    D3D12_CULL_MODE CullMode;
    BOOL            FrontCounterClockwise;
    int             DepthBias;
    float           DepthBiasClamp;
    float           SlopeScaledDepthBias;
    BOOL            DepthClipEnable;
    BOOL            MultisampleEnable;
    BOOL            AntialiasedLineEnable;
    uint            ForcedSampleCount;
    D3D12_CONSERVATIVE_RASTERIZATION_MODE ConservativeRaster;
}

struct D3D12_SHADER_BYTECODE
{
    const(void)* pShaderBytecode;
    size_t       BytecodeLength;
}

struct D3D12_STREAM_OUTPUT_DESC
{
    const(D3D12_SO_DECLARATION_ENTRY)* pSODeclaration;
    uint         NumEntries;
    const(uint)* pBufferStrides;
    uint         NumStrides;
    uint         RasterizedStream;
}

struct D3D12_INPUT_LAYOUT_DESC
{
    const(D3D12_INPUT_ELEMENT_DESC)* pInputElementDescs;
    uint NumElements;
}

struct D3D12_CACHED_PIPELINE_STATE
{
    const(void)* pCachedBlob;
    size_t       CachedBlobSizeInBytes;
}

struct D3D12_GRAPHICS_PIPELINE_STATE_DESC
{
    ID3D12RootSignature pRootSignature;
    D3D12_SHADER_BYTECODE VS;
    D3D12_SHADER_BYTECODE PS;
    D3D12_SHADER_BYTECODE DS;
    D3D12_SHADER_BYTECODE HS;
    D3D12_SHADER_BYTECODE GS;
    D3D12_STREAM_OUTPUT_DESC StreamOutput;
    D3D12_BLEND_DESC    BlendState;
    uint                SampleMask;
    D3D12_RASTERIZER_DESC RasterizerState;
    D3D12_DEPTH_STENCIL_DESC DepthStencilState;
    D3D12_INPUT_LAYOUT_DESC InputLayout;
    D3D12_INDEX_BUFFER_STRIP_CUT_VALUE IBStripCutValue;
    D3D12_PRIMITIVE_TOPOLOGY_TYPE PrimitiveTopologyType;
    uint                NumRenderTargets;
    DXGI_FORMAT[8]      RTVFormats;
    DXGI_FORMAT         DSVFormat;
    DXGI_SAMPLE_DESC    SampleDesc;
    uint                NodeMask;
    D3D12_CACHED_PIPELINE_STATE CachedPSO;
    D3D12_PIPELINE_STATE_FLAGS Flags;
}

struct D3D12_COMPUTE_PIPELINE_STATE_DESC
{
    ID3D12RootSignature pRootSignature;
    D3D12_SHADER_BYTECODE CS;
    uint                NodeMask;
    D3D12_CACHED_PIPELINE_STATE CachedPSO;
    D3D12_PIPELINE_STATE_FLAGS Flags;
}

struct D3D12_RT_FORMAT_ARRAY
{
    DXGI_FORMAT[8] RTFormats;
    uint           NumRenderTargets;
}

struct D3D12_PIPELINE_STATE_STREAM_DESC
{
    size_t SizeInBytes;
    void*  pPipelineStateSubobjectStream;
}

struct D3D12_FEATURE_DATA_D3D12_OPTIONS
{
    BOOL DoublePrecisionFloatShaderOps;
    BOOL OutputMergerLogicOp;
    D3D12_SHADER_MIN_PRECISION_SUPPORT MinPrecisionSupport;
    D3D12_TILED_RESOURCES_TIER TiledResourcesTier;
    D3D12_RESOURCE_BINDING_TIER ResourceBindingTier;
    BOOL PSSpecifiedStencilRefSupported;
    BOOL TypedUAVLoadAdditionalFormats;
    BOOL ROVsSupported;
    D3D12_CONSERVATIVE_RASTERIZATION_TIER ConservativeRasterizationTier;
    uint MaxGPUVirtualAddressBitsPerResource;
    BOOL StandardSwizzle64KBSupported;
    D3D12_CROSS_NODE_SHARING_TIER CrossNodeSharingTier;
    BOOL CrossAdapterRowMajorTextureSupported;
    BOOL VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation;
    D3D12_RESOURCE_HEAP_TIER ResourceHeapTier;
}

struct D3D12_FEATURE_DATA_D3D12_OPTIONS1
{
    BOOL WaveOps;
    uint WaveLaneCountMin;
    uint WaveLaneCountMax;
    uint TotalLaneCount;
    BOOL ExpandedComputeResourceStates;
    BOOL Int64ShaderOps;
}

struct D3D12_FEATURE_DATA_D3D12_OPTIONS2
{
    BOOL DepthBoundsTestSupported;
    D3D12_PROGRAMMABLE_SAMPLE_POSITIONS_TIER ProgrammableSamplePositionsTier;
}

struct D3D12_FEATURE_DATA_ROOT_SIGNATURE
{
    D3D_ROOT_SIGNATURE_VERSION HighestVersion;
}

struct D3D12_FEATURE_DATA_ARCHITECTURE
{
    uint NodeIndex;
    BOOL TileBasedRenderer;
    BOOL UMA;
    BOOL CacheCoherentUMA;
}

struct D3D12_FEATURE_DATA_ARCHITECTURE1
{
    uint NodeIndex;
    BOOL TileBasedRenderer;
    BOOL UMA;
    BOOL CacheCoherentUMA;
    BOOL IsolatedMMU;
}

struct D3D12_FEATURE_DATA_FEATURE_LEVELS
{
    uint              NumFeatureLevels;
    const(D3D_FEATURE_LEVEL)* pFeatureLevelsRequested;
    D3D_FEATURE_LEVEL MaxSupportedFeatureLevel;
}

struct D3D12_FEATURE_DATA_SHADER_MODEL
{
    D3D_SHADER_MODEL HighestShaderModel;
}

struct D3D12_FEATURE_DATA_FORMAT_SUPPORT
{
    DXGI_FORMAT Format;
    D3D12_FORMAT_SUPPORT1 Support1;
    D3D12_FORMAT_SUPPORT2 Support2;
}

struct D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS
{
    DXGI_FORMAT Format;
    uint        SampleCount;
    D3D12_MULTISAMPLE_QUALITY_LEVEL_FLAGS Flags;
    uint        NumQualityLevels;
}

struct D3D12_FEATURE_DATA_FORMAT_INFO
{
    DXGI_FORMAT Format;
    ubyte       PlaneCount;
}

struct D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT
{
    uint MaxGPUVirtualAddressBitsPerResource;
    uint MaxGPUVirtualAddressBitsPerProcess;
}

struct D3D12_FEATURE_DATA_SHADER_CACHE
{
    D3D12_SHADER_CACHE_SUPPORT_FLAGS SupportFlags;
}

struct D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY
{
    D3D12_COMMAND_LIST_TYPE CommandListType;
    uint Priority;
    BOOL PriorityForTypeIsSupported;
}

struct D3D12_FEATURE_DATA_D3D12_OPTIONS3
{
    BOOL CopyQueueTimestampQueriesSupported;
    BOOL CastingFullyTypedFormatSupported;
    D3D12_COMMAND_LIST_SUPPORT_FLAGS WriteBufferImmediateSupportFlags;
    D3D12_VIEW_INSTANCING_TIER ViewInstancingTier;
    BOOL BarycentricsSupported;
}

struct D3D12_FEATURE_DATA_EXISTING_HEAPS
{
    BOOL Supported;
}

struct D3D12_FEATURE_DATA_D3D12_OPTIONS4
{
    BOOL MSAA64KBAlignedTextureSupported;
    D3D12_SHARED_RESOURCE_COMPATIBILITY_TIER SharedResourceCompatibilityTier;
    BOOL Native16BitShaderOpsSupported;
}

struct D3D12_FEATURE_DATA_SERIALIZATION
{
    uint NodeIndex;
    D3D12_HEAP_SERIALIZATION_TIER HeapSerializationTier;
}

struct D3D12_FEATURE_DATA_CROSS_NODE
{
    D3D12_CROSS_NODE_SHARING_TIER SharingTier;
    BOOL AtomicShaderInstructions;
}

struct D3D12_FEATURE_DATA_D3D12_OPTIONS5
{
    BOOL SRVOnlyTiledResourceTier3;
    D3D12_RENDER_PASS_TIER RenderPassesTier;
    D3D12_RAYTRACING_TIER RaytracingTier;
}

struct D3D12_FEATURE_DATA_D3D12_OPTIONS6
{
    BOOL AdditionalShadingRatesSupported;
    BOOL PerPrimitiveShadingRateSupportedWithViewportIndexing;
    D3D12_VARIABLE_SHADING_RATE_TIER VariableShadingRateTier;
    uint ShadingRateImageTileSize;
    BOOL BackgroundProcessingSupported;
}

struct D3D12_FEATURE_DATA_D3D12_OPTIONS7
{
    D3D12_MESH_SHADER_TIER MeshShaderTier;
    D3D12_SAMPLER_FEEDBACK_TIER SamplerFeedbackTier;
}

struct D3D12_FEATURE_DATA_QUERY_META_COMMAND
{
    GUID         CommandId;
    uint         NodeMask;
    const(void)* pQueryInputData;
    size_t       QueryInputDataSizeInBytes;
    void*        pQueryOutputData;
    size_t       QueryOutputDataSizeInBytes;
}

struct D3D12_RESOURCE_ALLOCATION_INFO
{
    ulong SizeInBytes;
    ulong Alignment;
}

struct D3D12_RESOURCE_ALLOCATION_INFO1
{
    ulong Offset;
    ulong Alignment;
    ulong SizeInBytes;
}

struct D3D12_HEAP_PROPERTIES
{
    D3D12_HEAP_TYPE   Type;
    D3D12_CPU_PAGE_PROPERTY CPUPageProperty;
    D3D12_MEMORY_POOL MemoryPoolPreference;
    uint              CreationNodeMask;
    uint              VisibleNodeMask;
}

struct D3D12_HEAP_DESC
{
    ulong            SizeInBytes;
    D3D12_HEAP_PROPERTIES Properties;
    ulong            Alignment;
    D3D12_HEAP_FLAGS Flags;
}

struct D3D12_MIP_REGION
{
    uint Width;
    uint Height;
    uint Depth;
}

struct D3D12_RESOURCE_DESC
{
    D3D12_RESOURCE_DIMENSION Dimension;
    ulong                Alignment;
    ulong                Width;
    uint                 Height;
    ushort               DepthOrArraySize;
    ushort               MipLevels;
    DXGI_FORMAT          Format;
    DXGI_SAMPLE_DESC     SampleDesc;
    D3D12_TEXTURE_LAYOUT Layout;
    D3D12_RESOURCE_FLAGS Flags;
}

struct D3D12_RESOURCE_DESC1
{
    D3D12_RESOURCE_DIMENSION Dimension;
    ulong                Alignment;
    ulong                Width;
    uint                 Height;
    ushort               DepthOrArraySize;
    ushort               MipLevels;
    DXGI_FORMAT          Format;
    DXGI_SAMPLE_DESC     SampleDesc;
    D3D12_TEXTURE_LAYOUT Layout;
    D3D12_RESOURCE_FLAGS Flags;
    D3D12_MIP_REGION     SamplerFeedbackMipRegion;
}

struct D3D12_DEPTH_STENCIL_VALUE
{
    float Depth;
    ubyte Stencil;
}

struct D3D12_CLEAR_VALUE
{
    DXGI_FORMAT Format;
    union
    {
        float[4] Color;
        D3D12_DEPTH_STENCIL_VALUE DepthStencil;
    }
}

struct D3D12_RANGE
{
    size_t Begin;
    size_t End;
}

struct D3D12_RANGE_UINT64
{
    ulong Begin;
    ulong End;
}

struct D3D12_SUBRESOURCE_RANGE_UINT64
{
    uint               Subresource;
    D3D12_RANGE_UINT64 Range;
}

struct D3D12_SUBRESOURCE_INFO
{
    ulong Offset;
    uint  RowPitch;
    uint  DepthPitch;
}

struct D3D12_TILED_RESOURCE_COORDINATE
{
    uint X;
    uint Y;
    uint Z;
    uint Subresource;
}

struct D3D12_TILE_REGION_SIZE
{
    uint   NumTiles;
    BOOL   UseBox;
    uint   Width;
    ushort Height;
    ushort Depth;
}

struct D3D12_SUBRESOURCE_TILING
{
    uint   WidthInTiles;
    ushort HeightInTiles;
    ushort DepthInTiles;
    uint   StartTileIndexInOverallResource;
}

struct D3D12_TILE_SHAPE
{
    uint WidthInTexels;
    uint HeightInTexels;
    uint DepthInTexels;
}

struct D3D12_PACKED_MIP_INFO
{
    ubyte NumStandardMips;
    ubyte NumPackedMips;
    uint  NumTilesForPackedMips;
    uint  StartTileIndexInOverallResource;
}

struct D3D12_RESOURCE_TRANSITION_BARRIER
{
    ID3D12Resource pResource;
    uint           Subresource;
    D3D12_RESOURCE_STATES StateBefore;
    D3D12_RESOURCE_STATES StateAfter;
}

struct D3D12_RESOURCE_ALIASING_BARRIER
{
    ID3D12Resource pResourceBefore;
    ID3D12Resource pResourceAfter;
}

struct D3D12_RESOURCE_UAV_BARRIER
{
    ID3D12Resource pResource;
}

struct D3D12_RESOURCE_BARRIER
{
    D3D12_RESOURCE_BARRIER_TYPE Type;
    D3D12_RESOURCE_BARRIER_FLAGS Flags;
    union
    {
        D3D12_RESOURCE_TRANSITION_BARRIER Transition;
        D3D12_RESOURCE_ALIASING_BARRIER Aliasing;
        D3D12_RESOURCE_UAV_BARRIER UAV;
    }
}

struct D3D12_SUBRESOURCE_FOOTPRINT
{
    DXGI_FORMAT Format;
    uint        Width;
    uint        Height;
    uint        Depth;
    uint        RowPitch;
}

struct D3D12_PLACED_SUBRESOURCE_FOOTPRINT
{
    ulong Offset;
    D3D12_SUBRESOURCE_FOOTPRINT Footprint;
}

struct D3D12_TEXTURE_COPY_LOCATION
{
    ID3D12Resource pResource;
    D3D12_TEXTURE_COPY_TYPE Type;
    union
    {
        D3D12_PLACED_SUBRESOURCE_FOOTPRINT PlacedFootprint;
        uint SubresourceIndex;
    }
}

struct D3D12_SAMPLE_POSITION
{
    byte X;
    byte Y;
}

struct D3D12_VIEW_INSTANCE_LOCATION
{
    uint ViewportArrayIndex;
    uint RenderTargetArrayIndex;
}

struct D3D12_VIEW_INSTANCING_DESC
{
    uint ViewInstanceCount;
    const(D3D12_VIEW_INSTANCE_LOCATION)* pViewInstanceLocations;
    D3D12_VIEW_INSTANCING_FLAGS Flags;
}

struct D3D12_BUFFER_SRV
{
    ulong FirstElement;
    uint  NumElements;
    uint  StructureByteStride;
    D3D12_BUFFER_SRV_FLAGS Flags;
}

struct D3D12_TEX1D_SRV
{
    uint  MostDetailedMip;
    uint  MipLevels;
    float ResourceMinLODClamp;
}

struct D3D12_TEX1D_ARRAY_SRV
{
    uint  MostDetailedMip;
    uint  MipLevels;
    uint  FirstArraySlice;
    uint  ArraySize;
    float ResourceMinLODClamp;
}

struct D3D12_TEX2D_SRV
{
    uint  MostDetailedMip;
    uint  MipLevels;
    uint  PlaneSlice;
    float ResourceMinLODClamp;
}

struct D3D12_TEX2D_ARRAY_SRV
{
    uint  MostDetailedMip;
    uint  MipLevels;
    uint  FirstArraySlice;
    uint  ArraySize;
    uint  PlaneSlice;
    float ResourceMinLODClamp;
}

struct D3D12_TEX3D_SRV
{
    uint  MostDetailedMip;
    uint  MipLevels;
    float ResourceMinLODClamp;
}

struct D3D12_TEXCUBE_SRV
{
    uint  MostDetailedMip;
    uint  MipLevels;
    float ResourceMinLODClamp;
}

struct D3D12_TEXCUBE_ARRAY_SRV
{
    uint  MostDetailedMip;
    uint  MipLevels;
    uint  First2DArrayFace;
    uint  NumCubes;
    float ResourceMinLODClamp;
}

struct D3D12_TEX2DMS_SRV
{
    uint UnusedField_NothingToDefine;
}

struct D3D12_TEX2DMS_ARRAY_SRV
{
    uint FirstArraySlice;
    uint ArraySize;
}

struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV
{
    ulong Location;
}

struct D3D12_SHADER_RESOURCE_VIEW_DESC
{
    DXGI_FORMAT         Format;
    D3D12_SRV_DIMENSION ViewDimension;
    uint                Shader4ComponentMapping;
    union
    {
        D3D12_BUFFER_SRV  Buffer;
        D3D12_TEX1D_SRV   Texture1D;
        D3D12_TEX1D_ARRAY_SRV Texture1DArray;
        D3D12_TEX2D_SRV   Texture2D;
        D3D12_TEX2D_ARRAY_SRV Texture2DArray;
        D3D12_TEX2DMS_SRV Texture2DMS;
        D3D12_TEX2DMS_ARRAY_SRV Texture2DMSArray;
        D3D12_TEX3D_SRV   Texture3D;
        D3D12_TEXCUBE_SRV TextureCube;
        D3D12_TEXCUBE_ARRAY_SRV TextureCubeArray;
        D3D12_RAYTRACING_ACCELERATION_STRUCTURE_SRV RaytracingAccelerationStructure;
    }
}

struct D3D12_CONSTANT_BUFFER_VIEW_DESC
{
    ulong BufferLocation;
    uint  SizeInBytes;
}

struct D3D12_SAMPLER_DESC
{
    D3D12_FILTER Filter;
    D3D12_TEXTURE_ADDRESS_MODE AddressU;
    D3D12_TEXTURE_ADDRESS_MODE AddressV;
    D3D12_TEXTURE_ADDRESS_MODE AddressW;
    float        MipLODBias;
    uint         MaxAnisotropy;
    D3D12_COMPARISON_FUNC ComparisonFunc;
    float[4]     BorderColor;
    float        MinLOD;
    float        MaxLOD;
}

struct D3D12_BUFFER_UAV
{
    ulong FirstElement;
    uint  NumElements;
    uint  StructureByteStride;
    ulong CounterOffsetInBytes;
    D3D12_BUFFER_UAV_FLAGS Flags;
}

struct D3D12_TEX1D_UAV
{
    uint MipSlice;
}

struct D3D12_TEX1D_ARRAY_UAV
{
    uint MipSlice;
    uint FirstArraySlice;
    uint ArraySize;
}

struct D3D12_TEX2D_UAV
{
    uint MipSlice;
    uint PlaneSlice;
}

struct D3D12_TEX2D_ARRAY_UAV
{
    uint MipSlice;
    uint FirstArraySlice;
    uint ArraySize;
    uint PlaneSlice;
}

struct D3D12_TEX3D_UAV
{
    uint MipSlice;
    uint FirstWSlice;
    uint WSize;
}

struct D3D12_UNORDERED_ACCESS_VIEW_DESC
{
    DXGI_FORMAT         Format;
    D3D12_UAV_DIMENSION ViewDimension;
    union
    {
        D3D12_BUFFER_UAV Buffer;
        D3D12_TEX1D_UAV  Texture1D;
        D3D12_TEX1D_ARRAY_UAV Texture1DArray;
        D3D12_TEX2D_UAV  Texture2D;
        D3D12_TEX2D_ARRAY_UAV Texture2DArray;
        D3D12_TEX3D_UAV  Texture3D;
    }
}

struct D3D12_BUFFER_RTV
{
    ulong FirstElement;
    uint  NumElements;
}

struct D3D12_TEX1D_RTV
{
    uint MipSlice;
}

struct D3D12_TEX1D_ARRAY_RTV
{
    uint MipSlice;
    uint FirstArraySlice;
    uint ArraySize;
}

struct D3D12_TEX2D_RTV
{
    uint MipSlice;
    uint PlaneSlice;
}

struct D3D12_TEX2DMS_RTV
{
    uint UnusedField_NothingToDefine;
}

struct D3D12_TEX2D_ARRAY_RTV
{
    uint MipSlice;
    uint FirstArraySlice;
    uint ArraySize;
    uint PlaneSlice;
}

struct D3D12_TEX2DMS_ARRAY_RTV
{
    uint FirstArraySlice;
    uint ArraySize;
}

struct D3D12_TEX3D_RTV
{
    uint MipSlice;
    uint FirstWSlice;
    uint WSize;
}

struct D3D12_RENDER_TARGET_VIEW_DESC
{
    DXGI_FORMAT         Format;
    D3D12_RTV_DIMENSION ViewDimension;
    union
    {
        D3D12_BUFFER_RTV  Buffer;
        D3D12_TEX1D_RTV   Texture1D;
        D3D12_TEX1D_ARRAY_RTV Texture1DArray;
        D3D12_TEX2D_RTV   Texture2D;
        D3D12_TEX2D_ARRAY_RTV Texture2DArray;
        D3D12_TEX2DMS_RTV Texture2DMS;
        D3D12_TEX2DMS_ARRAY_RTV Texture2DMSArray;
        D3D12_TEX3D_RTV   Texture3D;
    }
}

struct D3D12_TEX1D_DSV
{
    uint MipSlice;
}

struct D3D12_TEX1D_ARRAY_DSV
{
    uint MipSlice;
    uint FirstArraySlice;
    uint ArraySize;
}

struct D3D12_TEX2D_DSV
{
    uint MipSlice;
}

struct D3D12_TEX2D_ARRAY_DSV
{
    uint MipSlice;
    uint FirstArraySlice;
    uint ArraySize;
}

struct D3D12_TEX2DMS_DSV
{
    uint UnusedField_NothingToDefine;
}

struct D3D12_TEX2DMS_ARRAY_DSV
{
    uint FirstArraySlice;
    uint ArraySize;
}

struct D3D12_DEPTH_STENCIL_VIEW_DESC
{
    DXGI_FORMAT         Format;
    D3D12_DSV_DIMENSION ViewDimension;
    D3D12_DSV_FLAGS     Flags;
    union
    {
        D3D12_TEX1D_DSV   Texture1D;
        D3D12_TEX1D_ARRAY_DSV Texture1DArray;
        D3D12_TEX2D_DSV   Texture2D;
        D3D12_TEX2D_ARRAY_DSV Texture2DArray;
        D3D12_TEX2DMS_DSV Texture2DMS;
        D3D12_TEX2DMS_ARRAY_DSV Texture2DMSArray;
    }
}

struct D3D12_DESCRIPTOR_HEAP_DESC
{
    D3D12_DESCRIPTOR_HEAP_TYPE Type;
    uint NumDescriptors;
    D3D12_DESCRIPTOR_HEAP_FLAGS Flags;
    uint NodeMask;
}

struct D3D12_DESCRIPTOR_RANGE
{
    D3D12_DESCRIPTOR_RANGE_TYPE RangeType;
    uint NumDescriptors;
    uint BaseShaderRegister;
    uint RegisterSpace;
    uint OffsetInDescriptorsFromTableStart;
}

struct D3D12_ROOT_DESCRIPTOR_TABLE
{
    uint NumDescriptorRanges;
    const(D3D12_DESCRIPTOR_RANGE)* pDescriptorRanges;
}

struct D3D12_ROOT_CONSTANTS
{
    uint ShaderRegister;
    uint RegisterSpace;
    uint Num32BitValues;
}

struct D3D12_ROOT_DESCRIPTOR
{
    uint ShaderRegister;
    uint RegisterSpace;
}

struct D3D12_ROOT_PARAMETER
{
    D3D12_ROOT_PARAMETER_TYPE ParameterType;
    union
    {
        D3D12_ROOT_DESCRIPTOR_TABLE DescriptorTable;
        D3D12_ROOT_CONSTANTS Constants;
        D3D12_ROOT_DESCRIPTOR Descriptor;
    }
    D3D12_SHADER_VISIBILITY ShaderVisibility;
}

struct D3D12_STATIC_SAMPLER_DESC
{
    D3D12_FILTER Filter;
    D3D12_TEXTURE_ADDRESS_MODE AddressU;
    D3D12_TEXTURE_ADDRESS_MODE AddressV;
    D3D12_TEXTURE_ADDRESS_MODE AddressW;
    float        MipLODBias;
    uint         MaxAnisotropy;
    D3D12_COMPARISON_FUNC ComparisonFunc;
    D3D12_STATIC_BORDER_COLOR BorderColor;
    float        MinLOD;
    float        MaxLOD;
    uint         ShaderRegister;
    uint         RegisterSpace;
    D3D12_SHADER_VISIBILITY ShaderVisibility;
}

struct D3D12_ROOT_SIGNATURE_DESC
{
    uint NumParameters;
    const(D3D12_ROOT_PARAMETER)* pParameters;
    uint NumStaticSamplers;
    const(D3D12_STATIC_SAMPLER_DESC)* pStaticSamplers;
    D3D12_ROOT_SIGNATURE_FLAGS Flags;
}

struct D3D12_DESCRIPTOR_RANGE1
{
    D3D12_DESCRIPTOR_RANGE_TYPE RangeType;
    uint NumDescriptors;
    uint BaseShaderRegister;
    uint RegisterSpace;
    D3D12_DESCRIPTOR_RANGE_FLAGS Flags;
    uint OffsetInDescriptorsFromTableStart;
}

struct D3D12_ROOT_DESCRIPTOR_TABLE1
{
    uint NumDescriptorRanges;
    const(D3D12_DESCRIPTOR_RANGE1)* pDescriptorRanges;
}

struct D3D12_ROOT_DESCRIPTOR1
{
    uint ShaderRegister;
    uint RegisterSpace;
    D3D12_ROOT_DESCRIPTOR_FLAGS Flags;
}

struct D3D12_ROOT_PARAMETER1
{
    D3D12_ROOT_PARAMETER_TYPE ParameterType;
    union
    {
        D3D12_ROOT_DESCRIPTOR_TABLE1 DescriptorTable;
        D3D12_ROOT_CONSTANTS Constants;
        D3D12_ROOT_DESCRIPTOR1 Descriptor;
    }
    D3D12_SHADER_VISIBILITY ShaderVisibility;
}

struct D3D12_ROOT_SIGNATURE_DESC1
{
    uint NumParameters;
    const(D3D12_ROOT_PARAMETER1)* pParameters;
    uint NumStaticSamplers;
    const(D3D12_STATIC_SAMPLER_DESC)* pStaticSamplers;
    D3D12_ROOT_SIGNATURE_FLAGS Flags;
}

struct D3D12_VERSIONED_ROOT_SIGNATURE_DESC
{
    D3D_ROOT_SIGNATURE_VERSION Version;
    union
    {
        D3D12_ROOT_SIGNATURE_DESC Desc_1_0;
        D3D12_ROOT_SIGNATURE_DESC1 Desc_1_1;
    }
}

struct D3D12_CPU_DESCRIPTOR_HANDLE
{
    size_t ptr;
}

struct D3D12_GPU_DESCRIPTOR_HANDLE
{
    ulong ptr;
}

struct D3D12_DISCARD_REGION
{
    uint         NumRects;
    const(RECT)* pRects;
    uint         FirstSubresource;
    uint         NumSubresources;
}

struct D3D12_QUERY_HEAP_DESC
{
    D3D12_QUERY_HEAP_TYPE Type;
    uint Count;
    uint NodeMask;
}

struct D3D12_QUERY_DATA_PIPELINE_STATISTICS
{
    ulong IAVertices;
    ulong IAPrimitives;
    ulong VSInvocations;
    ulong GSInvocations;
    ulong GSPrimitives;
    ulong CInvocations;
    ulong CPrimitives;
    ulong PSInvocations;
    ulong HSInvocations;
    ulong DSInvocations;
    ulong CSInvocations;
}

struct D3D12_QUERY_DATA_SO_STATISTICS
{
    ulong NumPrimitivesWritten;
    ulong PrimitivesStorageNeeded;
}

struct D3D12_STREAM_OUTPUT_BUFFER_VIEW
{
    ulong BufferLocation;
    ulong SizeInBytes;
    ulong BufferFilledSizeLocation;
}

struct D3D12_DRAW_ARGUMENTS
{
    uint VertexCountPerInstance;
    uint InstanceCount;
    uint StartVertexLocation;
    uint StartInstanceLocation;
}

struct D3D12_DRAW_INDEXED_ARGUMENTS
{
    uint IndexCountPerInstance;
    uint InstanceCount;
    uint StartIndexLocation;
    int  BaseVertexLocation;
    uint StartInstanceLocation;
}

struct D3D12_DISPATCH_ARGUMENTS
{
    uint ThreadGroupCountX;
    uint ThreadGroupCountY;
    uint ThreadGroupCountZ;
}

struct D3D12_VERTEX_BUFFER_VIEW
{
    ulong BufferLocation;
    uint  SizeInBytes;
    uint  StrideInBytes;
}

struct D3D12_INDEX_BUFFER_VIEW
{
    ulong       BufferLocation;
    uint        SizeInBytes;
    DXGI_FORMAT Format;
}

struct D3D12_INDIRECT_ARGUMENT_DESC
{
    D3D12_INDIRECT_ARGUMENT_TYPE Type;
    union
    {
        struct VertexBuffer
        {
            uint Slot;
        }
        struct Constant
        {
            uint RootParameterIndex;
            uint DestOffsetIn32BitValues;
            uint Num32BitValuesToSet;
        }
        struct ConstantBufferView
        {
            uint RootParameterIndex;
        }
        struct ShaderResourceView
        {
            uint RootParameterIndex;
        }
        struct UnorderedAccessView
        {
            uint RootParameterIndex;
        }
    }
}

struct D3D12_COMMAND_SIGNATURE_DESC
{
    uint ByteStride;
    uint NumArgumentDescs;
    const(D3D12_INDIRECT_ARGUMENT_DESC)* pArgumentDescs;
    uint NodeMask;
}

struct D3D12_WRITEBUFFERIMMEDIATE_PARAMETER
{
    ulong Dest;
    uint  Value;
}

struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT
{
    uint NodeIndex;
    D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAGS Support;
}

struct D3D12_PROTECTED_RESOURCE_SESSION_DESC
{
    uint NodeMask;
    D3D12_PROTECTED_RESOURCE_SESSION_FLAGS Flags;
}

struct D3D12_META_COMMAND_PARAMETER_DESC
{
    const(wchar)* Name;
    D3D12_META_COMMAND_PARAMETER_TYPE Type;
    D3D12_META_COMMAND_PARAMETER_FLAGS Flags;
    D3D12_RESOURCE_STATES RequiredResourceState;
    uint          StructureOffset;
}

struct D3D12_META_COMMAND_DESC
{
    GUID          Id;
    const(wchar)* Name;
    D3D12_GRAPHICS_STATES InitializationDirtyState;
    D3D12_GRAPHICS_STATES ExecutionDirtyState;
}

struct D3D12_STATE_SUBOBJECT
{
    D3D12_STATE_SUBOBJECT_TYPE Type;
    const(void)* pDesc;
}

struct D3D12_STATE_OBJECT_CONFIG
{
    D3D12_STATE_OBJECT_FLAGS Flags;
}

struct D3D12_GLOBAL_ROOT_SIGNATURE
{
    ID3D12RootSignature pGlobalRootSignature;
}

struct D3D12_LOCAL_ROOT_SIGNATURE
{
    ID3D12RootSignature pLocalRootSignature;
}

struct D3D12_NODE_MASK
{
    uint NodeMask;
}

struct D3D12_EXPORT_DESC
{
    const(wchar)*      Name;
    const(wchar)*      ExportToRename;
    D3D12_EXPORT_FLAGS Flags;
}

struct D3D12_DXIL_LIBRARY_DESC
{
    D3D12_SHADER_BYTECODE DXILLibrary;
    uint               NumExports;
    D3D12_EXPORT_DESC* pExports;
}

struct D3D12_EXISTING_COLLECTION_DESC
{
    ID3D12StateObject  pExistingCollection;
    uint               NumExports;
    D3D12_EXPORT_DESC* pExports;
}

struct D3D12_SUBOBJECT_TO_EXPORTS_ASSOCIATION
{
    const(D3D12_STATE_SUBOBJECT)* pSubobjectToAssociate;
    uint     NumExports;
    ushort** pExports;
}

struct D3D12_DXIL_SUBOBJECT_TO_EXPORTS_ASSOCIATION
{
    const(wchar)* SubobjectToAssociate;
    uint          NumExports;
    ushort**      pExports;
}

struct D3D12_HIT_GROUP_DESC
{
    const(wchar)*        HitGroupExport;
    D3D12_HIT_GROUP_TYPE Type;
    const(wchar)*        AnyHitShaderImport;
    const(wchar)*        ClosestHitShaderImport;
    const(wchar)*        IntersectionShaderImport;
}

struct D3D12_RAYTRACING_SHADER_CONFIG
{
    uint MaxPayloadSizeInBytes;
    uint MaxAttributeSizeInBytes;
}

struct D3D12_RAYTRACING_PIPELINE_CONFIG
{
    uint MaxTraceRecursionDepth;
}

struct D3D12_RAYTRACING_PIPELINE_CONFIG1
{
    uint MaxTraceRecursionDepth;
    D3D12_RAYTRACING_PIPELINE_FLAGS Flags;
}

struct D3D12_STATE_OBJECT_DESC
{
    D3D12_STATE_OBJECT_TYPE Type;
    uint NumSubobjects;
    const(D3D12_STATE_SUBOBJECT)* pSubobjects;
}

struct D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE
{
    ulong StartAddress;
    ulong StrideInBytes;
}

struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE
{
    ulong StartAddress;
    ulong SizeInBytes;
}

struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE
{
    ulong StartAddress;
    ulong SizeInBytes;
    ulong StrideInBytes;
}

struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC
{
    ulong       Transform3x4;
    DXGI_FORMAT IndexFormat;
    DXGI_FORMAT VertexFormat;
    uint        IndexCount;
    uint        VertexCount;
    ulong       IndexBuffer;
    D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE VertexBuffer;
}

struct D3D12_RAYTRACING_AABB
{
    float MinX;
    float MinY;
    float MinZ;
    float MaxX;
    float MaxY;
    float MaxZ;
}

struct D3D12_RAYTRACING_GEOMETRY_AABBS_DESC
{
    ulong AABBCount;
    D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE AABBs;
}

struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC
{
    ulong DestBuffer;
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE InfoType;
}

struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE_DESC
{
    ulong CompactedSizeInBytes;
}

struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION_DESC
{
    ulong DecodedSizeInBytes;
}

struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_TOOLS_VISUALIZATION_HEADER
{
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE Type;
    uint NumDescs;
}

struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION_DESC
{
    ulong SerializedSizeInBytes;
    ulong NumBottomLevelAccelerationStructurePointers;
}

struct D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER
{
    GUID      DriverOpaqueGUID;
    ubyte[16] DriverOpaqueVersioningData;
}

struct D3D12_SERIALIZED_RAYTRACING_ACCELERATION_STRUCTURE_HEADER
{
    D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER DriverMatchingIdentifier;
    ulong SerializedSizeInBytesIncludingHeader;
    ulong DeserializedSizeInBytes;
    ulong NumBottomLevelAccelerationStructurePointersAfterHeader;
}

struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE_DESC
{
    ulong CurrentSizeInBytes;
}

struct D3D12_RAYTRACING_INSTANCE_DESC
{
    float[12] Transform;
    uint      _bitfield1;
    uint      _bitfield2;
    ulong     AccelerationStructure;
}

struct D3D12_RAYTRACING_GEOMETRY_DESC
{
    D3D12_RAYTRACING_GEOMETRY_TYPE Type;
    D3D12_RAYTRACING_GEOMETRY_FLAGS Flags;
    union
    {
        D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC Triangles;
        D3D12_RAYTRACING_GEOMETRY_AABBS_DESC AABBs;
    }
}

struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS
{
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE Type;
    D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS Flags;
    uint NumDescs;
    D3D12_ELEMENTS_LAYOUT DescsLayout;
    union
    {
        ulong InstanceDescs;
        const(D3D12_RAYTRACING_GEOMETRY_DESC)* pGeometryDescs;
        const(D3D12_RAYTRACING_GEOMETRY_DESC)** ppGeometryDescs;
    }
}

struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC
{
    ulong DestAccelerationStructureData;
    D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS Inputs;
    ulong SourceAccelerationStructureData;
    ulong ScratchAccelerationStructureData;
}

struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO
{
    ulong ResultDataMaxSizeInBytes;
    ulong ScratchDataSizeInBytes;
    ulong UpdateScratchDataSizeInBytes;
}

struct D3D12_AUTO_BREADCRUMB_NODE
{
    const(byte)*       pCommandListDebugNameA;
    const(ushort)*     pCommandListDebugNameW;
    const(byte)*       pCommandQueueDebugNameA;
    const(ushort)*     pCommandQueueDebugNameW;
    ID3D12GraphicsCommandList pCommandList;
    ID3D12CommandQueue pCommandQueue;
    uint               BreadcrumbCount;
    const(uint)*       pLastBreadcrumbValue;
    const(D3D12_AUTO_BREADCRUMB_OP)* pCommandHistory;
    const(D3D12_AUTO_BREADCRUMB_NODE)* pNext;
}

struct D3D12_DRED_BREADCRUMB_CONTEXT
{
    uint           BreadcrumbIndex;
    const(ushort)* pContextString;
}

struct D3D12_AUTO_BREADCRUMB_NODE1
{
    const(byte)*       pCommandListDebugNameA;
    const(ushort)*     pCommandListDebugNameW;
    const(byte)*       pCommandQueueDebugNameA;
    const(ushort)*     pCommandQueueDebugNameW;
    ID3D12GraphicsCommandList pCommandList;
    ID3D12CommandQueue pCommandQueue;
    uint               BreadcrumbCount;
    const(uint)*       pLastBreadcrumbValue;
    const(D3D12_AUTO_BREADCRUMB_OP)* pCommandHistory;
    const(D3D12_AUTO_BREADCRUMB_NODE1)* pNext;
    uint               BreadcrumbContextsCount;
    D3D12_DRED_BREADCRUMB_CONTEXT* pBreadcrumbContexts;
}

struct D3D12_DEVICE_REMOVED_EXTENDED_DATA
{
    D3D12_DRED_FLAGS Flags;
    D3D12_AUTO_BREADCRUMB_NODE* pHeadAutoBreadcrumbNode;
}

struct D3D12_DRED_ALLOCATION_NODE
{
    const(byte)*   ObjectNameA;
    const(ushort)* ObjectNameW;
    D3D12_DRED_ALLOCATION_TYPE AllocationType;
    const(D3D12_DRED_ALLOCATION_NODE)* pNext;
}

struct D3D12_DRED_ALLOCATION_NODE1
{
    const(byte)*    ObjectNameA;
    const(ushort)*  ObjectNameW;
    D3D12_DRED_ALLOCATION_TYPE AllocationType;
    const(D3D12_DRED_ALLOCATION_NODE1)* pNext;
    const(IUnknown) pObject;
}

struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT
{
    const(D3D12_AUTO_BREADCRUMB_NODE)* pHeadAutoBreadcrumbNode;
}

struct D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1
{
    const(D3D12_AUTO_BREADCRUMB_NODE1)* pHeadAutoBreadcrumbNode;
}

struct D3D12_DRED_PAGE_FAULT_OUTPUT
{
    ulong PageFaultVA;
    const(D3D12_DRED_ALLOCATION_NODE)* pHeadExistingAllocationNode;
    const(D3D12_DRED_ALLOCATION_NODE)* pHeadRecentFreedAllocationNode;
}

struct D3D12_DRED_PAGE_FAULT_OUTPUT1
{
    ulong PageFaultVA;
    const(D3D12_DRED_ALLOCATION_NODE1)* pHeadExistingAllocationNode;
    const(D3D12_DRED_ALLOCATION_NODE1)* pHeadRecentFreedAllocationNode;
}

struct D3D12_DEVICE_REMOVED_EXTENDED_DATA1
{
    HRESULT DeviceRemovedReason;
    D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT AutoBreadcrumbsOutput;
    D3D12_DRED_PAGE_FAULT_OUTPUT PageFaultOutput;
}

struct D3D12_DEVICE_REMOVED_EXTENDED_DATA2
{
    HRESULT DeviceRemovedReason;
    D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1 AutoBreadcrumbsOutput;
    D3D12_DRED_PAGE_FAULT_OUTPUT1 PageFaultOutput;
}

struct D3D12_VERSIONED_DEVICE_REMOVED_EXTENDED_DATA
{
    D3D12_DRED_VERSION Version;
    union
    {
        D3D12_DEVICE_REMOVED_EXTENDED_DATA Dred_1_0;
        D3D12_DEVICE_REMOVED_EXTENDED_DATA1 Dred_1_1;
        D3D12_DEVICE_REMOVED_EXTENDED_DATA2 Dred_1_2;
    }
}

struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT
{
    uint NodeIndex;
    uint Count;
}

struct D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES
{
    uint  NodeIndex;
    uint  Count;
    GUID* pTypes;
}

struct D3D12_PROTECTED_RESOURCE_SESSION_DESC1
{
    uint NodeMask;
    D3D12_PROTECTED_RESOURCE_SESSION_FLAGS Flags;
    GUID ProtectionType;
}

struct D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS
{
    D3D12_CLEAR_VALUE ClearValue;
}

struct D3D12_RENDER_PASS_BEGINNING_ACCESS
{
    D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE Type;
    union
    {
        D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS Clear;
    }
}

struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS
{
    uint SrcSubresource;
    uint DstSubresource;
    uint DstX;
    uint DstY;
    RECT SrcRect;
}

struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS
{
    ID3D12Resource     pSrcResource;
    ID3D12Resource     pDstResource;
    uint               SubresourceCount;
    const(D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS)* pSubresourceParameters;
    DXGI_FORMAT        Format;
    D3D12_RESOLVE_MODE ResolveMode;
    BOOL               PreserveResolveSource;
}

struct D3D12_RENDER_PASS_ENDING_ACCESS
{
    D3D12_RENDER_PASS_ENDING_ACCESS_TYPE Type;
    union
    {
        D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS Resolve;
    }
}

struct D3D12_RENDER_PASS_RENDER_TARGET_DESC
{
    D3D12_CPU_DESCRIPTOR_HANDLE cpuDescriptor;
    D3D12_RENDER_PASS_BEGINNING_ACCESS BeginningAccess;
    D3D12_RENDER_PASS_ENDING_ACCESS EndingAccess;
}

struct D3D12_RENDER_PASS_DEPTH_STENCIL_DESC
{
    D3D12_CPU_DESCRIPTOR_HANDLE cpuDescriptor;
    D3D12_RENDER_PASS_BEGINNING_ACCESS DepthBeginningAccess;
    D3D12_RENDER_PASS_BEGINNING_ACCESS StencilBeginningAccess;
    D3D12_RENDER_PASS_ENDING_ACCESS DepthEndingAccess;
    D3D12_RENDER_PASS_ENDING_ACCESS StencilEndingAccess;
}

struct D3D12_DISPATCH_RAYS_DESC
{
    D3D12_GPU_VIRTUAL_ADDRESS_RANGE RayGenerationShaderRecord;
    D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE MissShaderTable;
    D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE HitGroupTable;
    D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE CallableShaderTable;
    uint Width;
    uint Height;
    uint Depth;
}

struct D3D12_SUBRESOURCE_DATA
{
    const(void)* pData;
    ptrdiff_t    RowPitch;
    ptrdiff_t    SlicePitch;
}

struct D3D12_MEMCPY_DEST
{
    void*  pData;
    size_t RowPitch;
    size_t SlicePitch;
}

struct D3D12_DEBUG_DEVICE_GPU_BASED_VALIDATION_SETTINGS
{
    uint MaxMessagesPerCommandList;
    D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE DefaultShaderPatchMode;
    D3D12_GPU_BASED_VALIDATION_PIPELINE_STATE_CREATE_FLAGS PipelineStateCreateFlags;
}

struct D3D12_DEBUG_DEVICE_GPU_SLOWDOWN_PERFORMANCE_FACTOR
{
    float SlowdownFactor;
}

struct D3D12_DEBUG_COMMAND_LIST_GPU_BASED_VALIDATION_SETTINGS
{
    D3D12_GPU_BASED_VALIDATION_SHADER_PATCH_MODE ShaderPatchMode;
}

struct D3D12_MESSAGE
{
    D3D12_MESSAGE_CATEGORY Category;
    D3D12_MESSAGE_SEVERITY Severity;
    D3D12_MESSAGE_ID ID;
    const(byte)*     pDescription;
    size_t           DescriptionByteLength;
}

struct D3D12_INFO_QUEUE_FILTER_DESC
{
    uint              NumCategories;
    D3D12_MESSAGE_CATEGORY* pCategoryList;
    uint              NumSeverities;
    D3D12_MESSAGE_SEVERITY* pSeverityList;
    uint              NumIDs;
    D3D12_MESSAGE_ID* pIDList;
}

struct D3D12_INFO_QUEUE_FILTER
{
    D3D12_INFO_QUEUE_FILTER_DESC AllowList;
    D3D12_INFO_QUEUE_FILTER_DESC DenyList;
}

struct D3D12_DISPATCH_MESH_ARGUMENTS
{
    uint ThreadGroupCountX;
    uint ThreadGroupCountY;
    uint ThreadGroupCountZ;
}

struct D3D11_RESOURCE_FLAGS
{
    uint BindFlags;
    uint MiscFlags;
    uint CPUAccessFlags;
    uint StructureByteStride;
}

struct D3D12_SIGNATURE_PARAMETER_DESC
{
    const(char)*      SemanticName;
    uint              SemanticIndex;
    uint              Register;
    D3D_NAME          SystemValueType;
    D3D_REGISTER_COMPONENT_TYPE ComponentType;
    ubyte             Mask;
    ubyte             ReadWriteMask;
    uint              Stream;
    D3D_MIN_PRECISION MinPrecision;
}

struct D3D12_SHADER_BUFFER_DESC
{
    const(char)*     Name;
    D3D_CBUFFER_TYPE Type;
    uint             Variables;
    uint             Size;
    uint             uFlags;
}

struct D3D12_SHADER_VARIABLE_DESC
{
    const(char)* Name;
    uint         StartOffset;
    uint         Size;
    uint         uFlags;
    void*        DefaultValue;
    uint         StartTexture;
    uint         TextureSize;
    uint         StartSampler;
    uint         SamplerSize;
}

struct D3D12_SHADER_TYPE_DESC
{
    D3D_SHADER_VARIABLE_CLASS Class;
    D3D_SHADER_VARIABLE_TYPE Type;
    uint         Rows;
    uint         Columns;
    uint         Elements;
    uint         Members;
    uint         Offset;
    const(char)* Name;
}

struct D3D12_SHADER_DESC
{
    uint          Version;
    const(char)*  Creator;
    uint          Flags;
    uint          ConstantBuffers;
    uint          BoundResources;
    uint          InputParameters;
    uint          OutputParameters;
    uint          InstructionCount;
    uint          TempRegisterCount;
    uint          TempArrayCount;
    uint          DefCount;
    uint          DclCount;
    uint          TextureNormalInstructions;
    uint          TextureLoadInstructions;
    uint          TextureCompInstructions;
    uint          TextureBiasInstructions;
    uint          TextureGradientInstructions;
    uint          FloatInstructionCount;
    uint          IntInstructionCount;
    uint          UintInstructionCount;
    uint          StaticFlowControlCount;
    uint          DynamicFlowControlCount;
    uint          MacroInstructionCount;
    uint          ArrayInstructionCount;
    uint          CutInstructionCount;
    uint          EmitInstructionCount;
    D3D_PRIMITIVE_TOPOLOGY GSOutputTopology;
    uint          GSMaxOutputVertexCount;
    D3D_PRIMITIVE InputPrimitive;
    uint          PatchConstantParameters;
    uint          cGSInstanceCount;
    uint          cControlPoints;
    D3D_TESSELLATOR_OUTPUT_PRIMITIVE HSOutputPrimitive;
    D3D_TESSELLATOR_PARTITIONING HSPartitioning;
    D3D_TESSELLATOR_DOMAIN TessellatorDomain;
    uint          cBarrierInstructions;
    uint          cInterlockedInstructions;
    uint          cTextureStoreInstructions;
}

struct D3D12_SHADER_INPUT_BIND_DESC
{
    const(char)*      Name;
    D3D_SHADER_INPUT_TYPE Type;
    uint              BindPoint;
    uint              BindCount;
    uint              uFlags;
    D3D_RESOURCE_RETURN_TYPE ReturnType;
    D3D_SRV_DIMENSION Dimension;
    uint              NumSamples;
    uint              Space;
    uint              uID;
}

struct D3D12_LIBRARY_DESC
{
    const(char)* Creator;
    uint         Flags;
    uint         FunctionCount;
}

struct D3D12_FUNCTION_DESC
{
    uint              Version;
    const(char)*      Creator;
    uint              Flags;
    uint              ConstantBuffers;
    uint              BoundResources;
    uint              InstructionCount;
    uint              TempRegisterCount;
    uint              TempArrayCount;
    uint              DefCount;
    uint              DclCount;
    uint              TextureNormalInstructions;
    uint              TextureLoadInstructions;
    uint              TextureCompInstructions;
    uint              TextureBiasInstructions;
    uint              TextureGradientInstructions;
    uint              FloatInstructionCount;
    uint              IntInstructionCount;
    uint              UintInstructionCount;
    uint              StaticFlowControlCount;
    uint              DynamicFlowControlCount;
    uint              MacroInstructionCount;
    uint              ArrayInstructionCount;
    uint              MovInstructionCount;
    uint              MovcInstructionCount;
    uint              ConversionInstructionCount;
    uint              BitwiseInstructionCount;
    D3D_FEATURE_LEVEL MinFeatureLevel;
    ulong             RequiredFeatureFlags;
    const(char)*      Name;
    int               FunctionParameterCount;
    BOOL              HasReturn;
    BOOL              Has10Level9VertexShader;
    BOOL              Has10Level9PixelShader;
}

struct D3D12_PARAMETER_DESC
{
    const(char)*        Name;
    const(char)*        SemanticName;
    D3D_SHADER_VARIABLE_TYPE Type;
    D3D_SHADER_VARIABLE_CLASS Class;
    uint                Rows;
    uint                Columns;
    D3D_INTERPOLATION_MODE InterpolationMode;
    D3D_PARAMETER_FLAGS Flags;
    uint                FirstInRegister;
    uint                FirstInComponent;
    uint                FirstOutRegister;
    uint                FirstOutComponent;
}

// Functions

@DllImport("d3d12")
HRESULT D3D12SerializeRootSignature(const(D3D12_ROOT_SIGNATURE_DESC)* pRootSignature, 
                                    D3D_ROOT_SIGNATURE_VERSION Version, ID3DBlob* ppBlob, ID3DBlob* ppErrorBlob);

@DllImport("d3d12")
HRESULT D3D12CreateRootSignatureDeserializer(char* pSrcData, size_t SrcDataSizeInBytes, 
                                             const(GUID)* pRootSignatureDeserializerInterface, 
                                             void** ppRootSignatureDeserializer);

@DllImport("d3d12")
HRESULT D3D12SerializeVersionedRootSignature(const(D3D12_VERSIONED_ROOT_SIGNATURE_DESC)* pRootSignature, 
                                             ID3DBlob* ppBlob, ID3DBlob* ppErrorBlob);

@DllImport("d3d12")
HRESULT D3D12CreateVersionedRootSignatureDeserializer(char* pSrcData, size_t SrcDataSizeInBytes, 
                                                      const(GUID)* pRootSignatureDeserializerInterface, 
                                                      void** ppRootSignatureDeserializer);

@DllImport("d3d12")
HRESULT D3D12CreateDevice(IUnknown pAdapter, D3D_FEATURE_LEVEL MinimumFeatureLevel, const(GUID)* riid, 
                          void** ppDevice);

@DllImport("d3d12")
HRESULT D3D12GetDebugInterface(const(GUID)* riid, void** ppvDebug);

@DllImport("d3d12")
HRESULT D3D12EnableExperimentalFeatures(uint NumFeatures, char* pIIDs, char* pConfigurationStructs, 
                                        char* pConfigurationStructSizes);

@DllImport("d3d11")
HRESULT D3D11On12CreateDevice(IUnknown pDevice, uint Flags, char* pFeatureLevels, uint FeatureLevels, 
                              char* ppCommandQueues, uint NumQueues, uint NodeMask, ID3D11Device* ppDevice, 
                              ID3D11DeviceContext* ppImmediateContext, D3D_FEATURE_LEVEL* pChosenFeatureLevel);


// Interfaces

@GUID("C4FEC28F-7966-4E95-9F94-F431CB56C3B8")
interface ID3D12Object : IUnknown
{
    HRESULT GetPrivateData(const(GUID)* guid, uint* pDataSize, char* pData);
    HRESULT SetPrivateData(const(GUID)* guid, uint DataSize, char* pData);
    HRESULT SetPrivateDataInterface(const(GUID)* guid, const(IUnknown) pData);
    HRESULT SetName(const(wchar)* Name);
}

@GUID("905DB94B-A00C-4140-9DF5-2B64CA9EA357")
interface ID3D12DeviceChild : ID3D12Object
{
    HRESULT GetDevice(const(GUID)* riid, void** ppvDevice);
}

@GUID("C54A6B66-72DF-4EE8-8BE5-A946A1429214")
interface ID3D12RootSignature : ID3D12DeviceChild
{
}

@GUID("34AB647B-3CC8-46AC-841B-C0965645C046")
interface ID3D12RootSignatureDeserializer : IUnknown
{
    D3D12_ROOT_SIGNATURE_DESC* GetRootSignatureDesc();
}

@GUID("7F91CE67-090C-4BB7-B78E-ED8FF2E31DA0")
interface ID3D12VersionedRootSignatureDeserializer : IUnknown
{
    HRESULT GetRootSignatureDescAtVersion(D3D_ROOT_SIGNATURE_VERSION convertToVersion, 
                                          const(D3D12_VERSIONED_ROOT_SIGNATURE_DESC)** ppDesc);
    D3D12_VERSIONED_ROOT_SIGNATURE_DESC* GetUnconvertedRootSignatureDesc();
}

@GUID("63EE58FB-1268-4835-86DA-F008CE62F0D6")
interface ID3D12Pageable : ID3D12DeviceChild
{
}

@GUID("6B3B2502-6E51-45B3-90EE-9884265E8DF3")
interface ID3D12Heap : ID3D12Pageable
{
    D3D12_HEAP_DESC GetDesc();
}

@GUID("696442BE-A72E-4059-BC79-5B5C98040FAD")
interface ID3D12Resource : ID3D12Pageable
{
    HRESULT Map(uint Subresource, const(D3D12_RANGE)* pReadRange, void** ppData);
    void    Unmap(uint Subresource, const(D3D12_RANGE)* pWrittenRange);
    D3D12_RESOURCE_DESC GetDesc();
    ulong   GetGPUVirtualAddress();
    HRESULT WriteToSubresource(uint DstSubresource, const(D3D12_BOX)* pDstBox, const(void)* pSrcData, 
                               uint SrcRowPitch, uint SrcDepthPitch);
    HRESULT ReadFromSubresource(void* pDstData, uint DstRowPitch, uint DstDepthPitch, uint SrcSubresource, 
                                const(D3D12_BOX)* pSrcBox);
    HRESULT GetHeapProperties(D3D12_HEAP_PROPERTIES* pHeapProperties, D3D12_HEAP_FLAGS* pHeapFlags);
}

@GUID("6102DEE4-AF59-4B09-B999-B44D73F09B24")
interface ID3D12CommandAllocator : ID3D12Pageable
{
    HRESULT Reset();
}

@GUID("0A753DCF-C4D8-4B91-ADF6-BE5A60D95A76")
interface ID3D12Fence : ID3D12Pageable
{
    ulong   GetCompletedValue();
    HRESULT SetEventOnCompletion(ulong Value, HANDLE hEvent);
    HRESULT Signal(ulong Value);
}

@GUID("433685FE-E22B-4CA0-A8DB-B5B4F4DD0E4A")
interface ID3D12Fence1 : ID3D12Fence
{
    D3D12_FENCE_FLAGS GetCreationFlags();
}

@GUID("765A30F3-F624-4C6F-A828-ACE948622445")
interface ID3D12PipelineState : ID3D12Pageable
{
    HRESULT GetCachedBlob(ID3DBlob* ppBlob);
}

@GUID("8EFB471D-616C-4F49-90F7-127BB763FA51")
interface ID3D12DescriptorHeap : ID3D12Pageable
{
    D3D12_DESCRIPTOR_HEAP_DESC GetDesc();
    D3D12_CPU_DESCRIPTOR_HANDLE GetCPUDescriptorHandleForHeapStart();
    D3D12_GPU_DESCRIPTOR_HANDLE GetGPUDescriptorHandleForHeapStart();
}

@GUID("0D9658AE-ED45-469E-A61D-970EC583CAB4")
interface ID3D12QueryHeap : ID3D12Pageable
{
}

@GUID("C36A797C-EC80-4F0A-8985-A7B2475082D1")
interface ID3D12CommandSignature : ID3D12Pageable
{
}

@GUID("7116D91C-E7E4-47CE-B8C6-EC8168F437E5")
interface ID3D12CommandList : ID3D12DeviceChild
{
    D3D12_COMMAND_LIST_TYPE GetType();
}

@GUID("5B160D0F-AC1B-4185-8BA8-B3AE42A5A455")
interface ID3D12GraphicsCommandList : ID3D12CommandList
{
    HRESULT Close();
    HRESULT Reset(ID3D12CommandAllocator pAllocator, ID3D12PipelineState pInitialState);
    void    ClearState(ID3D12PipelineState pPipelineState);
    void    DrawInstanced(uint VertexCountPerInstance, uint InstanceCount, uint StartVertexLocation, 
                          uint StartInstanceLocation);
    void    DrawIndexedInstanced(uint IndexCountPerInstance, uint InstanceCount, uint StartIndexLocation, 
                                 int BaseVertexLocation, uint StartInstanceLocation);
    void    Dispatch(uint ThreadGroupCountX, uint ThreadGroupCountY, uint ThreadGroupCountZ);
    void    CopyBufferRegion(ID3D12Resource pDstBuffer, ulong DstOffset, ID3D12Resource pSrcBuffer, 
                             ulong SrcOffset, ulong NumBytes);
    void    CopyTextureRegion(const(D3D12_TEXTURE_COPY_LOCATION)* pDst, uint DstX, uint DstY, uint DstZ, 
                              const(D3D12_TEXTURE_COPY_LOCATION)* pSrc, const(D3D12_BOX)* pSrcBox);
    void    CopyResource(ID3D12Resource pDstResource, ID3D12Resource pSrcResource);
    void    CopyTiles(ID3D12Resource pTiledResource, 
                      const(D3D12_TILED_RESOURCE_COORDINATE)* pTileRegionStartCoordinate, 
                      const(D3D12_TILE_REGION_SIZE)* pTileRegionSize, ID3D12Resource pBuffer, 
                      ulong BufferStartOffsetInBytes, D3D12_TILE_COPY_FLAGS Flags);
    void    ResolveSubresource(ID3D12Resource pDstResource, uint DstSubresource, ID3D12Resource pSrcResource, 
                               uint SrcSubresource, DXGI_FORMAT Format);
    void    IASetPrimitiveTopology(D3D_PRIMITIVE_TOPOLOGY PrimitiveTopology);
    void    RSSetViewports(uint NumViewports, char* pViewports);
    void    RSSetScissorRects(uint NumRects, char* pRects);
    void    OMSetBlendFactor(char* BlendFactor);
    void    OMSetStencilRef(uint StencilRef);
    void    SetPipelineState(ID3D12PipelineState pPipelineState);
    void    ResourceBarrier(uint NumBarriers, char* pBarriers);
    void    ExecuteBundle(ID3D12GraphicsCommandList pCommandList);
    void    SetDescriptorHeaps(uint NumDescriptorHeaps, char* ppDescriptorHeaps);
    void    SetComputeRootSignature(ID3D12RootSignature pRootSignature);
    void    SetGraphicsRootSignature(ID3D12RootSignature pRootSignature);
    void    SetComputeRootDescriptorTable(uint RootParameterIndex, D3D12_GPU_DESCRIPTOR_HANDLE BaseDescriptor);
    void    SetGraphicsRootDescriptorTable(uint RootParameterIndex, D3D12_GPU_DESCRIPTOR_HANDLE BaseDescriptor);
    void    SetComputeRoot32BitConstant(uint RootParameterIndex, uint SrcData, uint DestOffsetIn32BitValues);
    void    SetGraphicsRoot32BitConstant(uint RootParameterIndex, uint SrcData, uint DestOffsetIn32BitValues);
    void    SetComputeRoot32BitConstants(uint RootParameterIndex, uint Num32BitValuesToSet, char* pSrcData, 
                                         uint DestOffsetIn32BitValues);
    void    SetGraphicsRoot32BitConstants(uint RootParameterIndex, uint Num32BitValuesToSet, char* pSrcData, 
                                          uint DestOffsetIn32BitValues);
    void    SetComputeRootConstantBufferView(uint RootParameterIndex, ulong BufferLocation);
    void    SetGraphicsRootConstantBufferView(uint RootParameterIndex, ulong BufferLocation);
    void    SetComputeRootShaderResourceView(uint RootParameterIndex, ulong BufferLocation);
    void    SetGraphicsRootShaderResourceView(uint RootParameterIndex, ulong BufferLocation);
    void    SetComputeRootUnorderedAccessView(uint RootParameterIndex, ulong BufferLocation);
    void    SetGraphicsRootUnorderedAccessView(uint RootParameterIndex, ulong BufferLocation);
    void    IASetIndexBuffer(const(D3D12_INDEX_BUFFER_VIEW)* pView);
    void    IASetVertexBuffers(uint StartSlot, uint NumViews, char* pViews);
    void    SOSetTargets(uint StartSlot, uint NumViews, char* pViews);
    void    OMSetRenderTargets(uint NumRenderTargetDescriptors, 
                               const(D3D12_CPU_DESCRIPTOR_HANDLE)* pRenderTargetDescriptors, 
                               BOOL RTsSingleHandleToDescriptorRange, 
                               const(D3D12_CPU_DESCRIPTOR_HANDLE)* pDepthStencilDescriptor);
    void    ClearDepthStencilView(D3D12_CPU_DESCRIPTOR_HANDLE DepthStencilView, D3D12_CLEAR_FLAGS ClearFlags, 
                                  float Depth, ubyte Stencil, uint NumRects, char* pRects);
    void    ClearRenderTargetView(D3D12_CPU_DESCRIPTOR_HANDLE RenderTargetView, const(float)* ColorRGBA, 
                                  uint NumRects, char* pRects);
    void    ClearUnorderedAccessViewUint(D3D12_GPU_DESCRIPTOR_HANDLE ViewGPUHandleInCurrentHeap, 
                                         D3D12_CPU_DESCRIPTOR_HANDLE ViewCPUHandle, ID3D12Resource pResource, 
                                         const(uint)* Values, uint NumRects, char* pRects);
    void    ClearUnorderedAccessViewFloat(D3D12_GPU_DESCRIPTOR_HANDLE ViewGPUHandleInCurrentHeap, 
                                          D3D12_CPU_DESCRIPTOR_HANDLE ViewCPUHandle, ID3D12Resource pResource, 
                                          const(float)* Values, uint NumRects, char* pRects);
    void    DiscardResource(ID3D12Resource pResource, const(D3D12_DISCARD_REGION)* pRegion);
    void    BeginQuery(ID3D12QueryHeap pQueryHeap, D3D12_QUERY_TYPE Type, uint Index);
    void    EndQuery(ID3D12QueryHeap pQueryHeap, D3D12_QUERY_TYPE Type, uint Index);
    void    ResolveQueryData(ID3D12QueryHeap pQueryHeap, D3D12_QUERY_TYPE Type, uint StartIndex, uint NumQueries, 
                             ID3D12Resource pDestinationBuffer, ulong AlignedDestinationBufferOffset);
    void    SetPredication(ID3D12Resource pBuffer, ulong AlignedBufferOffset, D3D12_PREDICATION_OP Operation);
    void    SetMarker(uint Metadata, char* pData, uint Size);
    void    BeginEvent(uint Metadata, char* pData, uint Size);
    void    EndEvent();
    void    ExecuteIndirect(ID3D12CommandSignature pCommandSignature, uint MaxCommandCount, 
                            ID3D12Resource pArgumentBuffer, ulong ArgumentBufferOffset, ID3D12Resource pCountBuffer, 
                            ulong CountBufferOffset);
}

@GUID("553103FB-1FE7-4557-BB38-946D7D0E7CA7")
interface ID3D12GraphicsCommandList1 : ID3D12GraphicsCommandList
{
    void AtomicCopyBufferUINT(ID3D12Resource pDstBuffer, ulong DstOffset, ID3D12Resource pSrcBuffer, 
                              ulong SrcOffset, uint Dependencies, char* ppDependentResources, 
                              char* pDependentSubresourceRanges);
    void AtomicCopyBufferUINT64(ID3D12Resource pDstBuffer, ulong DstOffset, ID3D12Resource pSrcBuffer, 
                                ulong SrcOffset, uint Dependencies, char* ppDependentResources, 
                                char* pDependentSubresourceRanges);
    void OMSetDepthBounds(float Min, float Max);
    void SetSamplePositions(uint NumSamplesPerPixel, uint NumPixels, char* pSamplePositions);
    void ResolveSubresourceRegion(ID3D12Resource pDstResource, uint DstSubresource, uint DstX, uint DstY, 
                                  ID3D12Resource pSrcResource, uint SrcSubresource, RECT* pSrcRect, 
                                  DXGI_FORMAT Format, D3D12_RESOLVE_MODE ResolveMode);
    void SetViewInstanceMask(uint Mask);
}

@GUID("38C3E585-FF17-412C-9150-4FC6F9D72A28")
interface ID3D12GraphicsCommandList2 : ID3D12GraphicsCommandList1
{
    void WriteBufferImmediate(uint Count, char* pParams, char* pModes);
}

@GUID("0EC870A6-5D7E-4C22-8CFC-5BAAE07616ED")
interface ID3D12CommandQueue : ID3D12Pageable
{
    void    UpdateTileMappings(ID3D12Resource pResource, uint NumResourceRegions, 
                               char* pResourceRegionStartCoordinates, char* pResourceRegionSizes, ID3D12Heap pHeap, 
                               uint NumRanges, char* pRangeFlags, char* pHeapRangeStartOffsets, 
                               char* pRangeTileCounts, D3D12_TILE_MAPPING_FLAGS Flags);
    void    CopyTileMappings(ID3D12Resource pDstResource, 
                             const(D3D12_TILED_RESOURCE_COORDINATE)* pDstRegionStartCoordinate, 
                             ID3D12Resource pSrcResource, 
                             const(D3D12_TILED_RESOURCE_COORDINATE)* pSrcRegionStartCoordinate, 
                             const(D3D12_TILE_REGION_SIZE)* pRegionSize, D3D12_TILE_MAPPING_FLAGS Flags);
    void    ExecuteCommandLists(uint NumCommandLists, char* ppCommandLists);
    void    SetMarker(uint Metadata, char* pData, uint Size);
    void    BeginEvent(uint Metadata, char* pData, uint Size);
    void    EndEvent();
    HRESULT Signal(ID3D12Fence pFence, ulong Value);
    HRESULT Wait(ID3D12Fence pFence, ulong Value);
    HRESULT GetTimestampFrequency(ulong* pFrequency);
    HRESULT GetClockCalibration(ulong* pGpuTimestamp, ulong* pCpuTimestamp);
    D3D12_COMMAND_QUEUE_DESC GetDesc();
}

@GUID("189819F1-1DB6-4B57-BE54-1821339B85F7")
interface ID3D12Device : ID3D12Object
{
    uint    GetNodeCount();
    HRESULT CreateCommandQueue(const(D3D12_COMMAND_QUEUE_DESC)* pDesc, const(GUID)* riid, void** ppCommandQueue);
    HRESULT CreateCommandAllocator(D3D12_COMMAND_LIST_TYPE type, const(GUID)* riid, void** ppCommandAllocator);
    HRESULT CreateGraphicsPipelineState(const(D3D12_GRAPHICS_PIPELINE_STATE_DESC)* pDesc, const(GUID)* riid, 
                                        void** ppPipelineState);
    HRESULT CreateComputePipelineState(const(D3D12_COMPUTE_PIPELINE_STATE_DESC)* pDesc, const(GUID)* riid, 
                                       void** ppPipelineState);
    HRESULT CreateCommandList(uint nodeMask, D3D12_COMMAND_LIST_TYPE type, 
                              ID3D12CommandAllocator pCommandAllocator, ID3D12PipelineState pInitialState, 
                              const(GUID)* riid, void** ppCommandList);
    HRESULT CheckFeatureSupport(D3D12_FEATURE Feature, char* pFeatureSupportData, uint FeatureSupportDataSize);
    HRESULT CreateDescriptorHeap(const(D3D12_DESCRIPTOR_HEAP_DESC)* pDescriptorHeapDesc, const(GUID)* riid, 
                                 void** ppvHeap);
    uint    GetDescriptorHandleIncrementSize(D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapType);
    HRESULT CreateRootSignature(uint nodeMask, char* pBlobWithRootSignature, size_t blobLengthInBytes, 
                                const(GUID)* riid, void** ppvRootSignature);
    void    CreateConstantBufferView(const(D3D12_CONSTANT_BUFFER_VIEW_DESC)* pDesc, 
                                     D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);
    void    CreateShaderResourceView(ID3D12Resource pResource, const(D3D12_SHADER_RESOURCE_VIEW_DESC)* pDesc, 
                                     D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);
    void    CreateUnorderedAccessView(ID3D12Resource pResource, ID3D12Resource pCounterResource, 
                                      const(D3D12_UNORDERED_ACCESS_VIEW_DESC)* pDesc, 
                                      D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);
    void    CreateRenderTargetView(ID3D12Resource pResource, const(D3D12_RENDER_TARGET_VIEW_DESC)* pDesc, 
                                   D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);
    void    CreateDepthStencilView(ID3D12Resource pResource, const(D3D12_DEPTH_STENCIL_VIEW_DESC)* pDesc, 
                                   D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);
    void    CreateSampler(const(D3D12_SAMPLER_DESC)* pDesc, D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);
    void    CopyDescriptors(uint NumDestDescriptorRanges, char* pDestDescriptorRangeStarts, 
                            char* pDestDescriptorRangeSizes, uint NumSrcDescriptorRanges, 
                            char* pSrcDescriptorRangeStarts, char* pSrcDescriptorRangeSizes, 
                            D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);
    void    CopyDescriptorsSimple(uint NumDescriptors, D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptorRangeStart, 
                                  D3D12_CPU_DESCRIPTOR_HANDLE SrcDescriptorRangeStart, 
                                  D3D12_DESCRIPTOR_HEAP_TYPE DescriptorHeapsType);
    D3D12_RESOURCE_ALLOCATION_INFO GetResourceAllocationInfo(uint visibleMask, uint numResourceDescs, 
                                                             char* pResourceDescs);
    D3D12_HEAP_PROPERTIES GetCustomHeapProperties(uint nodeMask, D3D12_HEAP_TYPE heapType);
    HRESULT CreateCommittedResource(const(D3D12_HEAP_PROPERTIES)* pHeapProperties, D3D12_HEAP_FLAGS HeapFlags, 
                                    const(D3D12_RESOURCE_DESC)* pDesc, D3D12_RESOURCE_STATES InitialResourceState, 
                                    const(D3D12_CLEAR_VALUE)* pOptimizedClearValue, const(GUID)* riidResource, 
                                    void** ppvResource);
    HRESULT CreateHeap(const(D3D12_HEAP_DESC)* pDesc, const(GUID)* riid, void** ppvHeap);
    HRESULT CreatePlacedResource(ID3D12Heap pHeap, ulong HeapOffset, const(D3D12_RESOURCE_DESC)* pDesc, 
                                 D3D12_RESOURCE_STATES InitialState, const(D3D12_CLEAR_VALUE)* pOptimizedClearValue, 
                                 const(GUID)* riid, void** ppvResource);
    HRESULT CreateReservedResource(const(D3D12_RESOURCE_DESC)* pDesc, D3D12_RESOURCE_STATES InitialState, 
                                   const(D3D12_CLEAR_VALUE)* pOptimizedClearValue, const(GUID)* riid, 
                                   void** ppvResource);
    HRESULT CreateSharedHandle(ID3D12DeviceChild pObject, const(SECURITY_ATTRIBUTES)* pAttributes, uint Access, 
                               const(wchar)* Name, HANDLE* pHandle);
    HRESULT OpenSharedHandle(HANDLE NTHandle, const(GUID)* riid, void** ppvObj);
    HRESULT OpenSharedHandleByName(const(wchar)* Name, uint Access, HANDLE* pNTHandle);
    HRESULT MakeResident(uint NumObjects, char* ppObjects);
    HRESULT Evict(uint NumObjects, char* ppObjects);
    HRESULT CreateFence(ulong InitialValue, D3D12_FENCE_FLAGS Flags, const(GUID)* riid, void** ppFence);
    HRESULT GetDeviceRemovedReason();
    void    GetCopyableFootprints(const(D3D12_RESOURCE_DESC)* pResourceDesc, uint FirstSubresource, 
                                  uint NumSubresources, ulong BaseOffset, char* pLayouts, char* pNumRows, 
                                  char* pRowSizeInBytes, ulong* pTotalBytes);
    HRESULT CreateQueryHeap(const(D3D12_QUERY_HEAP_DESC)* pDesc, const(GUID)* riid, void** ppvHeap);
    HRESULT SetStablePowerState(BOOL Enable);
    HRESULT CreateCommandSignature(const(D3D12_COMMAND_SIGNATURE_DESC)* pDesc, ID3D12RootSignature pRootSignature, 
                                   const(GUID)* riid, void** ppvCommandSignature);
    void    GetResourceTiling(ID3D12Resource pTiledResource, uint* pNumTilesForEntireResource, 
                              D3D12_PACKED_MIP_INFO* pPackedMipDesc, 
                              D3D12_TILE_SHAPE* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, 
                              uint FirstSubresourceTilingToGet, char* pSubresourceTilingsForNonPackedMips);
    LUID    GetAdapterLuid();
}

@GUID("C64226A8-9201-46AF-B4CC-53FB9FF7414F")
interface ID3D12PipelineLibrary : ID3D12DeviceChild
{
    HRESULT StorePipeline(const(wchar)* pName, ID3D12PipelineState pPipeline);
    HRESULT LoadGraphicsPipeline(const(wchar)* pName, const(D3D12_GRAPHICS_PIPELINE_STATE_DESC)* pDesc, 
                                 const(GUID)* riid, void** ppPipelineState);
    HRESULT LoadComputePipeline(const(wchar)* pName, const(D3D12_COMPUTE_PIPELINE_STATE_DESC)* pDesc, 
                                const(GUID)* riid, void** ppPipelineState);
    size_t  GetSerializedSize();
    HRESULT Serialize(char* pData, size_t DataSizeInBytes);
}

@GUID("80EABF42-2568-4E5E-BD82-C37F86961DC3")
interface ID3D12PipelineLibrary1 : ID3D12PipelineLibrary
{
    HRESULT LoadPipeline(const(wchar)* pName, const(D3D12_PIPELINE_STATE_STREAM_DESC)* pDesc, const(GUID)* riid, 
                         void** ppPipelineState);
}

@GUID("77ACCE80-638E-4E65-8895-C1F23386863E")
interface ID3D12Device1 : ID3D12Device
{
    HRESULT CreatePipelineLibrary(char* pLibraryBlob, size_t BlobLength, const(GUID)* riid, 
                                  void** ppPipelineLibrary);
    HRESULT SetEventOnMultipleFenceCompletion(char* ppFences, char* pFenceValues, uint NumFences, 
                                              D3D12_MULTIPLE_FENCE_WAIT_FLAGS Flags, HANDLE hEvent);
    HRESULT SetResidencyPriority(uint NumObjects, char* ppObjects, char* pPriorities);
}

@GUID("30BAA41E-B15B-475C-A0BB-1AF5C5B64328")
interface ID3D12Device2 : ID3D12Device1
{
    HRESULT CreatePipelineState(const(D3D12_PIPELINE_STATE_STREAM_DESC)* pDesc, const(GUID)* riid, 
                                void** ppPipelineState);
}

@GUID("81DADC15-2BAD-4392-93C5-101345C4AA98")
interface ID3D12Device3 : ID3D12Device2
{
    HRESULT OpenExistingHeapFromAddress(const(void)* pAddress, const(GUID)* riid, void** ppvHeap);
    HRESULT OpenExistingHeapFromFileMapping(HANDLE hFileMapping, const(GUID)* riid, void** ppvHeap);
    HRESULT EnqueueMakeResident(D3D12_RESIDENCY_FLAGS Flags, uint NumObjects, char* ppObjects, 
                                ID3D12Fence pFenceToSignal, ulong FenceValueToSignal);
}

@GUID("A1533D18-0AC1-4084-85B9-89A96116806B")
interface ID3D12ProtectedSession : ID3D12DeviceChild
{
    HRESULT GetStatusFence(const(GUID)* riid, void** ppFence);
    D3D12_PROTECTED_SESSION_STATUS GetSessionStatus();
}

@GUID("6CD696F4-F289-40CC-8091-5A6C0A099C3D")
interface ID3D12ProtectedResourceSession : ID3D12ProtectedSession
{
    D3D12_PROTECTED_RESOURCE_SESSION_DESC GetDesc();
}

@GUID("E865DF17-A9EE-46F9-A463-3098315AA2E5")
interface ID3D12Device4 : ID3D12Device3
{
    HRESULT CreateCommandList1(uint nodeMask, D3D12_COMMAND_LIST_TYPE type, D3D12_COMMAND_LIST_FLAGS flags, 
                               const(GUID)* riid, void** ppCommandList);
    HRESULT CreateProtectedResourceSession(const(D3D12_PROTECTED_RESOURCE_SESSION_DESC)* pDesc, const(GUID)* riid, 
                                           void** ppSession);
    HRESULT CreateCommittedResource1(const(D3D12_HEAP_PROPERTIES)* pHeapProperties, D3D12_HEAP_FLAGS HeapFlags, 
                                     const(D3D12_RESOURCE_DESC)* pDesc, D3D12_RESOURCE_STATES InitialResourceState, 
                                     const(D3D12_CLEAR_VALUE)* pOptimizedClearValue, 
                                     ID3D12ProtectedResourceSession pProtectedSession, const(GUID)* riidResource, 
                                     void** ppvResource);
    HRESULT CreateHeap1(const(D3D12_HEAP_DESC)* pDesc, ID3D12ProtectedResourceSession pProtectedSession, 
                        const(GUID)* riid, void** ppvHeap);
    HRESULT CreateReservedResource1(const(D3D12_RESOURCE_DESC)* pDesc, D3D12_RESOURCE_STATES InitialState, 
                                    const(D3D12_CLEAR_VALUE)* pOptimizedClearValue, 
                                    ID3D12ProtectedResourceSession pProtectedSession, const(GUID)* riid, 
                                    void** ppvResource);
    D3D12_RESOURCE_ALLOCATION_INFO GetResourceAllocationInfo1(uint visibleMask, uint numResourceDescs, 
                                                              char* pResourceDescs, char* pResourceAllocationInfo1);
}

@GUID("E667AF9F-CD56-4F46-83CE-032E595D70A8")
interface ID3D12LifetimeOwner : IUnknown
{
    void LifetimeStateUpdated(D3D12_LIFETIME_STATE NewState);
}

@GUID("F1DF64B6-57FD-49CD-8807-C0EB88B45C8F")
interface ID3D12SwapChainAssistant : IUnknown
{
    LUID    GetLUID();
    HRESULT GetSwapChainObject(const(GUID)* riid, void** ppv);
    HRESULT GetCurrentResourceAndCommandQueue(const(GUID)* riidResource, void** ppvResource, 
                                              const(GUID)* riidQueue, void** ppvQueue);
    HRESULT InsertImplicitSync();
}

@GUID("3FD03D36-4EB1-424A-A582-494ECB8BA813")
interface ID3D12LifetimeTracker : ID3D12DeviceChild
{
    HRESULT DestroyOwnedObject(ID3D12DeviceChild pObject);
}

@GUID("47016943-FCA8-4594-93EA-AF258B55346D")
interface ID3D12StateObject : ID3D12Pageable
{
}

@GUID("DE5FA827-9BF9-4F26-89FF-D7F56FDE3860")
interface ID3D12StateObjectProperties : IUnknown
{
    void* GetShaderIdentifier(const(wchar)* pExportName);
    ulong GetShaderStackSize(const(wchar)* pExportName);
    ulong GetPipelineStackSize();
    void  SetPipelineStackSize(ulong PipelineStackSizeInBytes);
}

@GUID("8B4F173B-2FEA-4B80-8F58-4307191AB95D")
interface ID3D12Device5 : ID3D12Device4
{
    HRESULT CreateLifetimeTracker(ID3D12LifetimeOwner pOwner, const(GUID)* riid, void** ppvTracker);
    void    RemoveDevice();
    HRESULT EnumerateMetaCommands(uint* pNumMetaCommands, char* pDescs);
    HRESULT EnumerateMetaCommandParameters(const(GUID)* CommandId, D3D12_META_COMMAND_PARAMETER_STAGE Stage, 
                                           uint* pTotalStructureSizeInBytes, uint* pParameterCount, 
                                           char* pParameterDescs);
    HRESULT CreateMetaCommand(const(GUID)* CommandId, uint NodeMask, char* pCreationParametersData, 
                              size_t CreationParametersDataSizeInBytes, const(GUID)* riid, void** ppMetaCommand);
    HRESULT CreateStateObject(const(D3D12_STATE_OBJECT_DESC)* pDesc, const(GUID)* riid, void** ppStateObject);
    void    GetRaytracingAccelerationStructurePrebuildInfo(const(D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS)* pDesc, 
                                                           D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO* pInfo);
    D3D12_DRIVER_MATCHING_IDENTIFIER_STATUS CheckDriverMatchingIdentifier(D3D12_SERIALIZED_DATA_TYPE SerializedDataType, 
                                                                          const(D3D12_SERIALIZED_DATA_DRIVER_MATCHING_IDENTIFIER)* pIdentifierToCheck);
}

@GUID("82BC481C-6B9B-4030-AEDB-7EE3D1DF1E63")
interface ID3D12DeviceRemovedExtendedDataSettings : IUnknown
{
    void SetAutoBreadcrumbsEnablement(D3D12_DRED_ENABLEMENT Enablement);
    void SetPageFaultEnablement(D3D12_DRED_ENABLEMENT Enablement);
    void SetWatsonDumpEnablement(D3D12_DRED_ENABLEMENT Enablement);
}

@GUID("DBD5AE51-3317-4F0A-ADF9-1D7CEDCAAE0B")
interface ID3D12DeviceRemovedExtendedDataSettings1 : ID3D12DeviceRemovedExtendedDataSettings
{
    void SetBreadcrumbContextEnablement(D3D12_DRED_ENABLEMENT Enablement);
}

@GUID("98931D33-5AE8-4791-AA3C-1A73A2934E71")
interface ID3D12DeviceRemovedExtendedData : IUnknown
{
    HRESULT GetAutoBreadcrumbsOutput(D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT* pOutput);
    HRESULT GetPageFaultAllocationOutput(D3D12_DRED_PAGE_FAULT_OUTPUT* pOutput);
}

@GUID("9727A022-CF1D-4DDA-9EBA-EFFA653FC506")
interface ID3D12DeviceRemovedExtendedData1 : ID3D12DeviceRemovedExtendedData
{
    HRESULT GetAutoBreadcrumbsOutput1(D3D12_DRED_AUTO_BREADCRUMBS_OUTPUT1* pOutput);
    HRESULT GetPageFaultAllocationOutput1(D3D12_DRED_PAGE_FAULT_OUTPUT1* pOutput);
}

@GUID("C70B221B-40E4-4A17-89AF-025A0727A6DC")
interface ID3D12Device6 : ID3D12Device5
{
    HRESULT SetBackgroundProcessingMode(D3D12_BACKGROUND_PROCESSING_MODE Mode, 
                                        D3D12_MEASUREMENTS_ACTION MeasurementsAction, 
                                        HANDLE hEventToSignalUponCompletion, int* pbFurtherMeasurementsDesired);
}

@GUID("D6F12DD6-76FB-406E-8961-4296EEFC0409")
interface ID3D12ProtectedResourceSession1 : ID3D12ProtectedResourceSession
{
    D3D12_PROTECTED_RESOURCE_SESSION_DESC1 GetDesc1();
}

@GUID("5C014B53-68A1-4B9B-8BD1-DD6046B9358B")
interface ID3D12Device7 : ID3D12Device6
{
    HRESULT AddToStateObject(const(D3D12_STATE_OBJECT_DESC)* pAddition, ID3D12StateObject pStateObjectToGrowFrom, 
                             const(GUID)* riid, void** ppNewStateObject);
    HRESULT CreateProtectedResourceSession1(const(D3D12_PROTECTED_RESOURCE_SESSION_DESC1)* pDesc, 
                                            const(GUID)* riid, void** ppSession);
}

@GUID("9218E6BB-F944-4F7E-A75C-B1B2C7B701F3")
interface ID3D12Device8 : ID3D12Device7
{
    D3D12_RESOURCE_ALLOCATION_INFO GetResourceAllocationInfo2(uint visibleMask, uint numResourceDescs, 
                                                              char* pResourceDescs, char* pResourceAllocationInfo1);
    HRESULT CreateCommittedResource2(const(D3D12_HEAP_PROPERTIES)* pHeapProperties, D3D12_HEAP_FLAGS HeapFlags, 
                                     const(D3D12_RESOURCE_DESC1)* pDesc, D3D12_RESOURCE_STATES InitialResourceState, 
                                     const(D3D12_CLEAR_VALUE)* pOptimizedClearValue, 
                                     ID3D12ProtectedResourceSession pProtectedSession, const(GUID)* riidResource, 
                                     void** ppvResource);
    HRESULT CreatePlacedResource1(ID3D12Heap pHeap, ulong HeapOffset, const(D3D12_RESOURCE_DESC1)* pDesc, 
                                  D3D12_RESOURCE_STATES InitialState, const(D3D12_CLEAR_VALUE)* pOptimizedClearValue, 
                                  const(GUID)* riid, void** ppvResource);
    void    CreateSamplerFeedbackUnorderedAccessView(ID3D12Resource pTargetedResource, 
                                                     ID3D12Resource pFeedbackResource, 
                                                     D3D12_CPU_DESCRIPTOR_HANDLE DestDescriptor);
    void    GetCopyableFootprints1(const(D3D12_RESOURCE_DESC1)* pResourceDesc, uint FirstSubresource, 
                                   uint NumSubresources, ulong BaseOffset, char* pLayouts, char* pNumRows, 
                                   char* pRowSizeInBytes, ulong* pTotalBytes);
}

@GUID("9D5E227A-4430-4161-88B3-3ECA6BB16E19")
interface ID3D12Resource1 : ID3D12Resource
{
    HRESULT GetProtectedResourceSession(const(GUID)* riid, void** ppProtectedSession);
}

@GUID("BE36EC3B-EA85-4AEB-A45A-E9D76404A495")
interface ID3D12Resource2 : ID3D12Resource1
{
    D3D12_RESOURCE_DESC1 GetDesc1();
}

@GUID("572F7389-2168-49E3-9693-D6DF5871BF6D")
interface ID3D12Heap1 : ID3D12Heap
{
    HRESULT GetProtectedResourceSession(const(GUID)* riid, void** ppProtectedSession);
}

@GUID("6FDA83A7-B84C-4E38-9AC8-C7BD22016B3D")
interface ID3D12GraphicsCommandList3 : ID3D12GraphicsCommandList2
{
    void SetProtectedResourceSession(ID3D12ProtectedResourceSession pProtectedResourceSession);
}

@GUID("DBB84C27-36CE-4FC9-B801-F048C46AC570")
interface ID3D12MetaCommand : ID3D12Pageable
{
    ulong GetRequiredParameterResourceSize(D3D12_META_COMMAND_PARAMETER_STAGE Stage, uint ParameterIndex);
}

@GUID("8754318E-D3A9-4541-98CF-645B50DC4874")
interface ID3D12GraphicsCommandList4 : ID3D12GraphicsCommandList3
{
    void BeginRenderPass(uint NumRenderTargets, char* pRenderTargets, 
                         const(D3D12_RENDER_PASS_DEPTH_STENCIL_DESC)* pDepthStencil, D3D12_RENDER_PASS_FLAGS Flags);
    void EndRenderPass();
    void InitializeMetaCommand(ID3D12MetaCommand pMetaCommand, char* pInitializationParametersData, 
                               size_t InitializationParametersDataSizeInBytes);
    void ExecuteMetaCommand(ID3D12MetaCommand pMetaCommand, char* pExecutionParametersData, 
                            size_t ExecutionParametersDataSizeInBytes);
    void BuildRaytracingAccelerationStructure(const(D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC)* pDesc, 
                                              uint NumPostbuildInfoDescs, char* pPostbuildInfoDescs);
    void EmitRaytracingAccelerationStructurePostbuildInfo(const(D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC)* pDesc, 
                                                          uint NumSourceAccelerationStructures, 
                                                          char* pSourceAccelerationStructureData);
    void CopyRaytracingAccelerationStructure(ulong DestAccelerationStructureData, 
                                             ulong SourceAccelerationStructureData, 
                                             D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE Mode);
    void SetPipelineState1(ID3D12StateObject pStateObject);
    void DispatchRays(const(D3D12_DISPATCH_RAYS_DESC)* pDesc);
}

@GUID("7071E1F0-E84B-4B33-974F-12FA49DE65C5")
interface ID3D12Tools : IUnknown
{
    void EnableShaderInstrumentation(BOOL bEnable);
    BOOL ShaderInstrumentationEnabled();
}

@GUID("344488B7-6846-474B-B989-F027448245E0")
interface ID3D12Debug : IUnknown
{
    void EnableDebugLayer();
}

@GUID("AFFAA4CA-63FE-4D8E-B8AD-159000AF4304")
interface ID3D12Debug1 : IUnknown
{
    void EnableDebugLayer();
    void SetEnableGPUBasedValidation(BOOL Enable);
    void SetEnableSynchronizedCommandQueueValidation(BOOL Enable);
}

@GUID("93A665C4-A3B2-4E5D-B692-A26AE14E3374")
interface ID3D12Debug2 : IUnknown
{
    void SetGPUBasedValidationFlags(D3D12_GPU_BASED_VALIDATION_FLAGS Flags);
}

@GUID("5CF4E58F-F671-4FF1-A542-3686E3D153D1")
interface ID3D12Debug3 : ID3D12Debug
{
    void SetEnableGPUBasedValidation(BOOL Enable);
    void SetEnableSynchronizedCommandQueueValidation(BOOL Enable);
    void SetGPUBasedValidationFlags(D3D12_GPU_BASED_VALIDATION_FLAGS Flags);
}

@GUID("A9B71770-D099-4A65-A698-3DEE10020F88")
interface ID3D12DebugDevice1 : IUnknown
{
    HRESULT SetDebugParameter(D3D12_DEBUG_DEVICE_PARAMETER_TYPE Type, char* pData, uint DataSize);
    HRESULT GetDebugParameter(D3D12_DEBUG_DEVICE_PARAMETER_TYPE Type, char* pData, uint DataSize);
    HRESULT ReportLiveDeviceObjects(D3D12_RLDO_FLAGS Flags);
}

@GUID("3FEBD6DD-4973-4787-8194-E45F9E28923E")
interface ID3D12DebugDevice : IUnknown
{
    HRESULT SetFeatureMask(D3D12_DEBUG_FEATURE Mask);
    D3D12_DEBUG_FEATURE GetFeatureMask();
    HRESULT ReportLiveDeviceObjects(D3D12_RLDO_FLAGS Flags);
}

@GUID("60ECCBC1-378D-4DF1-894C-F8AC5CE4D7DD")
interface ID3D12DebugDevice2 : ID3D12DebugDevice
{
    HRESULT SetDebugParameter(D3D12_DEBUG_DEVICE_PARAMETER_TYPE Type, char* pData, uint DataSize);
    HRESULT GetDebugParameter(D3D12_DEBUG_DEVICE_PARAMETER_TYPE Type, char* pData, uint DataSize);
}

@GUID("09E0BF36-54AC-484F-8847-4BAEEAB6053A")
interface ID3D12DebugCommandQueue : IUnknown
{
    BOOL AssertResourceState(ID3D12Resource pResource, uint Subresource, uint State);
}

@GUID("102CA951-311B-4B01-B11F-ECB83E061B37")
interface ID3D12DebugCommandList1 : IUnknown
{
    BOOL    AssertResourceState(ID3D12Resource pResource, uint Subresource, uint State);
    HRESULT SetDebugParameter(D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type, char* pData, uint DataSize);
    HRESULT GetDebugParameter(D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type, char* pData, uint DataSize);
}

@GUID("09E0BF36-54AC-484F-8847-4BAEEAB6053F")
interface ID3D12DebugCommandList : IUnknown
{
    BOOL    AssertResourceState(ID3D12Resource pResource, uint Subresource, uint State);
    HRESULT SetFeatureMask(D3D12_DEBUG_FEATURE Mask);
    D3D12_DEBUG_FEATURE GetFeatureMask();
}

@GUID("AEB575CF-4E06-48BE-BA3B-C450FC96652E")
interface ID3D12DebugCommandList2 : ID3D12DebugCommandList
{
    HRESULT SetDebugParameter(D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type, char* pData, uint DataSize);
    HRESULT GetDebugParameter(D3D12_DEBUG_COMMAND_LIST_PARAMETER_TYPE Type, char* pData, uint DataSize);
}

@GUID("0ADF7D52-929C-4E61-ADDB-FFED30DE66EF")
interface ID3D12SharingContract : IUnknown
{
    void Present(ID3D12Resource pResource, uint Subresource, HWND window);
    void SharedFenceSignal(ID3D12Fence pFence, ulong FenceValue);
    void BeginCapturableWork(const(GUID)* guid);
    void EndCapturableWork(const(GUID)* guid);
}

@GUID("0742A90B-C387-483F-B946-30A7E4E61458")
interface ID3D12InfoQueue : IUnknown
{
    HRESULT SetMessageCountLimit(ulong MessageCountLimit);
    void    ClearStoredMessages();
    HRESULT GetMessageA(ulong MessageIndex, char* pMessage, size_t* pMessageByteLength);
    ulong   GetNumMessagesAllowedByStorageFilter();
    ulong   GetNumMessagesDeniedByStorageFilter();
    ulong   GetNumStoredMessages();
    ulong   GetNumStoredMessagesAllowedByRetrievalFilter();
    ulong   GetNumMessagesDiscardedByMessageCountLimit();
    ulong   GetMessageCountLimit();
    HRESULT AddStorageFilterEntries(D3D12_INFO_QUEUE_FILTER* pFilter);
    HRESULT GetStorageFilter(char* pFilter, size_t* pFilterByteLength);
    void    ClearStorageFilter();
    HRESULT PushEmptyStorageFilter();
    HRESULT PushCopyOfStorageFilter();
    HRESULT PushStorageFilter(D3D12_INFO_QUEUE_FILTER* pFilter);
    void    PopStorageFilter();
    uint    GetStorageFilterStackSize();
    HRESULT AddRetrievalFilterEntries(D3D12_INFO_QUEUE_FILTER* pFilter);
    HRESULT GetRetrievalFilter(char* pFilter, size_t* pFilterByteLength);
    void    ClearRetrievalFilter();
    HRESULT PushEmptyRetrievalFilter();
    HRESULT PushCopyOfRetrievalFilter();
    HRESULT PushRetrievalFilter(D3D12_INFO_QUEUE_FILTER* pFilter);
    void    PopRetrievalFilter();
    uint    GetRetrievalFilterStackSize();
    HRESULT AddMessage(D3D12_MESSAGE_CATEGORY Category, D3D12_MESSAGE_SEVERITY Severity, D3D12_MESSAGE_ID ID, 
                       const(char)* pDescription);
    HRESULT AddApplicationMessage(D3D12_MESSAGE_SEVERITY Severity, const(char)* pDescription);
    HRESULT SetBreakOnCategory(D3D12_MESSAGE_CATEGORY Category, BOOL bEnable);
    HRESULT SetBreakOnSeverity(D3D12_MESSAGE_SEVERITY Severity, BOOL bEnable);
    HRESULT SetBreakOnID(D3D12_MESSAGE_ID ID, BOOL bEnable);
    BOOL    GetBreakOnCategory(D3D12_MESSAGE_CATEGORY Category);
    BOOL    GetBreakOnSeverity(D3D12_MESSAGE_SEVERITY Severity);
    BOOL    GetBreakOnID(D3D12_MESSAGE_ID ID);
    void    SetMuteDebugOutput(BOOL bMute);
    BOOL    GetMuteDebugOutput();
}

@GUID("55050859-4024-474C-87F5-6472EAEE44EA")
interface ID3D12GraphicsCommandList5 : ID3D12GraphicsCommandList4
{
    void RSSetShadingRate(D3D12_SHADING_RATE baseShadingRate, char* combiners);
    void RSSetShadingRateImage(ID3D12Resource shadingRateImage);
}

@GUID("C3827890-E548-4CFA-96CF-5689A9370F80")
interface ID3D12GraphicsCommandList6 : ID3D12GraphicsCommandList5
{
    void DispatchMesh(uint ThreadGroupCountX, uint ThreadGroupCountY, uint ThreadGroupCountZ);
}

@GUID("85611E73-70A9-490E-9614-A9E302777904")
interface ID3D11On12Device : IUnknown
{
    HRESULT CreateWrappedResource(IUnknown pResource12, const(D3D11_RESOURCE_FLAGS)* pFlags11, 
                                  D3D12_RESOURCE_STATES InState, D3D12_RESOURCE_STATES OutState, const(GUID)* riid, 
                                  void** ppResource11);
    void    ReleaseWrappedResources(char* ppResources, uint NumResources);
    void    AcquireWrappedResources(char* ppResources, uint NumResources);
}

@GUID("BDB64DF4-EA2F-4C70-B861-AAAB1258BB5D")
interface ID3D11On12Device1 : ID3D11On12Device
{
    HRESULT GetD3D12Device(const(GUID)* riid, void** ppvDevice);
}

@GUID("DC90F331-4740-43FA-866E-67F12CB58223")
interface ID3D11On12Device2 : ID3D11On12Device1
{
    HRESULT UnwrapUnderlyingResource(ID3D11Resource pResource11, ID3D12CommandQueue pCommandQueue, 
                                     const(GUID)* riid, void** ppvResource12);
    HRESULT ReturnUnderlyingResource(ID3D11Resource pResource11, uint NumSync, char* pSignalValues, char* ppFences);
}

@GUID("E913C351-783D-48CA-A1D1-4F306284AD56")
interface ID3D12ShaderReflectionType
{
    HRESULT GetDesc(D3D12_SHADER_TYPE_DESC* pDesc);
    ID3D12ShaderReflectionType GetMemberTypeByIndex(uint Index);
    ID3D12ShaderReflectionType GetMemberTypeByName(const(char)* Name);
    byte*   GetMemberTypeName(uint Index);
    HRESULT IsEqual(ID3D12ShaderReflectionType pType);
    ID3D12ShaderReflectionType GetSubType();
    ID3D12ShaderReflectionType GetBaseClass();
    uint    GetNumInterfaces();
    ID3D12ShaderReflectionType GetInterfaceByIndex(uint uIndex);
    HRESULT IsOfType(ID3D12ShaderReflectionType pType);
    HRESULT ImplementsInterface(ID3D12ShaderReflectionType pBase);
}

@GUID("8337A8A6-A216-444A-B2F4-314733A73AEA")
interface ID3D12ShaderReflectionVariable
{
    HRESULT GetDesc(D3D12_SHADER_VARIABLE_DESC* pDesc);
    ID3D12ShaderReflectionType GetType();
    ID3D12ShaderReflectionConstantBuffer GetBuffer();
    uint    GetInterfaceSlot(uint uArrayIndex);
}

@GUID("C59598B4-48B3-4869-B9B1-B1618B14A8B7")
interface ID3D12ShaderReflectionConstantBuffer
{
    HRESULT GetDesc(D3D12_SHADER_BUFFER_DESC* pDesc);
    ID3D12ShaderReflectionVariable GetVariableByIndex(uint Index);
    ID3D12ShaderReflectionVariable GetVariableByName(const(char)* Name);
}

@GUID("5A58797D-A72C-478D-8BA2-EFC6B0EFE88E")
interface ID3D12ShaderReflection : IUnknown
{
    HRESULT GetDesc(D3D12_SHADER_DESC* pDesc);
    ID3D12ShaderReflectionConstantBuffer GetConstantBufferByIndex(uint Index);
    ID3D12ShaderReflectionConstantBuffer GetConstantBufferByName(const(char)* Name);
    HRESULT GetResourceBindingDesc(uint ResourceIndex, D3D12_SHADER_INPUT_BIND_DESC* pDesc);
    HRESULT GetInputParameterDesc(uint ParameterIndex, D3D12_SIGNATURE_PARAMETER_DESC* pDesc);
    HRESULT GetOutputParameterDesc(uint ParameterIndex, D3D12_SIGNATURE_PARAMETER_DESC* pDesc);
    HRESULT GetPatchConstantParameterDesc(uint ParameterIndex, D3D12_SIGNATURE_PARAMETER_DESC* pDesc);
    ID3D12ShaderReflectionVariable GetVariableByName(const(char)* Name);
    HRESULT GetResourceBindingDescByName(const(char)* Name, D3D12_SHADER_INPUT_BIND_DESC* pDesc);
    uint    GetMovInstructionCount();
    uint    GetMovcInstructionCount();
    uint    GetConversionInstructionCount();
    uint    GetBitwiseInstructionCount();
    D3D_PRIMITIVE GetGSInputPrimitive();
    BOOL    IsSampleFrequencyShader();
    uint    GetNumInterfaceSlots();
    HRESULT GetMinFeatureLevel(D3D_FEATURE_LEVEL* pLevel);
    uint    GetThreadGroupSize(uint* pSizeX, uint* pSizeY, uint* pSizeZ);
    ulong   GetRequiresFlags();
}

@GUID("8E349D19-54DB-4A56-9DC9-119D87BDB804")
interface ID3D12LibraryReflection : IUnknown
{
    HRESULT GetDesc(D3D12_LIBRARY_DESC* pDesc);
    ID3D12FunctionReflection GetFunctionByIndex(int FunctionIndex);
}

@GUID("1108795C-2772-4BA9-B2A8-D464DC7E2799")
interface ID3D12FunctionReflection
{
    HRESULT GetDesc(D3D12_FUNCTION_DESC* pDesc);
    ID3D12ShaderReflectionConstantBuffer GetConstantBufferByIndex(uint BufferIndex);
    ID3D12ShaderReflectionConstantBuffer GetConstantBufferByName(const(char)* Name);
    HRESULT GetResourceBindingDesc(uint ResourceIndex, D3D12_SHADER_INPUT_BIND_DESC* pDesc);
    ID3D12ShaderReflectionVariable GetVariableByName(const(char)* Name);
    HRESULT GetResourceBindingDescByName(const(char)* Name, D3D12_SHADER_INPUT_BIND_DESC* pDesc);
    ID3D12FunctionParameterReflection GetFunctionParameter(int ParameterIndex);
}

@GUID("EC25F42D-7006-4F2B-B33E-02CC3375733F")
interface ID3D12FunctionParameterReflection
{
    HRESULT GetDesc(D3D12_PARAMETER_DESC* pDesc);
}

@GUID("7CC1F9C5-6D02-41FA-9500-E1809EB48EEC")
interface IHolographicCameraInterop : IInspectable
{
    HRESULT CreateDirect3D12BackBufferResource(ID3D12Device pDevice, D3D12_RESOURCE_DESC* pTexture2DDesc, 
                                               ID3D12Resource* ppCreatedTexture2DResource);
    HRESULT CreateDirect3D12HardwareProtectedBackBufferResource(ID3D12Device pDevice, 
                                                                D3D12_RESOURCE_DESC* pTexture2DDesc, 
                                                                ID3D12ProtectedResourceSession pProtectedResourceSession, 
                                                                ID3D12Resource* ppCreatedTexture2DResource);
    HRESULT AcquireDirect3D12BufferResource(ID3D12Resource pResourceToAcquire, ID3D12CommandQueue pCommandQueue);
    HRESULT AcquireDirect3D12BufferResourceWithTimeout(ID3D12Resource pResourceToAcquire, 
                                                       ID3D12CommandQueue pCommandQueue, ulong duration);
    HRESULT UnacquireDirect3D12BufferResource(ID3D12Resource pResourceToUnacquire);
}

@GUID("F75B68D6-D1FD-4707-AAFD-FA6F4C0E3BF4")
interface IHolographicCameraRenderingParametersInterop : IInspectable
{
    HRESULT CommitDirect3D12Resource(ID3D12Resource pColorResourceToCommit, ID3D12Fence pColorResourceFence, 
                                     ulong colorResourceFenceSignalValue);
    HRESULT CommitDirect3D12ResourceWithDepthData(ID3D12Resource pColorResourceToCommit, 
                                                  ID3D12Fence pColorResourceFence, 
                                                  ulong colorResourceFenceSignalValue, 
                                                  ID3D12Resource pDepthResourceToCommit, 
                                                  ID3D12Fence pDepthResourceFence, 
                                                  ulong depthResourceFenceSignalValue);
}

@GUID("CFA688F0-639E-4A47-83D7-6B7F5EBF7FED")
interface IHolographicQuadLayerInterop : IInspectable
{
    HRESULT CreateDirect3D12ContentBufferResource(ID3D12Device pDevice, D3D12_RESOURCE_DESC* pTexture2DDesc, 
                                                  ID3D12Resource* ppTexture2DResource);
    HRESULT CreateDirect3D12HardwareProtectedContentBufferResource(ID3D12Device pDevice, 
                                                                   D3D12_RESOURCE_DESC* pTexture2DDesc, 
                                                                   ID3D12ProtectedResourceSession pProtectedResourceSession, 
                                                                   ID3D12Resource* ppCreatedTexture2DResource);
    HRESULT AcquireDirect3D12BufferResource(ID3D12Resource pResourceToAcquire, ID3D12CommandQueue pCommandQueue);
    HRESULT AcquireDirect3D12BufferResourceWithTimeout(ID3D12Resource pResourceToAcquire, 
                                                       ID3D12CommandQueue pCommandQueue, ulong duration);
    HRESULT UnacquireDirect3D12BufferResource(ID3D12Resource pResourceToUnacquire);
}

@GUID("E5F549CD-C909-444F-8809-7CC18A9C8920")
interface IHolographicQuadLayerUpdateParametersInterop : IInspectable
{
    HRESULT CommitDirect3D12Resource(ID3D12Resource pColorResourceToCommit, ID3D12Fence pColorResourceFence, 
                                     ulong colorResourceFenceSignalValue);
}


// GUIDs


const GUID IID_ID3D11On12Device                             = GUIDOF!ID3D11On12Device;
const GUID IID_ID3D11On12Device1                            = GUIDOF!ID3D11On12Device1;
const GUID IID_ID3D11On12Device2                            = GUIDOF!ID3D11On12Device2;
const GUID IID_ID3D12CommandAllocator                       = GUIDOF!ID3D12CommandAllocator;
const GUID IID_ID3D12CommandList                            = GUIDOF!ID3D12CommandList;
const GUID IID_ID3D12CommandQueue                           = GUIDOF!ID3D12CommandQueue;
const GUID IID_ID3D12CommandSignature                       = GUIDOF!ID3D12CommandSignature;
const GUID IID_ID3D12Debug                                  = GUIDOF!ID3D12Debug;
const GUID IID_ID3D12Debug1                                 = GUIDOF!ID3D12Debug1;
const GUID IID_ID3D12Debug2                                 = GUIDOF!ID3D12Debug2;
const GUID IID_ID3D12Debug3                                 = GUIDOF!ID3D12Debug3;
const GUID IID_ID3D12DebugCommandList                       = GUIDOF!ID3D12DebugCommandList;
const GUID IID_ID3D12DebugCommandList1                      = GUIDOF!ID3D12DebugCommandList1;
const GUID IID_ID3D12DebugCommandList2                      = GUIDOF!ID3D12DebugCommandList2;
const GUID IID_ID3D12DebugCommandQueue                      = GUIDOF!ID3D12DebugCommandQueue;
const GUID IID_ID3D12DebugDevice                            = GUIDOF!ID3D12DebugDevice;
const GUID IID_ID3D12DebugDevice1                           = GUIDOF!ID3D12DebugDevice1;
const GUID IID_ID3D12DebugDevice2                           = GUIDOF!ID3D12DebugDevice2;
const GUID IID_ID3D12DescriptorHeap                         = GUIDOF!ID3D12DescriptorHeap;
const GUID IID_ID3D12Device                                 = GUIDOF!ID3D12Device;
const GUID IID_ID3D12Device1                                = GUIDOF!ID3D12Device1;
const GUID IID_ID3D12Device2                                = GUIDOF!ID3D12Device2;
const GUID IID_ID3D12Device3                                = GUIDOF!ID3D12Device3;
const GUID IID_ID3D12Device4                                = GUIDOF!ID3D12Device4;
const GUID IID_ID3D12Device5                                = GUIDOF!ID3D12Device5;
const GUID IID_ID3D12Device6                                = GUIDOF!ID3D12Device6;
const GUID IID_ID3D12Device7                                = GUIDOF!ID3D12Device7;
const GUID IID_ID3D12Device8                                = GUIDOF!ID3D12Device8;
const GUID IID_ID3D12DeviceChild                            = GUIDOF!ID3D12DeviceChild;
const GUID IID_ID3D12DeviceRemovedExtendedData              = GUIDOF!ID3D12DeviceRemovedExtendedData;
const GUID IID_ID3D12DeviceRemovedExtendedData1             = GUIDOF!ID3D12DeviceRemovedExtendedData1;
const GUID IID_ID3D12DeviceRemovedExtendedDataSettings      = GUIDOF!ID3D12DeviceRemovedExtendedDataSettings;
const GUID IID_ID3D12DeviceRemovedExtendedDataSettings1     = GUIDOF!ID3D12DeviceRemovedExtendedDataSettings1;
const GUID IID_ID3D12Fence                                  = GUIDOF!ID3D12Fence;
const GUID IID_ID3D12Fence1                                 = GUIDOF!ID3D12Fence1;
const GUID IID_ID3D12FunctionParameterReflection            = GUIDOF!ID3D12FunctionParameterReflection;
const GUID IID_ID3D12FunctionReflection                     = GUIDOF!ID3D12FunctionReflection;
const GUID IID_ID3D12GraphicsCommandList                    = GUIDOF!ID3D12GraphicsCommandList;
const GUID IID_ID3D12GraphicsCommandList1                   = GUIDOF!ID3D12GraphicsCommandList1;
const GUID IID_ID3D12GraphicsCommandList2                   = GUIDOF!ID3D12GraphicsCommandList2;
const GUID IID_ID3D12GraphicsCommandList3                   = GUIDOF!ID3D12GraphicsCommandList3;
const GUID IID_ID3D12GraphicsCommandList4                   = GUIDOF!ID3D12GraphicsCommandList4;
const GUID IID_ID3D12GraphicsCommandList5                   = GUIDOF!ID3D12GraphicsCommandList5;
const GUID IID_ID3D12GraphicsCommandList6                   = GUIDOF!ID3D12GraphicsCommandList6;
const GUID IID_ID3D12Heap                                   = GUIDOF!ID3D12Heap;
const GUID IID_ID3D12Heap1                                  = GUIDOF!ID3D12Heap1;
const GUID IID_ID3D12InfoQueue                              = GUIDOF!ID3D12InfoQueue;
const GUID IID_ID3D12LibraryReflection                      = GUIDOF!ID3D12LibraryReflection;
const GUID IID_ID3D12LifetimeOwner                          = GUIDOF!ID3D12LifetimeOwner;
const GUID IID_ID3D12LifetimeTracker                        = GUIDOF!ID3D12LifetimeTracker;
const GUID IID_ID3D12MetaCommand                            = GUIDOF!ID3D12MetaCommand;
const GUID IID_ID3D12Object                                 = GUIDOF!ID3D12Object;
const GUID IID_ID3D12Pageable                               = GUIDOF!ID3D12Pageable;
const GUID IID_ID3D12PipelineLibrary                        = GUIDOF!ID3D12PipelineLibrary;
const GUID IID_ID3D12PipelineLibrary1                       = GUIDOF!ID3D12PipelineLibrary1;
const GUID IID_ID3D12PipelineState                          = GUIDOF!ID3D12PipelineState;
const GUID IID_ID3D12ProtectedResourceSession               = GUIDOF!ID3D12ProtectedResourceSession;
const GUID IID_ID3D12ProtectedResourceSession1              = GUIDOF!ID3D12ProtectedResourceSession1;
const GUID IID_ID3D12ProtectedSession                       = GUIDOF!ID3D12ProtectedSession;
const GUID IID_ID3D12QueryHeap                              = GUIDOF!ID3D12QueryHeap;
const GUID IID_ID3D12Resource                               = GUIDOF!ID3D12Resource;
const GUID IID_ID3D12Resource1                              = GUIDOF!ID3D12Resource1;
const GUID IID_ID3D12Resource2                              = GUIDOF!ID3D12Resource2;
const GUID IID_ID3D12RootSignature                          = GUIDOF!ID3D12RootSignature;
const GUID IID_ID3D12RootSignatureDeserializer              = GUIDOF!ID3D12RootSignatureDeserializer;
const GUID IID_ID3D12ShaderReflection                       = GUIDOF!ID3D12ShaderReflection;
const GUID IID_ID3D12ShaderReflectionConstantBuffer         = GUIDOF!ID3D12ShaderReflectionConstantBuffer;
const GUID IID_ID3D12ShaderReflectionType                   = GUIDOF!ID3D12ShaderReflectionType;
const GUID IID_ID3D12ShaderReflectionVariable               = GUIDOF!ID3D12ShaderReflectionVariable;
const GUID IID_ID3D12SharingContract                        = GUIDOF!ID3D12SharingContract;
const GUID IID_ID3D12StateObject                            = GUIDOF!ID3D12StateObject;
const GUID IID_ID3D12StateObjectProperties                  = GUIDOF!ID3D12StateObjectProperties;
const GUID IID_ID3D12SwapChainAssistant                     = GUIDOF!ID3D12SwapChainAssistant;
const GUID IID_ID3D12Tools                                  = GUIDOF!ID3D12Tools;
const GUID IID_ID3D12VersionedRootSignatureDeserializer     = GUIDOF!ID3D12VersionedRootSignatureDeserializer;
const GUID IID_IHolographicCameraInterop                    = GUIDOF!IHolographicCameraInterop;
const GUID IID_IHolographicCameraRenderingParametersInterop = GUIDOF!IHolographicCameraRenderingParametersInterop;
const GUID IID_IHolographicQuadLayerInterop                 = GUIDOF!IHolographicQuadLayerInterop;
const GUID IID_IHolographicQuadLayerUpdateParametersInterop = GUIDOF!IHolographicQuadLayerUpdateParametersInterop;
